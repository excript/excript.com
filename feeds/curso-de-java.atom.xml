<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>eXcript</title><link href="http://excript.com/" rel="alternate"></link><link href="http://feeds.excript.com/feeds/curso-de-java.atom.xml" rel="self"></link><id>http://excript.com/</id><updated>2016-05-06T14:00:00-03:00</updated><entry><title>Instalando o JDK e o Eclipse</title><link href="http://excript.com/java/instalar-jdk-eclipse-java.html" rel="alternate"></link><published>2016-05-06T14:00:00-03:00</published><updated>2016-05-06T14:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:java/instalar-jdk-eclipse-java.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar diversos conceitos iniciais sobre a linguagem Java e diversas siglas relacionados a linguagem.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="o-que-e-java"&gt;
&lt;h2&gt;O QUE É JAVA?&lt;/h2&gt;
&lt;p&gt;O Java, em computação, pode ser tanto uma linguagem de programação, como também, o programa que interpreta códigos escritos em Java, ou melhor, bytecodes. Assim, se você ler que o Java é uma linguagem de programação, está correto e também, se você ler que o Java é um interpretador, também estará correto!&lt;/p&gt;
&lt;div class="section" id="java-como-um-programa"&gt;
&lt;h3&gt;JAVA COMO UM PROGRAMA&lt;/h3&gt;
&lt;p&gt;O Java é um programa como qualquer outro, onde o propósito é interpretar códigos Java. Podemos também dizer que o Java é uma maquina virtual (VM), até porque, o Java é por si só um arquitetura de computador, porém, uma arquitetura projetada para ser executada sobre outra arquitetura.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="java-como-linguagem"&gt;
&lt;h3&gt;JAVA COMO LINGUAGEM&lt;/h3&gt;
&lt;p&gt;O Java é uma linguagem de programação, isto é, uma definição de regras a serem interpretadas por uma Máquina Virtual especializada.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="instalando-o-jdk-java-development-kit"&gt;
&lt;h2&gt;INSTALANDO O JDK (Java Development Kit)&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;JDK&lt;/strong&gt; é o acrônimo de &lt;strong&gt;K&lt;/strong&gt; it de &lt;strong&gt;D&lt;/strong&gt; esenvolvimento &lt;strong&gt;J&lt;/strong&gt; ava. Esse é o &lt;a class="reference external" href="http://www.oracle.com/technetwork/pt/java/javase/downloads/index.html"&gt;kit de desenvolvimento que temos de baixar e instalar&lt;/a&gt; no nosso computador para que possamos escrever programas em Java e em seguida, executa-los.&lt;/p&gt;
&lt;p&gt;Devemos pensar no &lt;strong&gt;JDK&lt;/strong&gt; como um conjunto de programas contidos num mesmo arquivo executável (instalador) e que contém todas as ferramentas necessárias para o desenvolvimento Java.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sdk-ou-devkit"&gt;
&lt;h2&gt;SDK ou devkit&lt;/h2&gt;
&lt;p&gt;A sigla &lt;strong&gt;SDK&lt;/strong&gt; é um acrônimo de &lt;strong&gt;S&lt;/strong&gt; oftware &lt;strong&gt;D&lt;/strong&gt; evelopment &lt;strong&gt;K&lt;/strong&gt; it, ou seja, &lt;tt class="docutils literal"&gt;Kit de Desenvolvimento de Software&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Existem centenas de SDK, por exemplo, temos o SDK para desenvolvimento Java, Android, iOS, Windows e etc. Um &lt;strong&gt;SDK&lt;/strong&gt; deve ser pensado como o conjunto de ferramentas contidas geralmente num único instalador e disponibilizado por algum fabricante de software. Para desenvolvermos em Java, temos que baixar o SDK, que é desenvolvido e disponibilizado gratuitamente pela &lt;a class="reference external" href="http://www.oracle.com/"&gt;Oracle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tudo que é necessário para o desenvolvimento está contido no SDK, inclusive a Máquina Virtual do Java (JVM), que é o programa que interpreta código Java.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;devkit&lt;/strong&gt; para desenvolvimento em Java possui o nome de JDK.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-vm-e-jvm"&gt;
&lt;h2&gt;O QUE É VM e JVM?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;VM&lt;/strong&gt; é o acrônimo de &lt;strong&gt;V&lt;/strong&gt; irtual &lt;strong&gt;M&lt;/strong&gt; achine, isto é, Máquina Virtual.&lt;/p&gt;
&lt;p&gt;Existem dezenas de &lt;strong&gt;VM&lt;/strong&gt;'s como por exemplo, a VM que executa programas escritos em Python ou então a Java VM, que executa programas escritos em Java.&lt;/p&gt;
&lt;p&gt;A sigla &lt;strong&gt;JVM&lt;/strong&gt; é o acrônimo de &lt;strong&gt;J&lt;/strong&gt; ava &lt;strong&gt;V&lt;/strong&gt; irtual &lt;strong&gt;M&lt;/strong&gt; achine, que numa tradução livre significa: &lt;strong&gt;Máquina Virtual do Java&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;JVM&lt;/strong&gt; é um programa de computador escrito na linguagem de programação &lt;strong&gt;C_&lt;/strong&gt; e &lt;strong&gt;C++_&lt;/strong&gt;. A função da JVM é &lt;strong&gt;interpretar&lt;/strong&gt; códigos Java.&lt;/p&gt;
&lt;p&gt;Um programa escrito na linguagem Java não é convertido para um executável, &lt;tt class="docutils literal"&gt;*.exe&lt;/tt&gt; ou &lt;tt class="docutils literal"&gt;*.com&lt;/tt&gt;. Programas escritos em Java, quando compilados, produzem um outro arquivo de mesmo nome mas com outra extensão e este contém, uma série de instruções otimizadas para serem posteriormente executados/interpretados pela JVM.&lt;/p&gt;
&lt;p&gt;Então, todos os programas feitos com a linguagem Java serão interpretados por um outro programa chamado de JVM. Por essa razão é que temos que instalar o JDK antes de iniciarmos o desenvolvimento em Java, e também, será por essa razão que os nossos usuários precisarão instalar o Java para que seja possível executar nossos programas.&lt;/p&gt;
&lt;p&gt;É possível gerar um arquivo *.exe através de código Java, porém, essa ferramenta não está contida no pacote de desenvolvimento oficial do Java.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-j2se-e-java-se"&gt;
&lt;h2&gt;O QUE É J2SE E JAVA SE?&lt;/h2&gt;
&lt;p&gt;O termos &lt;strong&gt;J2SE&lt;/strong&gt;, &lt;strong&gt;Java SE&lt;/strong&gt; são acrônimos de &lt;strong&gt;Java Standard Edition&lt;/strong&gt;, que numa tradução livre, significa, &lt;strong&gt;Edição Padrão do Java&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;O acrônimo J2SE vem de &lt;a class="reference external" href="http://www.oracle.com/technetwork/pt/java/javase/downloads/index.html"&gt;Java 2 Standard Edition&lt;/a&gt; e o número 2 que está contido no meio do nome não possui qualquer significado. Essa é uma maneira de montar alguns tipos de expressões no idioma Inglês. Então, não podemos confundir esse número 2 como sendo um número que possui alguma representatividade. Este número no meio das palavras não passa de uma mera convenção e uma forma de expressão idiomática Inglêsa.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;Java SE&lt;/strong&gt; é um pacote que contém &lt;strong&gt;todas as ferramentas&lt;/strong&gt; que são necessárias para o desenvolvimento de programas em Java. Neste pacote nós encontramos o interpretador de códigos Java &lt;strong&gt;JVM&lt;/strong&gt;. O compilador de código Java para &lt;strong&gt;bytecode&lt;/strong&gt;, o &lt;cite&gt;javac&lt;/cite&gt;, as &lt;cite&gt;API&lt;/cite&gt; para o desenvolvimento de programas Java, e mais uma centenas de ferramentas e bibliotecas que serão utilizadas no processo de escrita, desenvolvimento e execução de aplicações Java.&lt;/p&gt;
&lt;p&gt;Atualmente o &lt;strong&gt;JDK&lt;/strong&gt; e o &lt;strong&gt;Java SE&lt;/strong&gt; são sinônimos como também, motivo de grande confusão. Inclusive, a Oracle chama o &lt;strong&gt;JDK&lt;/strong&gt; e o &lt;strong&gt;Java SE&lt;/strong&gt; atualmente de &lt;strong&gt;Java SE Development Kit&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-jre"&gt;
&lt;h2&gt;O QUE É JRE?&lt;/h2&gt;
&lt;p&gt;O termo &lt;strong&gt;JRE&lt;/strong&gt; é um acrônimo de &lt;strong&gt;J&lt;/strong&gt; ava &lt;strong&gt;R&lt;/strong&gt; untime &lt;strong&gt;E&lt;/strong&gt; nvironment que numa tradução livre significa, &amp;quot;Ambiente de Execução Java.&lt;/p&gt;
&lt;p&gt;Podemos dizer que o JRE é o Java propriamente dito, ou seja, esse é o programa que deve estar instalado num computador para que o mesmo possas executar programas escritos em java.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;JRE&lt;/strong&gt; é composto pela &lt;strong&gt;Java Virtual Machine (JVM)&lt;/strong&gt;, pelas classes do núcleo da plataforma Java e com as bibliotecas que compõem a plataforma Java propriamente dita.&lt;/p&gt;
&lt;p&gt;É importante observar que o &lt;strong&gt;JRE&lt;/strong&gt; não é um pacote de desenvolvimento Java, porém, todo computador que desenvolve programas Java terá instalado uma versão do JRE. Normalmente, o JRE é instalado na máquina de um desenvolvedor junto com o &lt;strong&gt;JDK&lt;/strong&gt; / &lt;strong&gt;Java SE&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-bytecode"&gt;
&lt;h2&gt;O QUE É BYTECODE?&lt;/h2&gt;
&lt;p&gt;O termo &lt;cite&gt;bytecode&lt;/cite&gt; é utilizado para se referir a uma linguagem intermediária. No caso, temos que bytecode é um conjunto de instruções otimizadas que a JVM interpreta nativamente. É normal dizer que os &lt;cite&gt;bytecodes&lt;/cite&gt; são códigos intermediários, isso porque, esse é o código gerado a partir de um código Java.&lt;/p&gt;
&lt;p&gt;Pense em bytecodes como sendo um código gerado a partir do código Java que você escreveu. Logo, a JVM não interpreta as instruções Java propriamente dita, mas sim, um código otimizado que foi gerado a partir das nossas instruções Java.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-orientacao-a-objetos"&gt;
&lt;h2&gt;O QUE É ORIENTAÇÃO A OBJETOS?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Orientação a objetos&lt;/strong&gt; é uma paradigma de programação, uma técnica de desenvolvimento de software, ou então, uma forma de projetar e desenvolver programas estruturados.&lt;/p&gt;
&lt;p&gt;Diz-se que uma linguagem é &lt;strong&gt;Orientada a Objetos&lt;/strong&gt; se essa manipular informações como sendo entidades representativas. Onde cada entidade é chamada de &lt;strong&gt;objeto&lt;/strong&gt; e cada &lt;strong&gt;objeto&lt;/strong&gt; é construido através de uma &lt;strong&gt;classe&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;O Java é considerado uma linguagem altamente orientada a objetos e essa é a sua principal característica.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Em Java tudo são classes!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No decorrer deste curso, falaremos, diversas vezes sobre orientação a objetos e, desde o primeiro programa que fizermos, no caso, o famoso &lt;tt class="docutils literal"&gt;Hello World&lt;/tt&gt; já estaremos trabalhando diretamente com conceitos de &lt;tt class="docutils literal"&gt;Orientação a Objetos&lt;/tt&gt;, mesmo que não saibamos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;CONCLUSÃO&lt;/h2&gt;
&lt;p&gt;É comum nos assustarmos com a quantidade de siglas e nomes quando iniciamos o estudo de uma linguagem de programação, e isso ocorrerá mesmo quando o estudante já possui noções de programação.&lt;/p&gt;
&lt;p&gt;Não vale a pena perder tempo se preocupando em decorar ou tentar memorizar essas siglas &amp;quot;a força&amp;quot;. Com vamos assimilando e gravando tanto as nomenclaturas como também os conceitos envolvidos. É interessante ir anotando essas nomenclaturas num papel para de vez em quando revisar rapidamente.&lt;/p&gt;
&lt;p&gt;Se você preferir, inicie um blog e vá anotando os conceitos em postagens diferentes e não somente isso, explique os conceitos com suas próprias palavras. Esse é um exercício que nos faz compreender e memorizar rapidamente e também, acaba por ajudar outras pessoas que estão iniciando na programação em Java!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="instalar"></category><category term="jdk"></category><category term="eclipse"></category><category term="sdk"></category><category term="vm"></category><category term="jvm"></category><category term="java se"></category><category term="bytecode"></category><category term="curso"></category><category term="java"></category><category term="aula de java"></category><category term="eXcript"></category><category term="blog"></category></entry><entry><title>Curso de Java</title><link href="http://excript.com/curso-de-java.html" rel="alternate"></link><published>2016-05-01T16:50:00-03:00</published><updated>2016-05-01T16:50:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:curso-de-java.html</id><summary type="html">&lt;div class="section" id="sobre-o-curso"&gt;
&lt;h2&gt;SOBRE O CURSO&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference internal" href="#curso-de-java"&gt;Curso de Java&lt;/a&gt; da &lt;a class="reference external" href="http://www.excript.com/"&gt;eXcript&lt;/a&gt; parte do princípio que o aluno está iniciando na programação e assim, todos os passos iniciais são descritos detalhadamente a fim de contemplar a todos os níveis.&lt;/p&gt;
&lt;p&gt;Se você está chegando agora na programação, seja muito bem-vindo e saiba que o nosso curso guiará você pelo caminho de se tornar um programador. Este curso não há pré-requisito, logo, não existe a necessidade de ter qualquer conhecimento prévio.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="e-a-logica-de-programacao"&gt;
&lt;h2&gt;E A LÓGICA DE PROGRAMAÇÃO?&lt;/h2&gt;
&lt;p&gt;Você aprenderá a lógica de programação com a linguagem &lt;strong&gt;Java&lt;/strong&gt; ! Isso mesmo! O estudo da lógica de programação, normalmente utiliza uma linguagem onde as instruções estão em Português.&lt;/p&gt;
&lt;p&gt;Pode até ser interessante para algumas pessoas criar seus primeiros programas numa linguagem onde tudo está em Português, porém, tão logo será necessário aprender as instruções em Inglês, haja vista que todas as linguagens estão nesse idioma.&lt;/p&gt;
&lt;p&gt;Por isso, &lt;strong&gt;NÃO EXISTE&lt;/strong&gt; a necessidade de você aprender uma linguagem para depois aprender outra! Ou seja, se você aprende lógica de programação e somente depois parte para o estudo da linguagem que desejas programar, estarás fazendo um caminho muito maior sem necessidade.&lt;/p&gt;
&lt;p&gt;Eu Cláudio, o instrutor deste curso, aprendi a programar diretamente numa linguagem de programação, no caso, o Pascal e por isso é que posso lhe garantir: você não precisa estudar outra linguagem para somente então estudar &lt;strong&gt;Java&lt;/strong&gt;! Encurte caminho e adiante sua vida!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="java-logica-de-programacao"&gt;
&lt;h2&gt;JAVA + LÓGICA DE PROGRAMAÇÃO&lt;/h2&gt;
&lt;p&gt;Cada estrutura encontrada nas principais linguagens de programação será estudada nesse curso. Assim, você aprendera verificar se uma condição é ou não verdadeira, como também, executar uma instrução por uma quantidade de vezes, invocar e definir funções e etc com a linguagem &lt;strong&gt;Java&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ao término dessas aulas terás o mesmo conhecimento de um aluno que estudou lógica de programação, a diferença, é que você já saberá programar em &lt;strong&gt;Java&lt;/strong&gt;, enquanto que o aluno que iniciou os estudos pela lógica de programação terá que iniciar o estudo do &lt;strong&gt;Java&lt;/strong&gt; desde o início!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lista-das-aulas"&gt;
&lt;h2&gt;LISTA DAS AULAS&lt;/h2&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="java"></category><category term="curso de java"></category><category term="aula de java"></category><category term="eXcript"></category><category term="blog"></category></entry><entry><title>Manipulando Planilha em Java</title><link href="http://excript.com/java/manipulando-planilha.html" rel="alternate"></link><published>2015-07-21T23:11:00-03:00</published><updated>2015-07-21T23:11:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-07-21:java/manipulando-planilha.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprenderemos a trabalhar e manipular dados que estejam contidos numa planilha.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="java"></category></entry><entry><title>Introdução as constantes em Java</title><link href="http://excript.com/java/constante-java.html" rel="alternate"></link><published>2014-02-25T00:35:00-03:00</published><updated>2014-02-25T00:35:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-25:java/constante-java.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o conceito de constantes e aprenderemos como definir valor constante em Java.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="constantes"&gt;
&lt;h2&gt;CONSTANTES&lt;/h2&gt;
&lt;p&gt;Constante é uma referência que após defindo um valor, este não podera ser alterado durante o tempo de execução.&lt;/p&gt;
&lt;p&gt;Na prática, o funcionamento é semelhante ao uso de variáveis, sendo a única diferença, que após definido um primeiro valor, este não poderá ser alterado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conceito"&gt;
&lt;h2&gt;CONCEITO&lt;/h2&gt;
&lt;p&gt;Em programação, uma constante é a alocação de uma espaço na memória para guardar um valor durante toda a execução de um programa ou então, durante a execução de um determinado &lt;strong&gt;Bloco de Instrução&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As constantes, são bastante semelhante ao funcionamento e uso das variáveis, a diferença, é que não podemos alterar o seu valor em tempo de execução. Se, durante o desenvolvimento de um software, definirmos que uma constante deve conter o valor inteiro 5, está, em hipótese alguma, conseguira alterar o seu valor em tempo de execução.&lt;/p&gt;
&lt;p&gt;Quando estamos iniciando na programação, é comum pensarmos que o uso de constantes ao invés de ajudar, atrapalha no desenvolvimento, o que muitas vezes pode ser uma verdade aparente.  Assim, partimos do pressuposto que sempre lembraremos que determinada referência não poderá ter o seu valor alterado e então, optamos por trabalhar com uma variável, até porque, a mesma é mais flexível.&lt;/p&gt;
&lt;p&gt;Esse tipo de pensamento, sob olhar da teoria está totalmente errado, e no olhar prático, estamos cometendo um erro gigantesco.&lt;/p&gt;
&lt;p&gt;Temos que ter em mento, que o objetivo de uma constante, como o nome sugere, é assegurar que determinada informação não será alterada, em hipótese alguma. Trabalhar com constantes faz o nosso programa ser mais seguro e menos propenso a erros. Até porque, estamos garantindo que um valor constante não será alterado durante a execução da aplicação.&lt;/p&gt;
&lt;p&gt;Em Java, definimos uma constante colocando a palavra final a frente da declaração, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;NOME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe a instrução final a frente da declaração. Esta é a responsável por declarar que um determinado membro não poderá ter o seu valor alterado.&lt;/p&gt;
&lt;p&gt;Em Java, existe um peculiaridade quando trabalhamos com constantes. Nós podemos declarar uma constante sem inicializá-la. A partir do momento que um valor for atribuído, este não mais poderá ser alterado. Assim, temos a liberdade de definir o valor da constante de maneira dinâmica, o que facilita a programação, porém, pode ocasionar problemas.&lt;/p&gt;
&lt;p&gt;Os nomes das constantes sempre devem estar em letra maiúscula, assim, conseguimos distinguir facilmente entre uma variável e uma constante. O Java não nos obriga a definir o nome das constantes com letra maiúscula, porém, essa é uma convenção da comunidade e devemos segui-la.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;VELOCIDADE_SOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;340&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;// m/s&lt;/span&gt;
&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;VELOCIDADE_LUZ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;299.792&lt;/span&gt; &lt;span class="mi"&gt;458&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;// m/s&lt;/span&gt;
&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.14159&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Aula0015&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;        * 1) os dados nunca serão alterados&lt;/span&gt;
&lt;span class="cm"&gt;        * 2) uma constante tem o seu endereço protegido&lt;/span&gt;
&lt;span class="cm"&gt;        * 3) uma cosntante nunca será desalocada&lt;/span&gt;
&lt;span class="cm"&gt;        * 4) declaramos uma vez, utilizamos quantas vezes forem necessárias&lt;/span&gt;
&lt;span class="cm"&gt;        * */&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//declaração de variável&lt;/span&gt;
        &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;constante&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//declaração de constantes&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;constante&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;

     &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="java"></category></entry><entry><title>Tipos Primitivos do Java (parte II)</title><link href="http://excript.com/java/tipo-primitivo-java-parte2.html" rel="alternate"></link><published>2014-02-24T23:54:00-03:00</published><updated>2014-02-24T23:54:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-24:java/tipo-primitivo-java-parte2.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula, vamos continuar o estudo acerca dos tipos primitivos da linguagem Java.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Nessa segunda aula sobre os tipos primitivos, nós teremos uma visão um pouco mais prática. Assim, nós veremos as formas de como trabalhar com variáveis do tipo char, ou então, variáveis do tipo flutuante booleanas e de tipos inteiros.&lt;/p&gt;
&lt;p&gt;A manipulação de variáveis do tipo inteiro não envolve nenhum grande conhecimento e até esse momento, nós já manipulamos dezenas de variáveis que eram de algum tipo primitivo que estamos estudando. Assim, nossa meta a partir de agora, é fazer com que a manipulação de variáveis e os tipos primitivos sejam um pouco mais natural, até porque, esses são os tipos mais utilizados e também, são os tipos que irão formar todas as classes que iremos desenvolver.&lt;/p&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Aula0019&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//tipos primitivos no Java&lt;/span&gt;

        &lt;span class="c1"&gt;//por padrão ele sempre será false&lt;/span&gt;
        &lt;span class="c1"&gt;//ocupa 1 byte, ou 8 bits&lt;/span&gt;

        &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//por padrão, o char é igual a &amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="c1"&gt;//ocupa 2 bytes, 16 bits&lt;/span&gt;

        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//por padrão 0 a nossa variável&lt;/span&gt;
        &lt;span class="c1"&gt;//byte ocupa 1 byte memória&lt;/span&gt;
        &lt;span class="kt"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;Byte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;bb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//-128 e +127 em 1 byte de memória&lt;/span&gt;

        &lt;span class="c1"&gt;//por padrão, o Java abribui 0 a nossa variável&lt;/span&gt;
        &lt;span class="c1"&gt;//-32768 + 32767&lt;/span&gt;
        &lt;span class="kt"&gt;short&lt;/span&gt; &lt;span class="n"&gt;camisa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//por padrão o java atribui 0 a nossa variável&lt;/span&gt;
        &lt;span class="c1"&gt;//-2,147,483,648 + 2,147,486,647&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="java"></category></entry></feed>