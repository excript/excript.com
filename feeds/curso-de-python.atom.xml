<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>eXcript</title><link href="http://excript.com/" rel="alternate"></link><link href="http://excript.com/feeds/curso-de-python.atom.xml" rel="self"></link><id>http://excript.com/</id><updated>2016-06-01T02:00:00-03:00</updated><entry><title>Operadores de Atribuição Compostos do Python</title><link href="http://excript.com/python/operadores-de-atribuicao-compostos-python.html" rel="alternate"></link><published>2016-06-01T02:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-01:python/operadores-de-atribuicao-compostos-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os Operadores de Atribuição Compostos da linguagem Python que, além de adicionarem o valor a direita do operador de atribuição, realizar uma determinada operação antes da atribuição propriamente dita&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="operadores-compostos"&gt;
&lt;h2&gt;OPERADORES COMPOSTOS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;Operadores de Atribuição Compostos&lt;/strong&gt; realizam uma operação e em seguida, atribuem o resultado da operação para a variável que está a esquerda do operador de atribuição.&lt;/p&gt;
&lt;p&gt;Estudamos a &lt;a class="reference external" href="http://excript.com/python/operador-de-atribuicao-python.html"&gt;atribuição simples&lt;/a&gt; em aulas passadas e aprendemos as 2 partes que constituem a estrutura de atribuição da linguagem, bem como o seu funcionamento de maneira geral.&lt;/p&gt;
&lt;p&gt;Nesta aula continuaremos o estudo da atribuição, porém, estudaremos os operadores de atribuição compostos, isto é, os operadores que além de atribuirem o valor a sua direita à variável a sua esquerda, realizam antes alguma operação.&lt;/p&gt;
&lt;p&gt;É comum precisarmos realizar alguma operação, geralmente matemática, e atribuir o resultado a alguma variável. Podemos resolver esse problema realizando a operação sobre determinado valor e em seguida, atribuir o resultado a alguma variável. No entanto, essa é uma situação tão corriqueira que, criou-se operadores que, primeiro, realizam uma operação e em seguida, atribuem o resultado à variável a esquerda.&lt;/p&gt;
&lt;p&gt;Atualmente há 5 operadores compostos disponibilizados pela linguagem Python. Os 4 primeiros para as operações matemáticas fundamentais, soma, subtração, multiplicação e divisão. O quinto e último é para a &lt;a class="reference external" href="_`MódulodaDivisãoemPython`"&gt;operação módulo, isto é, o operador que retorna o resto de uma divisão&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;OPERADORES COMPOSTOS&lt;/h2&gt;
&lt;p&gt;A seguir, temos a lista com os 5 operadores compostos do Python:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="41%" /&gt;
&lt;col width="59%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;OPERADOR&lt;/td&gt;
&lt;td&gt;NOME&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;+=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;mais igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-=&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;menos igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;*=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;vezes igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;/=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;dividido igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;%=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;módulo igual&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Como podemos ver na tabela acima, os operadores compostos são formados pela junção do operador de atribuição com o &lt;a class="reference external" href="http://excript.com/python/operador-aritmetico-em-python.html"&gt;operadores aritméticos&lt;/a&gt;, onde o operador matemático precede o operador de atribuição.&lt;/p&gt;
&lt;p&gt;Uma maneira de facilitar o entendimento e memorização dos operadores compostos, é saber lê-los corretamente, por exemplo: o operador que soma e atribui é chamado de &lt;tt class="docutils literal"&gt;Mais Igual&lt;/tt&gt;, isto é, o valor a esquerda do sinal de atribuição será somado com o valor a direita e o resultado dessa operação, será atribuido à variável a esquerda do sinal de atribuição.&lt;/p&gt;
&lt;p&gt;A seguir, um trecho de código em que é feito uma operação com cada um dos 5 operadores de atribuição compostos. A direita de cada operação há o respectivo resultado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;maisIgual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;menosIgual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vezesIgual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;divididoIgual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;moduloIgual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;

&lt;span class="n"&gt;maisIgual&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;#resultado 10&lt;/span&gt;
&lt;span class="n"&gt;menosIgual&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;#resultado 8&lt;/span&gt;
&lt;span class="n"&gt;vezesIgual&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;#resultado 9&lt;/span&gt;
&lt;span class="n"&gt;divididoIgual&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;#resultado 9&lt;/span&gt;
&lt;span class="n"&gt;moduloIgual&lt;/span&gt; &lt;span class="o"&gt;%=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;#resultado 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O mais importante a saber dessa aula, talvez seja, como ler cada operador e sempre lembrar, que antes de qualquer valor ser atribuído, é necessário resolver a operação a direita do sinal de atribuição.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="operadores"></category><category term="operadores de atribuição"></category><category term="operadores de atribuição compostos"></category><category term="blog"></category></entry><entry><title>Atribuição Múltipla em Python</title><link href="http://excript.com/python/atribuicao-multipla-python.html" rel="alternate"></link><published>2016-06-01T01:30:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-01:python/atribuicao-multipla-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a atribuição múltipla, uma ferramenta da linguagem Python para atribuirmos vários valores a várias variáveis numa única expressão.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;img alt="Atribuição múltipla" src="../images/curso-de-python/atribuicao-multipla.png" /&gt;
&lt;p&gt;A atribuição de valores é uma tarefa corriqueira e essencial no desenvolvimento de software. Algumas linguagens como o Python, definem notações diferente para atribuição, permitindo assim, por exemplo, inicializar várias variáveis ou então, atribuir valores diferentes para diferentes variáveis numa mesma expressão.&lt;/p&gt;
&lt;p&gt;Nosso objetivo nessa aula é o estudo da atribuição múltipla, isto é, a atribuição de vários valores a várias variáveis numa mesma expressão. Dessa forma, teremos em ambos lados do operador de atribuição um conjunto de variáveis e de valores.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="atribuicao-multipla"&gt;
&lt;h2&gt;ATRIBUIÇÃO MULTIPLA&lt;/h2&gt;
&lt;p&gt;A atribuição múltipla é a capacidade de atribuir um conjunto de valores a um conjunto de variáveis. Ambos conjuntos precisam, obrigatoriamente, possuir a mesma quantidade de elementos, isto é, a quantidade de variáveis a esquerda deve ter a mesma quantidade de valores a direita, como pode ser visto no código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos declarando e atribuindo valores a 2 variáveis. A primeira variável de nome &lt;tt class="docutils literal"&gt;a&lt;/tt&gt;, está sendo atribuido o valor 1, e a segundo variável de nome &lt;tt class="docutils literal"&gt;b&lt;/tt&gt;, esta sendo atribuido o valor 2.&lt;/p&gt;
&lt;p&gt;A ordem em que as variáveis estão dispostas a esquerda, receberá, na mesma ordem, os respectivos valores a direita.&lt;/p&gt;
&lt;p&gt;Assim, sendo a variável &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; a primeira, e a variável &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; a segunda, estas receberam, respectivamente, o primeiro valor, e o segundo valor, respectivamente, definido no lado direito do operador de atribuição.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcionamento-da-atribuicao-multipla"&gt;
&lt;h2&gt;FUNCIONAMENTO DA ATRIBUIÇÃO MÚLTIPLA&lt;/h2&gt;
&lt;p&gt;A atribuição múltipla é a atribuição de uma tupla a outra, onde os valores da tupla a direita do sinal de atribuição, serão atribuídos, para as respectivas variáveis, na dupla do lado esquerdo do sinal de atribuição.&lt;/p&gt;
&lt;p&gt;Não estudamos ainda as tuplas, porém, pense nas mesmas como sendo estruturas de valores em que cada valor é separado dos demais pelo uso de vírgulas. &lt;a class="reference external" href="_`TuplasemPython`"&gt;Segue o link onde estudaremos as estruturas de Tuplas do Python&lt;/a&gt;.&lt;/p&gt;

    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;A atribuição múltipla é um recurso da linguagem Python que acaba sendo, uma consequência da definição da linguagem. Isso porque, a notação para definição de tuplas se dá pelo uso de vírgula, assim, todas as vezes em que tivermos um conjunto de objetos dispostos em ordem e separados por vírgulas, está disposição, será reconhecida pela linguagem, como sendo uma tupla e a funcionalidade da atribuição múltipla, acaba sendo, uma consequência da definição de tupla e não um recurso da linguagem&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;No código abaixo, declaramos 3 variáveis e estamos inicializando-as com os números 1, 2 e 3 respectivamente. Como podemos observar, a notação de tupla está sendo utilizada em ambos os lados da atribuição! Assim, podemos dizer que, estamos atribuindo, uma tupla a outra, onde a primeira tupla é composta pelos elementos &lt;tt class="docutils literal"&gt;a, b, c&lt;/tt&gt; e a segunda tupla, pelos elementos, &lt;tt class="docutils literal"&gt;1, 2, 3&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Da mesma forma, temos que a notação a seguir, que torna explicito o uso de tupla, é totalmente válida e funcional.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos 2 variáveis, respectivamente, &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;y&lt;/tt&gt; e delimitamo-as por parêntesis, o que diz ao Python que estamos trabalhando com Tuplas. Ainda assim, ambas variáveis, &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; foram declaradas no escopo local e inicializadas com os valores 1 e 2 respectivamente.&lt;/p&gt;
&lt;p&gt;Essa é uma notação ambigua e funcional e que torna toda a linguagem muito mais coesa. Como veremos, há outras situações onde o Python possui ambiguidades funcionais e que são, muito úteis.&lt;/p&gt;

    &lt;div class="admonitionblock important data-line-21"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                &lt;td class="icon"&gt;
                    &lt;i class="fa icon-important" title="Importante!"&gt;&lt;/i&gt;
                &lt;/td&gt;
                &lt;td class="content"&gt;
                    &lt;div class="paragraph data-line-22"&gt;
                        &lt;p&gt;Essa é uma das raras ocasiões em que a linguagem possui ambiguidades, até porque, uma das características do Python é não repetir a si mesmo. Novamente, o que possibilita 2 definições para uso da atribuição múltipla decorre da notação utilizada para a definição de tuplas!&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="atribuição"></category><category term="atribuição múltipla"></category><category term="blog"></category></entry><entry><title>Estrutura de Atribuição Simples do Python</title><link href="http://excript.com/python/operador-de-atribuicao-python.html" rel="alternate"></link><published>2016-06-01T01:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-01:python/operador-de-atribuicao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o Operador de Atribuição do Python bem como a relação entre a parte esquerda e direita que formam a estrutura de atribuição do Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="a-atribuicao-de-valores"&gt;
&lt;h2&gt;A ATRIBUIÇÃO DE VALORES&lt;/h2&gt;
&lt;img alt="Atribuição Simples em Python" src="../images/curso-de-python/op-atribuicao-simples1.png" /&gt;
&lt;p&gt;A &lt;tt class="docutils literal"&gt;Atribuição de Valores&lt;/tt&gt; é a passagem de informação a determinada variável. Toda variável, por sua definição, pode receber valores ou então, pode ter seu valor alterado, como estudado anteriormente nas aulas &lt;a class="reference external" href="http://excript.com/python/variavel-em-python.html"&gt;Variáveis em Python&lt;/a&gt; e &lt;a class="reference external" href="http://excript.com/python/caracteristicas-das-variaveis-python.html"&gt;Características das Variáveis em Python&lt;/a&gt; . Nesse primeiro momento, estudaremos a atribuição simples, isto é, a forma comum de atribuição.&lt;/p&gt;
&lt;p&gt;A linguagem Python tem definido que o sinal que conhecemos pelo nome de igual ( &lt;strong&gt;=&lt;/strong&gt; ) será o operador de atribuição. Desta forma, iremos construir expressões compostas de 2 partes, ou melhor que estarão em um dos dois lados do operador de atribuição: do lado esquerdo e do lado direito.&lt;/p&gt;
&lt;p&gt;A parte ao lado esquerdo do operador de atribuição &lt;strong&gt;sempre&lt;/strong&gt; receberá o valor definido no lado direito do operador. Assim, é uma norma da linguagem que o lado esquerdo possua uma referência que possa ter seu valor alterado, enquanto que do lado direito, haja algum valor a ser atribuido à referência ao lado esquerdo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;variável&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;operador&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;valor&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;variável&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;valor&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;numero&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt;     &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No trecho de código acima podemos ver como ocorre a passagem de valores e o uso do operador de atribuição na prática.&lt;/p&gt;
&lt;p&gt;A notação para atribuição de valores define que a variável que receberá o valor estará do lado esquerdo do sinal de atribuição &lt;tt class="docutils literal"&gt;=&lt;/tt&gt;, enquanto o valor a ser atribuido, estara do lado direito. Assim, &lt;strong&gt;é correto afirmar&lt;/strong&gt; que a atribuição de valores sempre seguira o sentido da direita para a esquerda.&lt;/p&gt;
&lt;p&gt;No código a seguir, temos mais um exemplo onde declaramos variáveis e já atribuimos um valor às mesmas.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;texto&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos 2 variáveis, a primeira de nome &lt;tt class="docutils literal"&gt;num&lt;/tt&gt; e a segunda de nome &lt;tt class="docutils literal"&gt;txt&lt;/tt&gt;. Ambas foram declaradas e receberam um valor inicial. O valor inicialmente atribuido irá definir o &lt;tt class="docutils literal"&gt;tipo&lt;/tt&gt; da variável, de modo a impedir que a mesma receba valores de outro tipo durante toda a execução do Script.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="atribuicao-simples-a-varias-variaveis"&gt;
&lt;h2&gt;ATRIBUIÇÃO SIMPLES A VÁRIAS VARIÁVEIS&lt;/h2&gt;
&lt;img alt="Atribuição Simples a várias variáveis em Python" src="../images/curso-de-python/op-atribuicao-simples2.png" /&gt;
&lt;p&gt;A notação de atribuição simples do Python nos permite atribuir a várias variáveis um mesmo valor numa mesma expressão. Para isso, devemos separar as variáveis que receberam o mesmo valor com vírgulas.&lt;/p&gt;
&lt;p&gt;No geral, as regras da atribuição estudas funcionam da mesma forma.&lt;/p&gt;
&lt;p&gt;No código abaixo, estamos realizando outra atribuição simples, porém, utilizando um notação diferente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos 3 variáveis. A primeira, chamamos de &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; e atribuimos o valor 1. A segunda e a terceira, chamamos de &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;c&lt;/tt&gt;, separando-as por vírgula e iniciando-as com o valor igual a 2.&lt;/p&gt;
&lt;p&gt;Podemos iniciar mais de uma variável numa mesma atribuição, ou então, em outras palavras, podemos atribuir valores a várias variáveis ao mesmo tempo e a notação utilizada nessas 2 situações foi a mesma, salvo o uso da vírgula na separação da primeira e da segunda variável que receberão um novo valor.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="operador"></category><category term="operador de atribuição"></category><category term="atribuicao simples"></category><category term="blog"></category></entry><entry><title>Escopo de Nomes em Python</title><link href="http://excript.com/python/escopo-de-nome-python.html" rel="alternate"></link><published>2016-05-21T05:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-21:python/escopo-de-nome-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos o Escopo de Nomes e continuar nosso estudo sobre os blocos de instrução.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="escopo"&gt;
&lt;h2&gt;ESCOPO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Escopo de Nome&lt;/strong&gt; tem a função de classificar quais nome de variáveis, funções, classes estão acessíveis em cada &lt;strong&gt;bloco de instrução&lt;/strong&gt;. O escopo, também é responsável por inutilizar variáveis declaradas e que não serão mais utilizadas, podendo assim, serem removidas da memória pela Máquina Virtual do Python.&lt;/p&gt;
&lt;p&gt;Temos que enxergar o escopo de nomes como mini-programas, onde todas as variáveis declaradas são globais e restritas ao seu bloco. Um bloco de código que possua outros blocos de códigos, definirá um escopo de nomes para cada novo bloco definido e restringira os nomes ali definidos.&lt;/p&gt;
&lt;p&gt;A seguir, temos um código bastante simples e que o Python não executa, isso porque, colocamos funções em blocos de instrução diferentes sem utilizarmos para isso, alguma estrutura que permitisse a utilização de diversos blocos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cada instrução &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; foi utilizada num bloco de instrução novo, e por isso, possui seu escopo restrito. Se tivéssemos declarações de variáveis em cada bloco de instrução, estes seriam liberados quando o cursor de execução retornasse ao nível hierarquico anterior.&lt;/p&gt;
&lt;p&gt;A seguir, temos outro código para demonstração que também não será executado, porém, que nos ajudará a entender melhor o escopo de nomes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos várias variáveis em blocos de instrução diferentes. Caso o código compilasse sem problema, temos que todas as variáveis declaradas em escopos hierarquicamente a frente, seriam desalocadas quando o cursor de execução voltasse ao nível anterior. Assim, temos que todo escopo consegue enxergar os nomes declarados no bloco onde está contido, porém o contrário não é verdadeiro.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="c1"&gt;#erro a variável c já foi liberada pelo Garbage Collector da VM do Python&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, caso fosse possível executar, haveria um erro na soma de &lt;tt class="docutils literal"&gt;b + c&lt;/tt&gt;, isso porque, a variável &lt;tt class="docutils literal"&gt;c&lt;/tt&gt; foi desalocada quando o cursor de execução voltou para o segundo nível hierarquico.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="escopo"></category><category term="blog"></category></entry><entry><title>Blocos de Instrução em Python</title><link href="http://excript.com/python/bloco-de-instrucao-python.html" rel="alternate"></link><published>2016-05-21T03:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-21:python/bloco-de-instrucao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Os blocos de instrução fazem parte de qualquer código Python como também, organizando o escopo de variáveis de funções.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="bloco-de-instrucao"&gt;
&lt;h2&gt;BLOCO DE INSTRUÇÃO&lt;/h2&gt;
&lt;p&gt;Bloco de instrução é o conjunto das instrução qu estejam num mesmo nível de indentação.&lt;/p&gt;
&lt;p&gt;Programas em Python podem conter centenas de linhas. É comum em toda aplicação que, códigos que desempenham determinada ação possuam a mesma quantidade de espaços, isto é, tenham a mesma indentação.&lt;/p&gt;
&lt;p&gt;A linguagem Python oferece algumas notações para delimitarmos, ou melhor, definirmos, o que chamamos de blocos de instrução ou somente: &lt;strong&gt;blocos&lt;/strong&gt;. Um conjunto de linhas marcadas com comentários também formam blocos, porém, blocos de de comentário. Como estudamos, nossa aplicação quando executada, ignora qualquer linhas marcada como sendo comentários. Do contrário, todo conjunto de linhas que estejam indentadas estarão formando um bloco - um bloco de instrução e que será executado linha-a-linha.&lt;/p&gt;
&lt;p&gt;A principal características dos blocos, é que estes serão executados por inteiro, salvo nas vezes em que usarmos uma instrução para a interromper o fluxo normal.&lt;/p&gt;
&lt;p&gt;O Python diferencia um bloco de instrução de outro através da indentação, isto é, do espaçamento a contar da margem esquerda do vídeo. Por isso temos que a linguagem Python, nos obriga a trabalharmos de maneira organizada - organizando os blocos em níveis hierarquicos diferentes, o que melhora a legibilidade e diminui a quantidade de linhas e caracteres utilizados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="definindo-blocos"&gt;
&lt;h2&gt;DEFININDO BLOCOS&lt;/h2&gt;
&lt;p&gt;Vamos fazer um exemplo utilizando 2 blocos de instrução. O primeiro bloco estará rente a margem esquerda do vídeo, enquanto o segundo, estará 4 espaçamentos da margem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nível 0. Este código está rente a margem do vídeo.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Estamos no bloco 1, isto é, a 4 espaçamentos da margem.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Essa é a segunda linha do bloco &amp;#39;if&amp;#39;. &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Agora, voltamos para o bloco principal do programa.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, utilizamos 2 blocos de instrução. O primeiro bloco, que podemos dizer, o bloco de instrução principal, é a indentação rente a margem esquerda, ou melhor, corresponde as linhas que não possuem indentação.&lt;/p&gt;
&lt;p&gt;O segundo bloco de instrução, é o bloco que está a 4 espaços da margem esquerda e este só será executado nas situações em que a instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; for verdadeira.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nomes"&gt;
&lt;h2&gt;NOMES&lt;/h2&gt;
&lt;p&gt;É comum chamarmos de &lt;tt class="docutils literal"&gt;nome&lt;/tt&gt; toda e qualquer declaração de variável, seja ela uma instrução, classe, variável, constante e etc.&lt;/p&gt;
&lt;p&gt;Todo nome pertencerá, por definição, ao escopo onde foi declarado, podendo ser acessada somente, em níveis superiores, mas nunca em níveis inferiores da hierarquia formada com a indentação. Até porque, quando o cursor de execução volta ao nível inferior, todos os nomes declarados nas hierarquias acima, serão desalocados da memória e por conseguinte, não poderão ser acessados e todos valores ali definidos serão removidos da memória.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hierarquia"&gt;
&lt;h2&gt;HIERARQUIA&lt;/h2&gt;
&lt;p&gt;Os blocos de instrução constroem hierarquias e estas, podem ser reconhecidas visualmente, até porque, níveis hierarquicos diferentes, estarão a distâncias diferentes da margem esquerda do editor.&lt;/p&gt;
&lt;p&gt;Todo bloco é único e será executado plenamente após o cursor iniciar sua execução. Nomes declarados dentro de blocos, serão desalocados da memória quando estes tiverem sua execução finalizada e, todo bloco contido dentro de outro, terá visibilidade restrita a todos os nomes ali definidos.&lt;/p&gt;
&lt;p&gt;A seguir, temos um código que exemplifica o uso de vários blocos de instrução.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 2&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 2&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 2&lt;/span&gt;
        &lt;span class="c1"&gt;#bloco 3&lt;/span&gt;
        &lt;span class="c1"&gt;#bloco 3&lt;/span&gt;
        &lt;span class="c1"&gt;#bloco 3&lt;/span&gt;
        &lt;span class="c1"&gt;#bloco 3&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 4&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 4&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 4&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 4&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, utilizamos 3 níveis hierarquicos, porém, utilizamos 4 blocos diferentes, mesmo que hierarquicamente, temos somente 3 níveis.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;bloco 2&lt;/strong&gt; e o &lt;strong&gt;bloco 4&lt;/strong&gt; estão, hierarquicamente, no mesmo nível. Porém, após a execução do &lt;strong&gt;bloco 2&lt;/strong&gt;, todos os &lt;strong&gt;nomes&lt;/strong&gt; utilizados dentro deste serão desalocados da memória e assim, quando o &lt;strong&gt;bloco 4&lt;/strong&gt; for executado, não será possível enxergar nomes utilizados no &lt;strong&gt;bloco 2&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;Todas as vezes que o cursor de execução do programa retorna um nível da hierarquia, ou seja, volta para o bloco de instrução que contém as instruções que estava sendo executadas, o bloco que estava sendo executado é desalocado, junto a todos os nome ali declarados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Imprime um texto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Imprime um texto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Imprime um texto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Imprime um texto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="blocos"></category><category term="instrução"></category><category term="blocos de instrução"></category><category term="blog"></category></entry><entry><title>Blocos de Instrução Python na Prática</title><link href="http://excript.com/python/blocos-de-instrucao-python-na-pratica.html" rel="alternate"></link><published>2016-05-21T02:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-21:python/blocos-de-instrucao-python-na-pratica.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos desenvolver um exemplo utilizando Blocos de Instrução e trabalhando com o Escopo de Nomes para que possamos melhor entender ambos conceitos.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;No bloco de código a seguir, fazemos um simples programa que utiliza vários blocos de instrução, junto com a tomada de decisão.&lt;/p&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é maior do que 10!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é maior do que 10, mas menor do que 15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é maior do que 10, mas menor do que 50!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é maior do que 50!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número é menor do que 10 mas maior do que 5!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O númer é igual a 7.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é menor do que 5.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="blog"></category></entry><entry><title>Blocos de Instrução em Python (Parte II)</title><link href="http://excript.com/python/blocos-de-instrucoes-python.html" rel="alternate"></link><published>2016-05-21T01:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-21:python/blocos-de-instrucoes-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos fazer um exemplo utilizando Blocos de Instrução e Escopo de Nomes&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Esta aula é a continuação da aula anterior e não possui texto especifico.&lt;/p&gt;
</summary><category term="curso"></category><category term="python"></category><category term="blog"></category></entry><entry><title>Operadores Relacionais na Prática em Python</title><link href="http://excript.com/python/operadores-relacionais-na-pratica-python.html" rel="alternate"></link><published>2016-05-17T03:30:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-17:python/operadores-relacionais-na-pratica-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Esta aula é a continuação prática do Operadores Relacionais da Linguagem Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;!-- TODO: falar sobre os sinais utilizados dentro das expressões, como %d, %f, %i --&gt;
&lt;div class="section" id="praticando-o-estudo-dos-operadores-relacionais"&gt;
&lt;h2&gt;PRATICANDO O ESTUDO DOS OPERADORES RELACIONAIS&lt;/h2&gt;
&lt;p&gt;Esta aula é continuação do estudo sobre os operadores relacionais iniciado em aulas passadas. Agora, vamos realizar alguns exemplos e estuda-los para ue possamos ver a aplicabilidade desses operadores e como os mesmo funcionam.&lt;/p&gt;
&lt;p&gt;Abaixo há o exemplo feito para a continuação do nosso estudo.&lt;/p&gt;
&lt;p&gt;Esta aula é a última sobre os Operadores Relacionais. Caso necessário, &lt;a class="reference external" href="http://excript.com/python/operador-relacional-python.html"&gt;estude novamente a nossa aula sobre os Operadores Relacionais de maneira ampla e geral&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Caso necessário, reveja também a &lt;a class="reference external" href="http://excript.com/python/operador-relacional-composto-python.html"&gt;nossa aula sobre os Operadores Relacionais Compostos&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;numero1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;numero1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;numero2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um segundo número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;numero2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#operador de igualdade&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é igual a &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;. &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#operador de diferença&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é diferente de &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#operador menor que&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é menor que o &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#operdor de maior que&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é maior que o &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#maior ou igual que&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é maior ou igual que &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#menor ou igual que&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é menor ou igual que &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="operadores"></category><category term="operadores relacionais"></category><category term="operadores relacionais compostos"></category><category term="blog"></category></entry><entry><title>Operadores Relacionais Compostos do Python</title><link href="http://excript.com/python/operador-relacional-composto-python.html" rel="alternate"></link><published>2016-05-17T02:30:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-17:python/operador-relacional-composto-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula continuaremos o estudo sobre os Operadores Relacionais, porém, estudaremos especificamente os operadores relacionais compostos. Essa aula pode ser considerada a parte prática da aula anteriormente estudada sobre os Operadores Relacionais da linguagem Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="revisao-dos-operadores-relacionais"&gt;
&lt;h2&gt;REVISÃO DOS OPERADORES RELACIONAIS&lt;/h2&gt;
&lt;p&gt;Em aulas anteriores estudamos os operadores relacionais simples, isto é, os operadores relacionais que fazem um única comparação e são representados por um único simbolo. Aprendemos que existem 3 operadores, conforme a tabela a seguir demonstra.&lt;/p&gt;
&lt;p&gt;Abaixo temos a &lt;a class="reference external" href="http://excript.com/python/operador-relacional-python.html"&gt;Tabela dos Operadores Relacionais Simples estudados em aulas anteriores&lt;/a&gt; .&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="67%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Descrição&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Maior que&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;gt;&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Menor que&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;lt;&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;==&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Como podemos ver, há 3 operadores relacionais fundamentais. O operador que verifica se um operando &lt;strong&gt;é maior&lt;/strong&gt; do que outro. O operador relacionais que verificar se um operando &lt;strong&gt;é menor&lt;/strong&gt; do que o outro e por fim, o operador que verifica se ambos operandos &lt;strong&gt;são iguais&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Os operadores relacionais compostos são formados com a junção de 2 operadores relacionais simples e a função destes é simplificar as expressões.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="operadores-relacionais-compostos"&gt;
&lt;h2&gt;OPERADORES RELACIONAIS COMPOSTOS&lt;/h2&gt;
&lt;p&gt;A linguagem Python disponibiliza mais 2 operadores relacionais que verificam 2 relações entre os membros. É importante observar que essas relações podem ser obtidas com o uso de conectores lógicos, isto é, com a utilização dos conectores &lt;tt class="docutils literal"&gt;and&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;or&lt;/tt&gt;.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="67%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Descrição&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Maior ou igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;gt;=&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Menor ou igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;lt;=&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Com os &lt;strong&gt;Operadores Relacionais Compostos&lt;/strong&gt; podemos obter a relação se o operando a esquerda é maior ou igual do que o operando a direita, ou então, se o operando a esquerda, é menor ou igual do que o operando a direita.&lt;/p&gt;
&lt;p&gt;O código a seguir imprime no Console os valores lógicos de 2 expressões.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1 &amp;gt;= 1: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1 &amp;lt;= 1: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No trecho de código acima, estamos verificando se os membros a esquerda são maiores ou menores do que os membros a sua direita.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="n"&gt;idade&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Informe a sua idade:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A sua idade não pode ser 0 ou menor do que 0!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A sua idade não pode ser superior a 150 ano!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Você precita ter mais do que 18 anos!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="operador"></category><category term="operadores relacionais"></category><category term="operadores relacionais compostos"></category><category term="blog"></category></entry><entry><title>Depurando código Python</title><link href="http://excript.com/python/depuracao-pycharm-python.html" rel="alternate"></link><published>2016-05-17T01:30:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-17:python/depuracao-pycharm-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a definição de depuração e como podemos depurar códigos Python com o uso da IDE PyCharm&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="depuracao"&gt;
&lt;h2&gt;DEPURAÇÃO&lt;/h2&gt;
&lt;img alt="IDE PyCharm em modo de depuração com um breakpoint na primeira linha" src="../images/curso-de-python/depuracao-pycharm.png" /&gt;
&lt;p&gt;Depuração é uma forma de execução do nosso código em que é possível manipular a execução de cada linha e verificar os valores das instâncias.&lt;/p&gt;
&lt;p&gt;Então, é correto dizer que depurar um código significa a execução de cada linha vagarosamente, onde o programador é quem diz quando que determinada instrução deve ser executada. E também, a cada linha executada, é possível verificar o valor das variáveis que estão no escopo local e global, e também, alguns editores permitem a alteração do valor das variáveis. Desta forma, conseguimos simular situações onde talvez, não fosse possível através do nosso programa.&lt;/p&gt;
&lt;p&gt;A depuração é comumente utilizada para na detecção de erros e para entender o estado do programa e de suas variáveis antes do problema ocorrer de fato, ou após o erro ter ocorrido.&lt;/p&gt;
&lt;p&gt;Podemos dizer que é possível depurar qualquer código de qualquer linguagem, até porque, esse é um recurso atualmente considerado elementar para a correta construção de software. Algumas vezes a depuração é um recurso encontrado em determinada IDE, outras vezes, a capacidade de depuração acaba sendo uma ferramenta disponibilizada pela linguagem, isto é, a Máquina Virtual ou o Compilador da linguagem é quem disponibilizam esses recursos e capacidades.&lt;/p&gt;
&lt;p&gt;Neste Curso de Python, estamos utilizando a IDE &lt;a class="reference external" href="https://www.jetbrains.com/pycharm/download/"&gt;PyCharm&lt;/a&gt; e a mesma oferece-nos grande capacidade para depuração e análise interna em tempo de execução.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-breakpoint"&gt;
&lt;h2&gt;O QUE É &lt;tt class="docutils literal"&gt;breakpoint&lt;/tt&gt;?&lt;/h2&gt;
&lt;p&gt;A palavra &lt;tt class="docutils literal"&gt;breakpoint&lt;/tt&gt;, significa, na depuração de programas, o número da linha em que a execução do código será interrompido para o início da depuração.&lt;/p&gt;
&lt;p&gt;Esse é um recurso existente para que não seja necessário depurar todo o código desde o início. Assim, podemos marcar em qual ponto do programa desejamos iniciar a depuração e, quando o cursor de execução chegar na linha demarcada, a execução será interrompida e a IDE trará o código em que ocorreu a interrupção.&lt;/p&gt;
&lt;p&gt;Na imagem principal desta postagem, é possível ver um breakpoint na primeira linha da IDE PyCharm. Normalmente, os &lt;tt class="docutils literal"&gt;breakpoints&lt;/tt&gt; são representados por uma bola vermelha no canto esquerdo [margem] dos editores de código.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="depuração"></category><category term="pycharm"></category><category term="blog"></category></entry><entry><title>Estrutura if e else em Python</title><link href="http://excript.com/python/if-else-python.html" rel="alternate"></link><published>2016-05-16T23:30:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-16:python/if-else-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a instrução "if" junto com a instrução "else" que é uma ferramenta para definirmos o que deve acontecer nas situações em que a expressão avaliada não for verdadeira.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-estrutura-else"&gt;
&lt;h2&gt;INTRODUÇÃO À ESTRUTURA &lt;tt class="docutils literal"&gt;else&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Tomada de Decisão&lt;/strong&gt; é composta por uma expressão a ser avaliada e o que deve acontecer caso a expressão seja verdadeira ou então, caso a expressão seja falsa. Por padrão, o bloco de instrução que estiver abaixo da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; será executado quando a expressão contida na estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; for verdadeira.&lt;/p&gt;
&lt;p&gt;A estrutura &lt;tt class="docutils literal"&gt;else&lt;/tt&gt; por sua vez, é uma instrução complementar da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;. A palavra &lt;tt class="docutils literal"&gt;else&lt;/tt&gt; do Inglês, significa &lt;tt class="docutils literal"&gt;SENÃO&lt;/tt&gt; e com esta, definiremos o bloco de instrução a ser executado todas as vezes que a expressão definida for igual a falso.&lt;/p&gt;
&lt;p&gt;O bloco que estiver na linha seguinte a instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; será o bloco de instrução a ser executados todas as vezes que a condição for verdadeira, enquanto que o bloco que estiver na linha seguinte a instrução &lt;tt class="docutils literal"&gt;else&lt;/tt&gt; será executado todas as vezes que a expressão for falsa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="analise-grafica"&gt;
&lt;h2&gt;ANÁLISE GRÁFICA&lt;/h2&gt;
&lt;p&gt;Na imagem a seguir temos a representação gráfica da tomada de decisão em que é definido o bloco de instrução que é executado caso o valor da expressão seja verdadeiro, ou então, o bloco de instrução que será executado caso o valor da expressão seja igual a falso.&lt;/p&gt;
&lt;p&gt;O gráfico a seguir é bastante semelhante ao estudado na aula anterior, no caso, quando estudamos a tomada de decisão a utilização do bloco de instrução a ser executado caso o valor da expressão seja igual a falso.&lt;/p&gt;
&lt;img alt="Tomada de decisão em Python utilizando a instrução else" src="../images/curso-de-python/tomada-de-decisao-else.png" /&gt;
&lt;p&gt;Na imagem acima assumimos que a execução do programa ocorre da esquerda para a direita. Assim, temos no extremo esquerdo um círculo preto que representa o início, ou então, as instruções que foram executadas anteriormente.&lt;/p&gt;
&lt;p&gt;Feito isso, chegamos na tomada de decisão, que é representado por um losango. O losango representa as 2 situações possíveis na avaliação de quaisquer expressão, isto é, o resultado por ser verdadeiro ou falso.&lt;/p&gt;
&lt;p&gt;Caso seja verdadeiro, a execução está demonstrada na parte superior, onde temos a execução de um bloco de instrução e na sequência, o programa continua sua execução normalmente.&lt;/p&gt;
&lt;p&gt;Na parte inferior, temos a execução do bloco de instrução para caso o valor da expressão seja falso. Como pode ser visto, um outro bloco de instrução é executado a a execução do nosso programa continua normalmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-estrutura-else"&gt;
&lt;h2&gt;A ESTRUTURA &lt;tt class="docutils literal"&gt;else&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;tt class="docutils literal"&gt;else&lt;/tt&gt; é uma instrução dependente, isto é, uma instrução que não pode ser utilizada sozinha. A seguir, temos um exemplo, utilizando a instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; junto a instrução &lt;tt class="docutils literal"&gt;else&lt;/tt&gt;, porém, com as instruções traduzidas para o Português.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;SE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;verdadeiro&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;faça_isso&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;SENÃO&lt;/span&gt;
    &lt;span class="n"&gt;faça_aquilo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos verificando uma condição e, caso o resultado seja verdadeiro, o bloco de instrução na linha seguinte a instrução &lt;tt class="docutils literal"&gt;SE&lt;/tt&gt; é executado. Senão, caso o valor da expressão definida no cabeçalho da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; não seja verdadeiro, o bloco de instrução definido na linha seguinte a instrução &lt;tt class="docutils literal"&gt;SENÃO&lt;/tt&gt; é o que executado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="um-exemplo-pratico"&gt;
&lt;h2&gt;UM EXEMPLO PRÁTICO&lt;/h2&gt;
&lt;p&gt;Agora, vamos fazer um exemplo para estudarmos a utilização da estrutura de decisão &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; junto a instrução &lt;tt class="docutils literal"&gt;else&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;O exemplo que faremos pedirá para o usuário digitar um número par. Em em seguida, com uso da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, verificaremos se o número digitado realmente é ou não é par. Caso seja, imprimiremos na tela a frase &amp;quot;O número digitado é par.&amp;quot; do contrário, imprimiremos, &amp;quot;O número digitado é ímpar.&amp;quot;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número par: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado é par.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado é ímpar.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;acao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite &amp;#39;1&amp;#39; para sim e digite &amp;#39;2&amp;#39; para não: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acao&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Você disse que sim!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acao&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Você disse que não!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado não é &amp;#39;1&amp;#39; e nem &amp;#39;2&amp;#39;!!!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="if"></category><category term="tomada de decisão"></category><category term="se"></category><category term="senão"></category><category term="blog"></category></entry><entry><title>Tomada de Decisão em Python</title><link href="http://excript.com/python/tomada-decisao-python.html" rel="alternate"></link><published>2016-05-16T23:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-16:python/tomada-decisao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a Tomada de Decisão, isto é, a execução de uma bloco de instrução conforme o resultado de uma expressão lógica.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-para-a-tomada-de-decisao"&gt;
&lt;h2&gt;INTRODUÇÃO PARA A TOMADA DE DECISÃO&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Tomada de Decisão&lt;/strong&gt; também chamado de &lt;strong&gt;Desvio Condicional&lt;/strong&gt; ou então, a verificação de expressões é, uma prática comum no desenvolvimento de software. Com essa estrutura somos capazes de verificar expressões e assim, decidir qual &lt;strong&gt;Bloco de Instrução&lt;/strong&gt; deve ser executado.&lt;/p&gt;
&lt;p&gt;As expressões definidas no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; utilizam os operadores relacionais na construção das expressões, seja de maneira implicita ou explicita.&lt;/p&gt;
&lt;p&gt;É importante observar que outras estruturas da linguagem trabalham de maneira similar ao que temos com as &lt;strong&gt;Tomadas de Decisão&lt;/strong&gt;. Ou seja, há algumas estruturas em que uma situação será verificada e, em seguida, mediante ao valor retornado na avaliação, será definido o bloco de código a ser executado. O entendimento da tomada de decisão é necessário para o bom estudo de toda a linguagem, até porque, essa é, a estrutura mais importante na construção de softwares.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="grafico-da-estrutura"&gt;
&lt;h2&gt;GRÁFICO DA ESTRUTURA&lt;/h2&gt;
&lt;p&gt;Na imagem a seguir, temos uma representação do caso de uso da estrutura de tomada de decisão.&lt;/p&gt;
&lt;img alt="Tomada de decisão em Python" src="../images/curso-de-python/tomada-de-decisao.png" /&gt;
&lt;p&gt;Na imagem acima, estamos, inicialmente, supondo que a execução do programação ocorra no sentido da esquerda para a direita. Assim, representamos com um círculo preto o início da execução.&lt;/p&gt;
&lt;p&gt;Feito isso, chegamos na tomada de decisão propriamente dita. Nesta, será verificado a expressão contida no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; e, caso o valor avaliado seja verdadeiro, o bloco de instrução é executado e na sequência o programa continua sua execução normalmente.&lt;/p&gt;
&lt;p&gt;Do contrário, ou seja, caso o valor avaliado no cabeçalho da estrutura if for false, nada ocorrerá, como está representado na imagem por uma linha que liga a estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; com a parte em que ocorre a continuação da execução normal das instruções definidas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-instrucao-if"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A palavra &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, do Inglês, significa &lt;tt class="docutils literal"&gt;SE&lt;/tt&gt;. Com a estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; podemos determinar o que deve acontecer mediante o valor lógico retornado, isto é, &lt;strong&gt;SE&lt;/strong&gt; for verdadeiro [&lt;strong&gt;True&lt;/strong&gt;], faça isso, &lt;strong&gt;SE&lt;/strong&gt; for falso [&lt;strong&gt;False&lt;/strong&gt;], faça aquilo.&lt;/p&gt;
&lt;p&gt;Analisemos o exemplo a seguir em que utilizamos o formato da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, porém, utilizando a Lingua Portuguesa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;SE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;verdadeiro&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;faça_isso&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;faça_e_mais_isso&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;faça_aquilo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos verificando se a expressão entre parêntesis é verdadeira. Em seguida, colocamos o sinal de 2 pontos, dizendo para o Python que ali finaliza o cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;. A linha seguinte é o início do &lt;strong&gt;Bloco de Instrução&lt;/strong&gt; e será executado nas situações em que a expressão for verdadeira. Todo bloco de instrução que está subordinado a uma estrutura, estará, obrigatoriamente, indentado um nível a frente da estrutura subordinada.&lt;/p&gt;
&lt;p&gt;Nesse primeiro momento, temos que entender que se a expressão definida no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; [entre parêntesis], for verdadeira, tudo que estiver nas linhas seguintes e com a indentação avançada será executado. A instrução &lt;tt class="docutils literal"&gt;faça_isso()&lt;/tt&gt; é a primeira instrução do &lt;strong&gt;bloco de instrução&lt;/strong&gt; que é executado todas as vezes que a expressão definida e avaliada no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; é verdadeira.&lt;/p&gt;
&lt;p&gt;Caso a expressão contida entre parêntesis não seja verdadeiro, na situação acima, nada acontecerá e a execução das linhas seguintes a &lt;tt class="docutils literal"&gt;tomada de decisão&lt;/tt&gt; e que estão com a indentação avançada, não será executado. Entenda por &lt;strong&gt;linhas seguintes&lt;/strong&gt; todas as instruções com o nível de indentação igual ao da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="um-caso-real-utilizando-a-estrutura-if"&gt;
&lt;h2&gt;UM CASO REAL UTILIZANDO A ESTRUTURA &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;Agora, vamos fazer uma exemplo onde verificaremos se o número digitado por um usuário é maior do que zero. Caso seja, o bloco de instrução [verdadeiro] a seguir da estrutura será executado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado é maior do que &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, utilizamos a função &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt; para imprimirmos uma mensagem na tela e em seguida colocar o Console no modo de edição, isto é, colocar o Console de tal forma que seja  possível ao nosso usuário digitar e pressionar Enter.&lt;/p&gt;
&lt;p&gt;Após o usuário digitar um valor e pressionar a tecla Enter, o valor digitado é passado para a variável &lt;tt class="docutils literal"&gt;num&lt;/tt&gt;. Em seguida, o valor contido na variável &lt;tt class="docutils literal"&gt;num&lt;/tt&gt; é comparada ao número 0. Caso o valor de &lt;tt class="docutils literal"&gt;num&lt;/tt&gt; seja maior do que zero, o bloco de instrução verdadeiro será executado, do contrário, nada acontecerá.&lt;/p&gt;
&lt;p&gt;É importante observar que caso nada seja digitado, ou então, não seja digitado um número válido, uma exceção é levantada e a execução do programa é interrompida.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="if"></category><category term="tomada de decisão"></category><category term="se"></category><category term="blog"></category></entry><entry><title>Entrada de Dados em Python</title><link href="http://excript.com/python/entrada-dados-python.html" rel="alternate"></link><published>2016-05-07T23:45:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-07:python/entrada-dados-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a entrada de dados numa aplicação e como o Python trata nativamente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="entrada-de-dados"&gt;
&lt;h2&gt;ENTRADA DE DADOS&lt;/h2&gt;
&lt;p&gt;Entrada de Dados é a forma como enviamos informações para dentro de aplicações escritas em Python. A forma mais primitiva de enviar dados para uma aplicação é pelo Prompt de Comando, isto é, pelo Console propriamente dito.&lt;/p&gt;
&lt;img alt="Imagem do Console para a entrada de dados em programa Python" src="../images/curso-de-python/console-python.png" /&gt;
&lt;p&gt;Uma aplicação pode, a qualquer momento, pedir que o usuário informe uma determinada informação, para isto, basta invocar a função &lt;cite&gt;input()&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;A partir da versão 3 do Python, a função &lt;cite&gt;input()&lt;/cite&gt;, tem por objetivo de escrever a String passada como parâmetro e em seguida, ativar o modo de digitação, isto é, colocar o Console de uma determinada forma em que seja possível a digitação (entrada de dados). É importante observar que versões anteriores do Python funcionavam de maneira distinta, e também, que a função &lt;cite&gt;input()&lt;/cite&gt; nas versões 2x era utilizado para outro finalidade!&lt;/p&gt;
&lt;p&gt;A seguir, temos um exemplo onde imprimimos uma frase na tela e em seguida, é aberto para o usuário, a capacidade para digitação de letras e números.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Escreva entre aspas alguma informação a ser impressa no Console &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código acima, quando executado, irá imprimir o que está entre parêntesis no Console e em seguida, permitira ao usuário a digitação de qualquer tipo de dado alfanumérico. O conjunto de caracteres digitado pelo usuário, será retornado pela função &lt;cite&gt;input()&lt;/cite&gt;. É responsabilidade do programador armazenar esses caracteres numa variável, como fazemos no exemplo a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, será impresso a frase definida entre aspas e então, o console entrará num modo que permitirá o usuário digitar texto e números. Após o usuário digitar o que desejar e pressionar a tecla Enter, os dados digitados serão retornados pela função &lt;cite&gt;input()&lt;/cite&gt;. No exemplo acima, estamos atribuindo o retorno da função para a variável num, logo, a mesma receberá aquilo que o usuário digitou no Console antes de pressionar a tecla Enter.&lt;/p&gt;
&lt;p&gt;Por fim, imprimimos na tela os caracteres digitados pelo nosso usuário através da função &lt;cite&gt;print()&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="outras-formas-para-entrada-de-dados"&gt;
&lt;h2&gt;OUTRAS FORMAS PARA ENTRADA DE DADOS&lt;/h2&gt;
&lt;p&gt;Uma aplicação pode receber dados através das mais distintas formas, como por exemplo, pela leitura de um arquivo, através dos protocolos TCP/IP, pelo uso de janelas gráficas, como por exemplo, a biblioteca TkInter, que é a forma nativa para a construção de Janelas Gráficas no Python e etc.&lt;/p&gt;
&lt;p&gt;Há diversas maneiras para recebermos informações, porém, o princípio de como trataremos esses dados será, na maior parte da vezes o mesmo.&lt;/p&gt;

    &lt;div class="admonitionblock important data-line-21"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                &lt;td class="icon"&gt;
                    &lt;i class="fa icon-important" title="Importante!"&gt;&lt;/i&gt;
                &lt;/td&gt;
                &lt;td class="content"&gt;
                    &lt;div class="paragraph data-line-22"&gt;
                        &lt;p&gt;Certifique-se estar utilizando a versão 3.x do Python, do contrário, a função input() terá funcionamento anomalo e a sua aplicação não será executada da maneira correta! Por isso lembre-se: se você estiver tendo problemas, averigue a versão do Python instalada em seu computador!&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;A seguir, temos o exemplo feito na vídeo aulas do Curso de Python da eXcript:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;


&lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;senha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Senha:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O usuário informado foi: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;, e a senha digitada foi: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;senha&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="entrada padrão"></category><category term="entrada de dados"></category><category term="input"></category><category term="blog"></category></entry><entry><title>Operadores Relacionais do Python</title><link href="http://excript.com/python/operador-relacional-python.html" rel="alternate"></link><published>2016-05-07T11:30:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-07:python/operador-relacional-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores relacionais em Python, isto é, os operadores utilizados para a obtenção da relação entre dois operados&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="operadores-relacionais-ou-operadores-comparativos"&gt;
&lt;h2&gt;OPERADORES RELACIONAIS ou OPERADORES COMPARATIVOS&lt;/h2&gt;
&lt;p&gt;Operador Relacional é todo operador que obtém a relação do membro a esquerda com o membro a sua direita.&lt;/p&gt;
&lt;p&gt;É comum na programação A necessidade de conhecer a relação entre diversos operandos para que então, o nosso programa assuma determinada característica, ou invoque alguma funcionalidade. A linguagem Python trabalha com os operadores relacionais, também chamados de operadores comparativos, da mesma forma que a maioria das outras linguagens, tais como C, C++, Java, C# e etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tabela-dos-operadores-relacionais"&gt;
&lt;h2&gt;TABELA DOS OPERADORES RELACIONAIS&lt;/h2&gt;
&lt;p&gt;Na tabela abaixo, temos os operadores relacionais disponibilizados pelo Python. Na continuação deste artigo, estudaremos cada operador isoladamente.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="67%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Descrição&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Maior que&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;gt;&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Menor que&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;lt;&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;==&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Maior ou igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;gt;=&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Menor ou igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;lt;=&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="operadores-relacionais-simples"&gt;
&lt;h2&gt;OPERADORES RELACIONAIS SIMPLES&lt;/h2&gt;
&lt;p&gt;Existem 3 relações possíveis entre 2 operandos, são elas:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="67%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Descrição&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Maior que&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;gt;&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Menor que&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;lt;&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;==&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Para obtermos a relação entre 2 membros, temos que utilizar a seguinte estrutura:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;membro&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;esquerda&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;OPERADOR&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;membro&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;direita&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;É importante observar que a inversão dos membros ocasiona na inversão do resultado da expressão, isto é, se o membro que estiver a esquerda for para a direita e vice-e-versa, a relação entre eles será o contrário.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, realizamos algumas operações entre números e caracteres, sempre utilizando as 3 comparações simples. Temos que, ou o operador a esquerda será maior, ou menor, ou então, igual ao operador a sua direita.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="relacoes-interessantes-do-python"&gt;
&lt;h2&gt;RELAÇÕES INTERESSANTES DO PYTHON&lt;/h2&gt;
&lt;div class="section" id="primeira-relacao"&gt;
&lt;h3&gt;PRIMEIRA RELAÇÃO&lt;/h3&gt;
&lt;p&gt;A primeira relação interessante, não é bem uma relação, mas sim, uma maneira de verificarmos se uma expressão é ou não verdadeira. Temos que ter em mente que o Python, SEMPRE verifica se determinada expressão é verdadeira e por consequência disso, podemos omitir a comparação com &lt;cite&gt;True&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Por exemplo, se quisermos saber se 2 membros são iguais, não precisamos compará-los a True, veja a expressão a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#essa expressão equivale a expressão seguinte&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Na primeira operação, estamos verificando se o número 1 é igual a ele mesmo, logo, será impresso no Console, &lt;cite&gt;True&lt;/cite&gt; ou &lt;cite&gt;False&lt;/cite&gt;. Em seguida, repetimos a linha anterior, porém, comparamos o resultado da expressão &lt;cite&gt;1 == 1&lt;/cite&gt; com o valor &lt;cite&gt;True&lt;/cite&gt;. Ainda que não haja problema na forma que trabalhamos na segundo operação, estamos sendo redundantes, haja vista que &lt;strong&gt;toda expressão&lt;/strong&gt; será automaticamente comparada a &lt;cite&gt;True&lt;/cite&gt; e por isso, podemos omitir essa comparação.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="segunda-relacao"&gt;
&lt;h3&gt;SEGUNDA RELAÇÃO&lt;/h3&gt;
&lt;p&gt;Uma expressão é verdadeira quando o resultado da expressão for igual a &lt;cite&gt;True&lt;/cite&gt; ou então, igual a número inteiro &lt;cite&gt;1&lt;/cite&gt;. Logo, temos que as expressões no bloco de código a seguir, estão, realizando a mesma comparação:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Todas expressões imprimirão no Console o valor &lt;cite&gt;True&lt;/cite&gt;, então, é importante que saibamos que as palavras-chaves &lt;cite&gt;True&lt;/cite&gt; e &lt;cite&gt;False&lt;/cite&gt; na verdade, são constantes que armazenam os número 1 e 0 respectivamente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="terceira-relacao"&gt;
&lt;h3&gt;TERCEIRA RELAÇÃO&lt;/h3&gt;
&lt;p&gt;Se verificarmos uma expressão composta por uma String, temos que o valor retornado será &lt;cite&gt;True&lt;/cite&gt;, caso a mesma contenha 1 ou mais caracteres, do contrário, o valor retornado será &lt;cite&gt;False&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor de x é igual a vazio&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A variável &amp;#39;x&amp;#39; contém caracteres &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos a variável de nome &lt;cite&gt;x&lt;/cite&gt; e em seguida utilizamos a variável &amp;quot;x&amp;quot; isoladamente numa tomada de decisão. Caso a variável &lt;cite&gt;x&lt;/cite&gt; contenha um ou mais caracteres, o bloco de código da estrutura &lt;cite&gt;if&lt;/cite&gt; será executado. Do contrário, o bloco da estrutura &lt;cite&gt;else&lt;/cite&gt; será executado.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=================================&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="operadores"></category><category term="relacional"></category><category term="operadores relacionais"></category><category term="blog"></category></entry><entry><title>Potenciação e Radiciação em Python</title><link href="http://excript.com/python/potenciacao-radiciacao-python.html" rel="alternate"></link><published>2016-05-07T03:20:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-07:python/potenciacao-radiciacao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprenderemos a trabalhar com o operador dedicado a obtenção da potenciação, e, que nos permite, através das propriedades matemáticas, a obtenção da radiciação.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-potenciacao-e-radiciacao"&gt;
&lt;h2&gt;INTRODUÇÃO À POTENCIAÇÃO E RADICIAÇÃO&lt;/h2&gt;
&lt;p&gt;Potenciação é a operação matemática que eleva um número a uma determinada potência. A linguagem Python disponibiliza um operador para obtermos a potência de qualquer número. Logo, através das propriedades matemáticas, podemos utilizar a potenciação para a obtenção da radiciação.&lt;/p&gt;
&lt;p&gt;É importante observar que a potenciação poderia ser obtida com o uso de uma função, porém, tamanha é sua utilidade que foi definido um operador especializado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="potenciacao"&gt;
&lt;h2&gt;POTENCIAÇÃO&lt;/h2&gt;
&lt;p&gt;A linguagem tem definido que a utilização de 2 asteriscos seguidos &lt;cite&gt;**&lt;/cite&gt; significa que o número a esquerda do operador será elevado ao número a direita do operador, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;número&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;direita&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;número&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;esquerda&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código a seguir demonstra o uso da exponenciação em Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A operação acima está calculado o valor de 2 elevado a quita potência. Feito isso, o valor retornado é passado como parâmetro para a função &lt;cite&gt;input()&lt;/cite&gt; que imprime o resultado no Console.&lt;/p&gt;
&lt;p&gt;O operador de potenciação em Python é um operador binário, isto é, temos que definir 2 valores para a sua utilização. A esquerda definimos o número a ser elevado, e a direita do operador, o potência desejada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="radiciacao"&gt;
&lt;h2&gt;RADICIAÇÃO&lt;/h2&gt;
&lt;p&gt;A radiciação, matematicamente falando, é o inverso da potenciação. Podemos obter a radiciação utilizando as propriedades matemáticas, até porque, todo número elevado ao seu inverso é a sua raiz, isto é, basta elevarmos &lt;cite&gt;N&lt;/cite&gt; a (1/2) que iremos obter a raiz quadrada de &lt;cite&gt;N&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;No código a seguir, temos um exemplo da obtenção da raiz quadrada de 9.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima estamos realizando 3 operações com o operador de potenciação do Python &lt;cite&gt;**&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Na primeira operação, estamos elevando o número 9 a sua segunda potência, isto é, &lt;cite&gt;9 * 9&lt;/cite&gt;. Em seguida, elevamos o número 9 a sua inversa, isto é, &lt;cite&gt;1/2&lt;/cite&gt;. Por fim, na terceira operação, estamos fazendo a mesma coisa que fizemos na segunda operação, porém, utilizando a divisão de &lt;cite&gt;1&lt;/cite&gt; por &lt;cite&gt;2&lt;/cite&gt; diretamente.&lt;/p&gt;
&lt;p&gt;O operador de potenciação é mais um recursos especiais da linguagem Python. Sua utilização é bastante simples e possui uma notação semelhante a outros operadores que já estudamos, como por exemplo, &lt;a class="reference external" href="http://excript.com/python/modulo-da-divisao-python.html"&gt;o operador módulo.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="operador"></category><category term="potenciação"></category><category term="radiciação"></category><category term="operador binário"></category><category term="blog"></category></entry><entry><title>Módulo da Divisão em Python</title><link href="http://excript.com/python/modulo-da-divisao-python.html" rel="alternate"></link><published>2016-05-07T03:10:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-07:python/modulo-da-divisao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o módulo da divisão, ou seja, o operador que permite obter a parte restante de uma divisão.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="modulo-da-divisao-ou-operacao-modulo"&gt;
&lt;h2&gt;MÓDULO DA DIVISÃO OU OPERAÇÃO MÓDULO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Módulo da Divisão&lt;/strong&gt;, ou então, &lt;strong&gt;Operação Módulo&lt;/strong&gt;, é o operador que extraí o resto da divisão. É possível obter o resto da divisão de várias maneiras, porém, a linguagem Python, bem como, a maioria das linguagens de programação, disponibilizam um operador para este fim.&lt;/p&gt;
&lt;p&gt;O sinal de porcentagem &lt;cite&gt;%&lt;/cite&gt; é o operador módulo. Ainda que não faça muito sentido, esse pode ser considerado quase que um padrão entre as linguagens de programação.&lt;/p&gt;
&lt;p&gt;Ao lado esquerdo, devemos colocar o número a ser dividido, e ao lado direito, o divisor, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#obtém o módulo da divisão de 10 por 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos dividindo o número 10 por 2 com uso do operador módulo. O valor retornado é passado como parâmetro para a função &lt;cite&gt;print()&lt;/cite&gt; que imprime o módulo da divisão no Console.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="numeros-pares"&gt;
&lt;h2&gt;NÚMEROS PARES&lt;/h2&gt;
&lt;p&gt;Podemos saber se um número é par com o uso do operador módulo, para isto, basta verificarmos se a divisão possui resto, ou melhor, se o valor retornado é diferente de zero, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Número par.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Número ímpar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, pedimos para o usuário digitar um número. Em seguida, armazenamos esse número na variável de nome &lt;cite&gt;num&lt;/cite&gt;. Feito isso, obtemos o módulo de &lt;cite&gt;num&lt;/cite&gt; por 2. Caso o valor retornado seja diferente de 0, a divisão não é inteira, logo o número não é par. Em seguida, imprimimos no Console a frase dizendo se o valor digitado é ou não par.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="numeros-cheios-ou-numeros-redondos"&gt;
&lt;h2&gt;NÚMEROS CHEIOS OU NÚMEROS REDONDOS&lt;/h2&gt;
&lt;p&gt;Uma outra utilidade simples, porém, interessa, é verificar se um determinado número é redondo, por exemplo: 100, 200, 500 e etc. Para isso, dividirmos o mesmo por 100 e compararmos o módulo com 0, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Número redondo.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número não é redondo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, pedimos para o usuário digitar um valor e em seguida, verificamos se o módulo do número digitado é igual a 0.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="consideracoes-finais"&gt;
&lt;h2&gt;CONSIDERAÇÕES FINAIS&lt;/h2&gt;
&lt;p&gt;Os exemplos estudados são bastante simples, porém, muitas serão as vezes em que precisaremos utilizar códigos semelhantes ao que acabamos de estudar. Uma situação é no cálculo do digito verificador do CPF.&lt;/p&gt;
&lt;p&gt;Por fim, temos que o operador módulo não é utilizado a todo momento, porém, quando necessário, observamos a importância de haver um operador propriamente dito para essa finalidade.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite outro número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;divisao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
&lt;span class="n"&gt;resto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;divido por&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;é igual a: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;divisao&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O resto da divisão entre&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;e&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; é igual a:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="módulo"></category><category term="operação módulo"></category><category term="módulo da divisão"></category><category term="divisão"></category><category term="número par"></category><category term="número primo"></category><category term="blog"></category></entry><entry><title>Operadores Aritméticos do Python</title><link href="http://excript.com/python/operador-aritmetico-em-python.html" rel="alternate"></link><published>2016-05-07T02:50:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-07:python/operador-aritmetico-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores aritméticos da linguagem Python, ou seja, os operadores que realizam as operações matemáticas elementares, com a soma, subtração, multiplicação, divisão, divisão inteira e módulo.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-as-operacoes-matematicas"&gt;
&lt;h2&gt;INTRODUÇÃO ÀS OPERAÇÕES MATEMÁTICAS&lt;/h2&gt;
&lt;p&gt;O Python além de ser uma excelente linguagem para a construção de aplicações de forma geral, também é, uma excelente linguagem para ser utilizada junto com a matemática, como por exemplo, na geração de relatórios, gráficos, estatísticas e etc.&lt;/p&gt;
&lt;p&gt;Atualmente, temos diversas bibliotecas matemáticas para serem utilizadas, e os recursos vão de simples análises e geração de gráficos a inteligência artificial, análise de sentimentos, estatísticas para compra e venda de ações, neurociência e muito, mas muitas outras áreas relacionadas a pesquisa e análise de informações.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="operadores-matematicos"&gt;
&lt;h2&gt;OPERADORES MATEMÁTICOS&lt;/h2&gt;
&lt;p&gt;O Python pode ser utilizado como uma calculadora matemática avançada. Praticamente, todos os operadores aritméticos funcionam da mesma forma como os conhecemos da matemática elementar. Por exemplo, para trabalharmos com as 4 principais funções matemáticas, a soma, subtração, multiplicação e divisão, temos os operadores conforme tabela a seguir.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="63%" /&gt;
&lt;col width="37%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Operação&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;adição&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;+&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;subtração&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;-&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;multiplicação&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;*&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;divisão&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;/&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Tempos também, operadores para exponenciação, obtenção da parte inteira de uma divisão, extração do módulo da divisão, conforme pode ser visto na tabela a seguir:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="63%" /&gt;
&lt;col width="37%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Operação&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;exponenciação&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;**&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;parte inteira&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;//&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;módulo&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;%&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;O operador módulo &lt;cite&gt;%&lt;/cite&gt; sera estudado em detalhes em aulas futuras.&lt;/p&gt;
&lt;p&gt;Podemos elevar um número a outro através da utilização de 2 sinais de multiplicação seguidos &lt;cite&gt;**&lt;/cite&gt;, isto é, o operador &lt;cite&gt;**&lt;/cite&gt; é o operador para exponenciação em Python. Também é possível obter a parte inteira da divisão, com o uso do sinal de divisão repetido, &lt;cite&gt;//&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;A seguir, temos algumas operações matemáticas utilizando os operadores que acabamos de estudar e seus respectivos resultados:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#soma&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;#subtração&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;

&lt;span class="c1"&gt;#multiplicação&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;

&lt;span class="c1"&gt;#divisão&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;81&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="mf"&gt;9.0&lt;/span&gt;

&lt;span class="c1"&gt;#exponenciação&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="mi"&gt;32&lt;/span&gt;

&lt;span class="c1"&gt;#extração da parte inteira da divisão&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acabamos de utilizar 6 operadores matemáticas que estão definidos por padrão. Ainda que não tenha muita utilidade num primeiro momento, podemos alterar o funcionamento dos operadores, ou seja, podemos fazer com que o sinal de adição funcione da maneira como bem desejarmos.&lt;/p&gt;
&lt;p&gt;Essa funcionalidade não possui utilidade quando estamos tratando de números inteiros, porém, é bastante útil, quando por exemplo, temos uma estrutura que seria interessante poder ser somada com outra. Logo, implementamos na classe dessa estrutura a funcionalidade de soma, subtração e etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;A seguir, temos o código escrito durante a aula.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="operações matemáticas"></category><category term="operações aritméticas"></category><category term="soma"></category><category term="subtração"></category><category term="multiplicação"></category><category term="divisão"></category><category term="divisão inteira"></category><category term="módulo"></category><category term="blog"></category></entry><entry><title>Variáveis do tipo Ponto Flutuante do Python</title><link href="http://excript.com/python/ponto-flutuante-python.html" rel="alternate"></link><published>2016-05-06T23:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:python/ponto-flutuante-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os números que tenham casas decimais e que são manipulados por programas escritos em Python pelo tipo de dados float.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="ponto-flutuante"&gt;
&lt;h2&gt;PONTO FLUTUANTE&lt;/h2&gt;
&lt;p&gt;Valor de tipo &lt;strong&gt;Ponto Flutuante&lt;/strong&gt; é qualquer número decimal, isto é, números que contenham casas decimais. Números decimais em Python, são representados pelo tipo de dado &lt;cite&gt;float&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;No código a seguir, utilizamos a função &lt;tt class="docutils literal"&gt;type()&lt;/tt&gt; para obter o tipo de dado que o Python definiu para vários números diferente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;complex&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="n"&gt;num_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;num_dec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;7.3&lt;/span&gt;
&lt;span class="n"&gt;val_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qualquer texto&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, é possível ver que para o Python, o número &lt;cite&gt;1.1&lt;/cite&gt; é um número do tipo &lt;cite&gt;float&lt;/cite&gt;, isto é, do tipo ponto flutuante. Já, o número &lt;cite&gt;1&lt;/cite&gt; é, para o Python, um número inteiro. O número &lt;cite&gt;1j&lt;/cite&gt; é um número complexo e o resultado da expressão, 10 elevado a 1000, será também um número inteiro.&lt;/p&gt;
&lt;p&gt;Atualmente, o Python trata qualquer número que não possua casas decimais como sendo um inteiro, mesmo números que tenham centenas de dígitos, serão para o Python, números inteiros.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="tipos de dados"></category><category term="tipos"></category><category term="ponto flutuante"></category><category term="double"></category><category term="float"></category><category term="blog"></category></entry><entry><title>Tipos de dados em Python</title><link href="http://excript.com/python/tipos-de-dados-python.html" rel="alternate"></link><published>2016-05-06T20:20:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:python/tipos-de-dados-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos os tipos de dados definidos pela linguagem Python, como também, as diferenças entre diferentes tipos. Por fim, veremos a diferença entre um o tipo do dado e o dado propriamente dito.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="tipos"&gt;
&lt;h2&gt;TIPOS&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;tipo de dado&lt;/strong&gt; funciona como uma classificação da informação. A informação, pode ser qualquer uma, como por exemplo, Nome, Idade, Endereço, uma Música, um Arquivo, o valor da conta bancária e etc.&lt;/p&gt;
&lt;p&gt;As informações, de forma geral, seguem regras que possibilitam uma classificação, por exemplo, o valor das contas bancárias, geralmente, será composta por números. O nome das pessoas, normalmente, é constituído somente por letras. A idade das pessoas é representado por números inteiros. Datas são a junção de números com alguns caracteres especiais e assim por diante.&lt;/p&gt;
&lt;p&gt;Devido aos diferentes tipos de informações existente, existe, na programação, os tipos de dados. Os tipos são, basicamente, as formas diferentes de representar diferentes informações e essa classificação, faz com que consigamos, por exemplo, definir que o operador de soma entre 2 números resultará na resolução da expressão matemática, porém, o sinal de adição entre 2 variáveis do tipo String, resultará na concatenação de ambos valores e assim por diante.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tipos-primitivos"&gt;
&lt;h2&gt;TIPOS PRIMITIVOS&lt;/h2&gt;
&lt;p&gt;Tipo primitivo são os tipos de dados mais simples, isto é, a informação em sua forma mais primitiva. Bons exemplos de valores primitivos são os caractere, os número, o valor True e False e etc. A documentação do Python não trata os tipos de dados elementares com a nomenclatura de &lt;strong&gt;Tipo Primitivo&lt;/strong&gt;, mas sim &lt;a class="reference external" href="https://docs.python.org/3.5/library/stdtypes.html"&gt;chama-os de tipos built-ins&lt;/a&gt;, isto é, classes que estão definidas por padrão dentro da Máquina Virtual do Python e que representam determinado tipo de informação.&lt;/p&gt;
&lt;p&gt;Nesse momento, chamaremos de Tipos Primitivos as informações em sua forma mais simples, porém, é importante saber que para o Python, não há tipo primitivos, mas sim, estruturas de dados que estão definidas, muitas vezes, dentro da própria Máquina Virtual do Python.&lt;/p&gt;
&lt;p&gt;É normal que as linguagens de programação tenham um conjunto de tipos chamados de: &lt;strong&gt;tipos primitivos&lt;/strong&gt;. Devemos pensar nessa classificação como sendo os tipos primários de informações, como por exemplo, o tipo numérico. Como sabemos, todo número é constituído por números. Dessa forma, o tipo numérico pode ser qualquer valor que seja composto por 1 ou mais caracteres numéricos. Dessa forma, isto é, tendo a certeza de que uma variável declarada como sendo do tipo numérico inteiro sempre terá um valor numérico válido, somos capazes de desenvolver funções especificas que manipulam esse tipo de dado de maneira muito mais eficiente e sem a necessidade de verificação se o tipo da informação contida em determinada variável é válido.&lt;/p&gt;
&lt;p&gt;Da mesma forma, temos o tipo de dado que representa conjuntos de caracteres, que na programação, é comumente chamado de &lt;cite&gt;String&lt;/cite&gt; e o Python o chama de &lt;cite&gt;str&lt;/cite&gt;. As &lt;cite&gt;String&lt;/cite&gt; são capazes de armazenar conjuntos de caracteres que estão dispostos numa determinada ordem. Todas as vezes que estivermos manipulando dados que contenha caracteres - o tipo mais primitivo, isto é, a maneira mais abstrata para representarmos caracteres - estaremos utilizando uma variável definida como sendo do tipo &lt;cite&gt;str&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;O fato de o Python não trabalhar com tipo primitivos diretamente, deve-se ao fato de que em Python, &lt;strong&gt;tudo são objetos&lt;/strong&gt;. Dessa forma, o que chamaríamos de primitivo é, em Python, representado como uma e toda informação será, um objeto propriamente dito. A seguir, temos a lista dos principais tipos built-ins da linguagem Python:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;int - para números inteiros&lt;/li&gt;
&lt;li&gt;str - para conjunto de caracteres&lt;/li&gt;
&lt;li&gt;bool - armazena True ou False&lt;/li&gt;
&lt;li&gt;list - para agrupar um conjunto de elementos&lt;/li&gt;
&lt;li&gt;tupla - igual ao tipo &lt;cite&gt;list&lt;/cite&gt;, porém, imutável&lt;/li&gt;
&lt;li&gt;dic - para agrupar elementos que serão recuperados por uma &lt;cite&gt;chave&lt;/cite&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;O Python fornece um conjunto de tipos básicos bastante amplo e que normalmente, atendem a maioria das necessidades. Cada tipo citado, possui um conjunto de funções e métodos que permitem manipularmos as informações, contidas na variável, de maneira bastante eficiente.&lt;/p&gt;
&lt;p&gt;Sempre que formos criar um novo &lt;strong&gt;tipo de dados&lt;/strong&gt;, acabaremos utilizando os tipos básicos da linguagem, como por exemplo, o tipo &lt;cite&gt;int&lt;/cite&gt;, ou então, o tipo &lt;cite&gt;str&lt;/cite&gt; e assim por diante.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="diferenca-entre-tipo-e-valor"&gt;
&lt;h2&gt;DIFERENÇA ENTRE TIPO E VALOR&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;valor&lt;/strong&gt; é qualquer informação, seja um número, texto, música, vídeo e etc. O &lt;strong&gt;tipo&lt;/strong&gt; por sua vez, é a estrutura da informação e a forma de classificarmos os dados.&lt;/p&gt;
&lt;p&gt;Todo valor numérico deve ser capaz de ser somado a outro valor, ou então, subtraido. Da mesma forma que todo texto, deve ser capaz de ser concatenado a outro, isto é, ser juntado a outro conjunto de caracteres.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;tipo&lt;/strong&gt; da informação deve ser pensado como uma forma de classificarmos as diferentes informações e assim, termos a disposição um conjunto de funções para tratarmos e modificarmos os valores.&lt;/p&gt;
&lt;p&gt;É importante saber que somos capazes de criar novos tipos de dados a qualquer momento, e a programação orientada a objetos é, em sua definição mais primitiva, uma maneira de criarmos novos tipos abstratos e definirmos, na estrutura da classe, funções, métodos, verificações que busquem tratar valores que tenham uma mesma estrutura.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conversao-de-dados-ou-coercao-de-tipos"&gt;
&lt;h2&gt;CONVERSÃO DE DADOS OU COERÇÃO DE TIPOS&lt;/h2&gt;
&lt;p&gt;Se as informações possuem tipos, logo, temos de ser capazes em converter um tipo de informação num outro tipo de dado. Essa ação de conversão é comumente chamada de &lt;strong&gt;Coerção de Tipos&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Linguagem tipada é aquela que permite a classificação das informações pelo uso de tipos de dados, por exemplo, o Python trata um conjunto de caracteres como sendo do tipo &lt;cite&gt;String&lt;/cite&gt;, logo, o Python é uma linguagem tipada, no caso, uma linguagem dinamicamente tipada.&lt;/p&gt;
&lt;p&gt;Se existem diferentes tipos de informação, temos de ser capazes de converter, por exemplo, um número para o tipo texto. Ou seja, a conversão de valores é essencial para que possamos trabalhar com informações tipadas, até porque, há diversas situações onde desejaremos manipular um número como sendo um texto.&lt;/p&gt;
&lt;p&gt;Essa conversão é comumente chamada de &lt;strong&gt;Conversão de Dados&lt;/strong&gt; ou então, &lt;strong&gt;Coerção de Tipos&lt;/strong&gt;. É importante observar, que uma informação do tipo texto, pode ser constituida de letras e números, ou seja, o grupo de caracteres alfanuméricos. Então, um número pode ser representado como um texto, mas o contrário, nem sempre será possível.&lt;/p&gt;
&lt;p&gt;Pra convertermos, por exemplo, um texto para o tipo numérico, devemos especificar o tipo a ser convertido e passarmos o valor através de parêntesis, como podemos ver a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tipo_a_ser_convertido&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;informação&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A seguir, declaramos uma variável de nome &lt;cite&gt;texto&lt;/cite&gt; e atribuimos um valor numérico a mesma. Em seguida, declaramos outra variável, de nome &lt;cite&gt;num&lt;/cite&gt; e atribuimos a esta o resultado da Coerção de Tipos. Isto é, dissemos que o valor da variável &lt;cite&gt;texto&lt;/cite&gt; deve ser convertido num tipo numérico &lt;cite&gt;num = int(texto)&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;texto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;texto&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#o sinal de + concatena duas informações&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#o sinal de + soma dois números&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1010&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, podemos observar que a utilização do operador &lt;cite&gt;+&lt;/cite&gt; funciona de maneira diferente conforme o tipo de dado que esteja sendo utilizado. Quando o sinal de adição estiver entre dois valores numéricos, estes serão somados. Quando o sinal adição estiver entre dois valores do tipo &lt;cite&gt;String&lt;/cite&gt;, estes serão concatenados (juntados) e quando o sinal de adição estiver entre um valor do tipo numérico e do tipo &lt;cite&gt;String&lt;/cite&gt;, uma exceção será levantada dizendo que não é possível utilizar o operador de adição entre tipos distintos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="para-refletir"&gt;
&lt;h2&gt;PARA REFLETIR&lt;/h2&gt;
&lt;p&gt;Em Python, tudo é tratado como sendo um objeto, inclusive, o próprio código por nós escrito!&lt;/p&gt;
&lt;p&gt;Linguagens como Java e C# também são fortemente orientada a objetos, porém, ambas possuem por exemplo, tipos de dados primitivos, o que não existe no Python.&lt;/p&gt;
&lt;p&gt;O Python trata todo e qualquer valor como sendo um objeto. Se tivermos 2 variáveis que contenham o número 10, para o Python, ambas variáveis estarão apontando para um objeto na memória, cujo valor é 10. Dizer que uma variável contém um valor, é por definição da linguagem, um erro, até porque, os valores não estão armazenados numa posição determinada pela variável. Em Python, os dados são associados a variáveis, logo, variáveis que contenham um mesmo valor, na verdade, internamente o que haverá, é uma informação associadas a várias variáveis. Há um excelente &lt;a class="reference external" href="http://pythonclub.com.br/tuplas-mutantes-em-python.html"&gt;artigo falando sobre a forma que o Python trata os tipos e as informações publicado pelo Luciano Ramalho&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Por fim, temos 4 tipos para classificação para os tipos de informações.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Tipos simples&lt;/tt&gt;  - constituidos por simples blocos, como &lt;tt class="docutils literal"&gt;int()&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;float()&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Tipos de contêiner&lt;/tt&gt; - objetos capazes de conter outros objetos&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Tipos de código&lt;/tt&gt; - objetos encapsuladores de elementos dos nosso programas&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Tipos internos&lt;/tt&gt; - tipos que serão utilizados durante a execução do nosso programa&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;No &lt;a class="reference external" href="http://www.ibm.com/developerworks/br/library/os-python1/"&gt;link a seguir há mais informações sobre os tipos de dados do Python&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="tipos"></category><category term="tipo de dados"></category><category term="int"></category><category term="float"></category><category term="string"></category><category term="date"></category><category term="bool"></category><category term="str"></category><category term="blog"></category></entry><entry><title>Nomenclatura das Variáveis em Python</title><link href="http://excript.com/python/nomenclatura-variaveis-python.html" rel="alternate"></link><published>2016-05-06T19:10:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:python/nomenclatura-variaveis-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a nomenclatura de variáveis, isto é, quais as regras que a linguagem Python tem definido para definirmos nomes de variáveis&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="nomenclatura"&gt;
&lt;h2&gt;NOMENCLATURA&lt;/h2&gt;
&lt;p&gt;As variáveis possuem obrigatoriamente um nome que as identificam e as distinguem. Esse nome, ou referência, deve seguir algumas regras, para evitar, por exemplo, colisões de nomes e também, para não &amp;quot;confundir&amp;quot; o interpretador.&lt;/p&gt;
&lt;p&gt;Se utilizamos uam IDE para o desenvolvimento, está marcará todos os nomes inválidos que por ventura tentarmos utilizar. Porém, se trabalharmos com editores simples, como por exemplo, o Bloco de Notas do Windows, tudo que for digitado é aceito e nenhuma mensagem é exibida.&lt;/p&gt;
&lt;p&gt;As regras que aqui estudaremos também servirão para a definição de nomes de todas as demais estruturas, isto é, as regras aqui estudadas podem ser utilizadas na definição de funções, nomes de classes, nome de pacotes e etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nome"&gt;
&lt;h2&gt;NOME&lt;/h2&gt;
&lt;p&gt;Na construção de referências, pode-se utilizar, quaisquer letras, sejam elas maiúsculas ou minúsculas. Variáveis não devem utilizar nomes de classes ou pacotes, ou seja, não devemos declarar uma variável de nome &amp;quot;str&amp;quot;, ou então, &amp;quot;int&amp;quot;, até porque, esses são nomes de classes definidas por padrão pela linguagem Python. Porém, a linguagem não proibe-nos a utilização de referências que sejam iguais a nomes de classes, porém, se assim o fizermos, poderemos &amp;quot;bagunçar&amp;quot; o ambiente de execução da nossa aplicação.&lt;/p&gt;
&lt;p&gt;De maneira geral, temos a disposição todo o alfabeto para definirmos o nome de variáveis. Também podemos, por exemplo, compor o nome da variável utilizando números, o que estudaremos nos tópicos a seguir.&lt;/p&gt;
&lt;p&gt;Desde já é importante dizer que em nenhuma situação será permitida a utilização de caracteres especiais na composição de nomes, isto é, não podemos utilizar a lista de caracteres a seguir quando estivermos definindo o nome de variáveis:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteres-numericos"&gt;
&lt;h2&gt;CARACTERES NUMÉRICOS&lt;/h2&gt;
&lt;p&gt;Uma referência pode conter números, desde que este não seja o primeiro caractere. Assim, referências como por exemplo, &lt;cite&gt;9num&lt;/cite&gt;, ou então, &lt;cite&gt;1var&lt;/cite&gt;, não são permitidos, até porque, o interpretador, não conseguirá distinguir se estamos definindo uma referências ou então, estamos trabalhando com números.&lt;/p&gt;
&lt;p&gt;Então, a utilização de números é permitida só e somente só após o primeiro caractere, como podemos ver nos exemplos a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;caractere&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;a2b3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qualquer texto... &amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A seguir, temos uma breve lista contendo os caracteres numéricos que não podem ser utilizados, nem na primeira ou segunda posição, por exemplo:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="palavras-reservadas"&gt;
&lt;h2&gt;PALAVRAS RESERVADAS&lt;/h2&gt;
&lt;p&gt;É importante observar que o Python possui um conjunto de palavras reservadas e essas, também não poderão ser utilizadas na composição de nomes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteres-especiais"&gt;
&lt;h2&gt;CARACTERES ESPECIAIS&lt;/h2&gt;
&lt;p&gt;Caracteres especiais, como por exemplo, os caracteres latinos, como o c-cedilha &lt;tt class="docutils literal"&gt;ç&lt;/tt&gt;, o tio &lt;tt class="docutils literal"&gt;~&lt;/tt&gt; e etc, não são permitidos na composição de nomes de variáveis. O único caractere tido como especial e que pode ser utilizado é o underline &lt;cite&gt;_&lt;/cite&gt;. A seguir, temos uma lista com os caracteres que não podem ser utilizados na composição de referências:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ç&lt;/li&gt;
&lt;li&gt;&lt;ul class="first"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ul class="first"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ul class="first"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;/&lt;/li&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;li&gt;!&lt;/li&gt;
&lt;li&gt;&amp;#64;&lt;/li&gt;
&lt;li&gt;#&lt;/li&gt;
&lt;li&gt;$&lt;/li&gt;
&lt;li&gt;%&lt;/li&gt;
&lt;li&gt;&amp;amp;&lt;/li&gt;
&lt;li&gt;/&lt;/li&gt;
&lt;li&gt;( )&lt;/li&gt;
&lt;li&gt;[ ]&lt;/li&gt;
&lt;li&gt;^&lt;/li&gt;
&lt;li&gt;~&lt;/li&gt;
&lt;li&gt;´&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Novamente, é importante dizer que caracteres especiais não podem ser utilizados, seja qual for a posição em que estes aparecerem na definição da referência!&lt;/p&gt;
&lt;p&gt;A seguir, temos mais um exemplo dos caracteres que não podem estar na primeira posição de um nome de variável.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;informe seu nome&amp;quot;&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As referências utilizadas no código acima são todas invalidas, e a razão, deve-se ao fato das mesmas iniciarem com caracteres numéricos. Como já dito, o primeiro caractere deve, obrigatoriamente, ser um letra.&lt;/p&gt;
&lt;p&gt;Podemos concluir também, que uma variável &lt;strong&gt;JAMAIS&lt;/strong&gt; será composta por somente números, haja vista que o primeiro caractere precisa ser uma letra.&lt;/p&gt;
&lt;p&gt;Para definirmos o nome de variáveis, temos que iniciar utilizando um caractere que esteja no intervalo de &lt;cite&gt;a&lt;/cite&gt; à &lt;cite&gt;z&lt;/cite&gt; ou &lt;cite&gt;A&lt;/cite&gt; à &lt;cite&gt;Z&lt;/cite&gt;. A única exceção a esta regra é o caractere underline &lt;cite&gt;_&lt;/cite&gt;. A seguir, temos alguns nomes de variáveis &lt;strong&gt;válidos&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;vvar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;_vVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__________idade&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="unica-excecao"&gt;
&lt;h2&gt;ÚNICA EXCEÇÃO&lt;/h2&gt;
&lt;p&gt;O único caractere especial, que pode ser utilizado na composição de nomes, e que também pode estar situando em qualquer posição, é o caractere underline &lt;tt class="docutils literal"&gt;_&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;_minhaVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;
&lt;span class="n"&gt;____texto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="macete"&gt;
&lt;h2&gt;MACETE&lt;/h2&gt;
&lt;p&gt;Na dúvida sobre quais caracteres são permitidos, utilize somente letras sem acentuação e sem espaços, até porque, todas as letras são permitidas.&lt;/p&gt;
&lt;p&gt;Agora, se você quer decorar o que pode e o que não pode, pense da seguinte maneira:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;números só se for o segundo caractere&lt;/li&gt;
&lt;li&gt;letras que não estejam no alfabeto Inglês não permitidos&lt;/li&gt;
&lt;li&gt;caracteres que não são letras e não são número não podem ser utilizados!&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;A seguir, temos o código-fonte feito na aula de Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#===================================================&lt;/span&gt;
&lt;span class="c1"&gt;#=================== eXcript.com ===================&lt;/span&gt;
&lt;span class="c1"&gt;#========== youtube.com/user/excriptvideo ==========&lt;/span&gt;
&lt;span class="c1"&gt;#===================================================&lt;/span&gt;

&lt;span class="n"&gt;num_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;num_dec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;7.3&lt;/span&gt;
&lt;span class="n"&gt;val_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qualquer texto&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;o valor é:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;o valor é: &lt;/span&gt;&lt;span class="si"&gt;%i&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;num_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;o valor é: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo decimal:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_dec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo decimal: &lt;/span&gt;&lt;span class="si"&gt;%.10f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;num_dec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo decimal: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_dec&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo strings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo strings &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;val_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo strings &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;val_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="variavel"></category><category term="nomenclatura"></category><category term="blog"></category></entry><entry><title>Características das Variáveis em Python</title><link href="http://excript.com/python/caracteristicas-das-variaveis-python.html" rel="alternate"></link><published>2016-05-06T18:40:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:python/caracteristicas-das-variaveis-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aulas continuaremos o estudo sobre as variáveis em Python. Estudaremos, especificamente, as características, ciclo de vidas e como podemos explorar as funcionalidades que a linguagem Python nos oferece na manipulação de variáveis.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;O conceito de variável em programação é semelhante ao conceito de variável na matemática. As variáveis, de maneira geral, possuem um grupo de características que as definem e as tornam entidades única. As características, ou então, as propriedades que todas as variáveis possuem, determinam um aspecto do funcionamento e também, especificam o seu ciclo de vida, a maneira como as informação são gerenciadas e manipuladas pela &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/M%C3%A1quina_virtual"&gt;Máquina Virtual&lt;/a&gt; do Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteristicas-das-variaveis"&gt;
&lt;h2&gt;CARACTERÍSTICAS DAS VARIÁVEIS&lt;/h2&gt;
&lt;p&gt;Há 4 características elementares referentes a todas as variáveis, são elas:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;NOME:&lt;/strong&gt; toda variável possui &lt;strong&gt;nome&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TIPO:&lt;/strong&gt; toda variável possui &lt;strong&gt;tipo&lt;/strong&gt; (inferido pela VM)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ESPAÇO:&lt;/strong&gt; toda variável ocupará um &lt;strong&gt;espaço de memória&lt;/strong&gt; único&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VALOR:&lt;/strong&gt; toda variável possui &lt;strong&gt;valor&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ainda que não declaramos explicitamente o tipo das variáveis em Python, temos que uma variável inferida pela VM como sendo do tipo inteiro, não poderá, durante o tempo de execução, ter uma String ou então, qualquer outro valor atribuido. Por isso dizemos que o Python é uma linguagem fortemente tipada, isto é, as variáveis serão do mesmo tipo do inferido inicialmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nome-referencia"&gt;
&lt;h2&gt;NOME (REFERÊNCIA)&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;nome da variável&lt;/strong&gt; ou então, a referência, é como iremos nos referir a um determinado espaço de memória durante o tempo de desenvolvimento. Toda vez que utilizarmos o nome de uma variável, poderemos, ler o valor contido, ou então, atribuir quaisquer outro valor, desde que o tipo seja o mesmo.&lt;/p&gt;
&lt;p&gt;É importante entender que o nome, também chamado de referência, é uma ponte entre o endereço de memória e o nosso código. Assim, não precisamos manipular números (endereços de memória) durante o desenvolvimento, o que torna nossos códigos mais legíveis e fáceis de serem implementados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tipo"&gt;
&lt;h2&gt;TIPO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Tipo de Variável&lt;/strong&gt; funciona como uma espécie de classificação das informações, ou seja, o tipo informa com antecedência qual informação podemos esperar de determinada variável. Toda variável declarada será, obrigatoriamente, de algum tipo. O tipo da variável será armazenado junto com o valor que esta estará armazenando.&lt;/p&gt;
&lt;p&gt;A linguagem tem definido algumas operações para alguns tipos de dados, por exemplo, quando utilizamos o operador (adição) entre 2 variáveis que contenham números inteiros, o interpretador, somará os valores. Porém, se utilizarmos o sinal de adição com 2 variáveis do tipo String, o interpretador fará uma concatenação.&lt;/p&gt;
&lt;p&gt;A operação que ocorrerá mediante ao tipo da variável é, definido em código e, podemos, se desejarmos, alterar o funcionamento. Aprendemos como por exemplo, alterar a maneira como 2 números inteiros são somados, quando estudarmos a Orientação a Objetos em Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="espaco"&gt;
&lt;h2&gt;ESPAÇO&lt;/h2&gt;
&lt;p&gt;As informações precisam ser armazenada em alguma mídia, e as variáveis, são armazenadas na memória RAM do nosso computador. A memória RAM é formada por centenas de milhares de pequenos blocos, onde, cada bloco, possui um número que o identifica e o distingue dos demais. Assim, uma informação sempre estará armazenada numa determinada posição física de memória.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="valor"&gt;
&lt;h2&gt;VALOR&lt;/h2&gt;
&lt;p&gt;O valor, ou então, a informação contida na variável, isto é, o dado propriamente dito, é, a parte principal de qualquer variável.&lt;/p&gt;
&lt;p&gt;Toda variável será capaz de ter o seu valor alterado durante o tempo de execução, bastando para isso, somente, a atribuição de outro valor. A única regra definida para a atribuição de valores é que o tipo do valor a ser atribuído, seja do mesmo tipo da variável. Assim, para variáveis inteiras, só poderemos atribuir números. Para variáveis do tipo String, só poderemos atribuir texto. Para variáveis do tipo Boolean, só podemos atribuir números entre 0 à 1, ou então, True ou False.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="variáveis"></category><category term="caracteristicas das variáveis"></category><category term="tipos"></category><category term="blog"></category></entry><entry><title>Variáveis em Python</title><link href="http://excript.com/python/variavel-em-python.html" rel="alternate"></link><published>2016-05-06T18:30:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:python/variavel-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula iniciaremos o estudo das variáveis em Python e aprenderemos os principais conceitos da declaração e respectivo uso das variáveis previamente declaradas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="definicao-de-variavel"&gt;
&lt;h2&gt;DEFINIÇÃO DE VARIÁVEL&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Variável&lt;/strong&gt; é um espaço de memória que reservamos para armazenar valores temporários que estão sendo processados ou manipulados. Toda variável possui um tipo e este será inferido conforme a informação inicial que atribuirmos para a variável. Uma variável pode ter o seu valor alterado a qualquer momento, porém, não é possível alterar o seu tipo durante a execução.&lt;/p&gt;
&lt;p&gt;Toda variável irá armazenar o valor na memória RAM (Random Access Memory) e a mesma estará disponível enquanto houver eletricidade, ou o computador não seja reiniciado. Todo armazenamento feito na memória RAM é considerado como um armazenamento temporário, e trabalhamos dessa maneira, devido a velocidade de entrega que memória RAM proporciona se comparada a outras mídias, como por exemplo, o disco rígido, PenDrive, CD-Room e etc.&lt;/p&gt;
&lt;p&gt;Podemos declarar quantas variáveis desejarmos. O Python administrará (reservará espaço) para cada uma individualmente e associará o nome que definirmos ao espaço de memória. Temos então, que a localização do espaço de memória será feito por intermédio da referência (nome da variável) definida pelo programador. A partir do momento em que não fizermos mais uso de determinada variável, a máquina virtual do Python desalocará o espaço reservado, devolvendo-o ao sistema operacional.&lt;/p&gt;
&lt;p&gt;A melhor maneira para manipularmos informações seja num &lt;tt class="docutils literal"&gt;programa&lt;/tt&gt;, como também num &lt;tt class="docutils literal"&gt;Script&lt;/tt&gt;, é através da utilização de variáveis. Isso porque, variáveis possuem uma estrutura simples e rápida para utilização.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-funcionam-as-variaveis"&gt;
&lt;h2&gt;COMO FUNCIONAM AS VARIÁVEIS?&lt;/h2&gt;
&lt;p&gt;Devemos pensar nas variáveis como sendo um espaço físico. Este espaço é administrado pelo hardware, pela placa-mãe, processador e sistema operacional. Cada pedaço do espaço físico possui um número que o identifica (número identificador) e assim, ao declararmos uma variável, estaremos, reservamos um espaço físico para guardar informações temporariamente e vinculando esse espaço ao nome da variável (referência).&lt;/p&gt;
&lt;p&gt;As informações que serão armazenadas são temporárias, até porque, o funcionamento da memória RAM necessita, obrigatoriamente, de eletricidade para seu funcionamento. Não existe limites pré-definidos da quantidade de variáveis, ou quantidade de informações que é possível utilizar. Essas quantias sempre serão definidas pela quantidade de memória física que houver no sistema, e a quantidade de variáveis que podemos declarar, também estará, diretamente relacionada com a quantidade de espaço físico disponível, isto é, a quantidade de memória RAM existente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-uma-referencia"&gt;
&lt;h2&gt;O QUE É UMA REFERÊNCIA?&lt;/h2&gt;
&lt;p&gt;Referência é o nome que damos às nossas variáveis e é a forma como a VM do Python vinculará as informações entre o nosso programa e a memória do computador.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quantas-variaveis-podemos-declarar"&gt;
&lt;h2&gt;QUANTAS VARIÁVEIS PODEMOS DECLARAR?&lt;/h2&gt;
&lt;p&gt;Quando iniciamos o estudo da programação, gostamos de conhecer os limites, quantidades e capacidades de tudo. Mensurar a quantidade de variáveis que um programa Python pode ter é bastante difícil. Isso porque, vamos supor, um simples número inteiro para o Python, não possuirá somente o valor da sua informação e sim, haverá um conjunto de dados que estarão vinculado ao número internamente. Junto a cada referência declarada, haverá também, muitas outras informações vinculadas, informações estas conhecidas como metadados, e estas, serão armazenadas para tanto uso intero no Python, ou então, para melhorar a performance em alguma situação.&lt;/p&gt;
&lt;p&gt;A linguagem Python não define quantidades até porque, os limites sempre estarão diretamente relacionadas com a capacidade do computador onde o programa for executado.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="variavel"></category><category term="blog"></category></entry><entry><title>Indentação do código Python</title><link href="http://excript.com/python/indentacao-python.html" rel="alternate"></link><published>2016-05-06T18:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:python/indentacao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a utilização da indentação e a sua importância para a correta interpretação do código pelo interpretador.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="indentacao"&gt;
&lt;h2&gt;INDENTAÇÃO&lt;/h2&gt;
&lt;p&gt;Indentar é o recuo do texto em relação a sua margem, ou seja, se antes de escrevermos uma instrução, utilizamo 4 espaçamentos da margem esquerda até a instrução propriamente dita, podemos dizer que a indentação utilizada possui 4 espaços.&lt;/p&gt;
&lt;p&gt;A palavra indentação, vem do inglês indentation e é normal a sua utilização no código-fonte de um programa, indiferente da linguagem utilizada.&lt;/p&gt;
&lt;p&gt;Em Python, a indentação possui função bastante especial, até porque, os blocos de instrução são delimitados pela profundidade da indentação, isto é, os códigos que estiverem rente a margem esquerda, farão parte do primeiro nível hierárquico. Já, os códigos que estiverem a 4 espaços da margem esquerda, estarão no segundo nível hierárquico e aqueles que estiverem a 8 espaços, estarão no terceiro nível e assim por diante.&lt;/p&gt;
&lt;p&gt;Todos os blocos são delimitados pela profundidade da indentação e por isso, a sua importância, é vital para um programa em Python. O mau uso, isto é, utilizar 4 espaçamentos enquanto deveríamos estar utilizando 8, acarretará na não execução, ou então, no mal funcionamento em geral.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="blocos"&gt;
&lt;h2&gt;BLOCOS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;blocos&lt;/strong&gt; são uma ou mais instruções que devem ser executadas uma após a outra, de cima para baixo da esquerda para a direita.&lt;/p&gt;
&lt;p&gt;Existem vários tipos de blocos, os mais comuns, são os blocos de códigos, isto é, blocos que contenham instruções Python.&lt;/p&gt;
&lt;p&gt;Outro tipo comum de bloco são os blocos de comentários, isto é, um conjunto de caracteres, que ocupam uma ou mais linha de código e estão delimitados por uma notação que a linguagem de programação definiu.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="blocos-de-codigo"&gt;
&lt;h2&gt;BLOCOS DE CÓDIGO&lt;/h2&gt;
&lt;p&gt;Bloco de código é uma ou um conjunto de instrução que estejam numa mesma distância da margem esquerda. A seguir, temos um trecho de código Python que mostra a utilização de 2 blocos. Estes foram definidos pela quantidade de espaços, isto é, pela distância da margem esquerda.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nivel&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#primeiro nível hierárquico&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nível&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#segundo nível hierárquico&lt;/span&gt;


&lt;span class="n"&gt;Este&lt;/span&gt; &lt;span class="err"&gt;é&lt;/span&gt; &lt;span class="n"&gt;um&lt;/span&gt; &lt;span class="n"&gt;bloco&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;comentários&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;essa&lt;/span&gt; &lt;span class="err"&gt;é&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;primeira&lt;/span&gt; &lt;span class="n"&gt;linha&lt;/span&gt;
&lt;span class="n"&gt;agora&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;estamos&lt;/span&gt; &lt;span class="n"&gt;na&lt;/span&gt; &lt;span class="n"&gt;segunda&lt;/span&gt; &lt;span class="n"&gt;linha&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;comentário&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;É comum utilizarmos 2 espaços ou então, 4 espaços, ou mesmo 1 tabulação ao lado esquerdo da instrução para assim definir, em qual bloco a instrução está contida. O primeiro nível é o nível 0, ou seja, o nível que não contém espaçamento. A linguagem não nos obriga a utilizar uma determinada quantidade de espaçamentos, ou então, tabulações. Porém, se utilizarmos 4 espaços para definir o primeiro blocos, o interpretador assumirá que as próximas instruções estão indentadas com uso de múltiplos de 4.&lt;/p&gt;
&lt;p&gt;A recomendação é que utilizemos, ou 1 tabulação, ou então, 4 espaços.&lt;/p&gt;
&lt;p&gt;Ao invés de trabalharmos com quantidades de espaços, podemos utilizar uma determinada quantidade de tabulações. O primeiro nível hierárquico seria o nível 0, isto é, instruções que não possuem tabulações a sua esquerda. O segundo nível utilizaria uma única tabulação, o terceiro nível utilizaria 2 tabulações e assim sucessivamente.&lt;/p&gt;
&lt;p&gt;O mais importante é sabermos que em Python, o espaçamento não é facultativos, isto é, não o colocamos se assim desejarmos, mas sim, somos obrigados a trabalharmos com algum sistema de espaçamento a fim de definirmos blocos isolados de códigos.&lt;/p&gt;
&lt;p&gt;Os benefícios do uso da tabulação são percebidos rapidamente, isso porque, um código em Python sempre estará organizado, do contrário o mesmo não funcionará. E não somente isso, código indentados tornam-se mais legíveis e é um padrão utilizado por praticamente todos os programadores, indiferente da linguagem em que estes estejam trabalhando.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="indentação"></category><category term="blog"></category></entry><entry><title>Comentários em Python</title><link href="http://excript.com/python/comentarios-em-python.html" rel="alternate"></link><published>2016-05-06T17:40:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:python/comentarios-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a utilização de comentários em Python, onde e o que devemos comentar e diversas outras questões pertinentes ao uso de comentários junto ao código fonte.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="comentarios"&gt;
&lt;h2&gt;COMENTÁRIOS&lt;/h2&gt;
&lt;p&gt;O uso de comentários é uma prática normal na programação. O objetivo é poder adicionar descrições em partes especificas do código, seja para documentá-lo, seja para adicionar uma descrição, ou mesmo, para marcar que uma determinada linha, ou um conjunto de linhas, não devem ser executados.&lt;/p&gt;
&lt;p&gt;Para adicionarmos comentários, utilizamos uma notação especial, a fim de informar ao interpretador que, determinado trecho de caracteres, possui a finalidade de descrever ou documentar algo e assim, o compilador ou interpretador, não deve interpretar os caracteres contidos na notação que demarca trechos de comentários.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-notacao-definida-pelo-python"&gt;
&lt;h2&gt;A NOTAÇÃO DEFINIDA PELO PYTHON&lt;/h2&gt;
&lt;p&gt;Em Python, temos 3 notações utilizadas para definir blocos de comentários. A primeira e mais simples, é para definirmos que uma única linha deve ser ignorada, e as 2 outras, para delimitarmos um conjunto de linhas.&lt;/p&gt;
&lt;div class="section" id="notacao-inline"&gt;
&lt;h3&gt;NOTAÇÃO INLINE&lt;/h3&gt;
&lt;p&gt;Utilizamos o caractere cerquilha &lt;cite&gt;#&lt;/cite&gt; para demarcarmos que tudo que estiver &lt;strong&gt;a frente&lt;/strong&gt; desse caractere, deve ser ignorado pelo interpretador do Python, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#tudo que estiver a frente da cerquilha será ignorado&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;teste&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#a instrução atrás da cerquilha será interpretada&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="notacao-multi-lines-varias-linhas"&gt;
&lt;h2&gt;NOTAÇÃO MULTI-LINES (VÁRIAS LINHAS)&lt;/h2&gt;
&lt;p&gt;A linguagem Python também disponibiliza uma notação para demarcarmos que um conjunto de linhas deve ser ignorado pelo interpretador. Essa notação se dá pelo uso de 3 aspas simples, ou entao, 3 aspas duplas. Nestes casos, tudo que estiver delimitado pelas aspas não será interpretado, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;toda informações contida entre 3 aspas SIMPLES&lt;/span&gt;
&lt;span class="sd"&gt;é considerada como caracteres que devem ser ignorados.&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;


&lt;span class="n"&gt;toda&lt;/span&gt; &lt;span class="n"&gt;informações&lt;/span&gt; &lt;span class="n"&gt;contida&lt;/span&gt; &lt;span class="n"&gt;entre&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;aspas&lt;/span&gt; &lt;span class="n"&gt;DUPLAS&lt;/span&gt;
&lt;span class="err"&gt;é&lt;/span&gt; &lt;span class="n"&gt;considerado&lt;/span&gt; &lt;span class="n"&gt;texto&lt;/span&gt; &lt;span class="n"&gt;que&lt;/span&gt; &lt;span class="n"&gt;deve&lt;/span&gt; &lt;span class="n"&gt;ser&lt;/span&gt; &lt;span class="n"&gt;ignorado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, definimos 2 blocos de códigos que serão ignorados pelo interpretador do Python ou então, podemos dizer que, serão interpretados como se fossem comentários e que dispensam qualquer avaliação por parte do interpretador.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="para-que-utilizamos-comentarios"&gt;
&lt;h2&gt;PARA QUE UTILIZAMOS COMENTÁRIOS?&lt;/h2&gt;
&lt;p&gt;A utilização de comentários da-se tanto para inserirmos uma informações que não podemos esquecer, ou então, algo que desejamos que outros programadores saibam no momento em que estiverem lendo determinadas linhas de código.&lt;/p&gt;
&lt;p&gt;A primeira utilização dos comentário é fazer o que o próprio nome sugere: comentar os nosso códigos informando ao interpretador que essas linhas não devem ser executadas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="documentacao-de-programas"&gt;
&lt;h2&gt;DOCUMENTAÇÃO DE PROGRAMAS&lt;/h2&gt;
&lt;p&gt;Utilizamos a marcação de comentários para documentarmos programas, classes, funções, variáveis, constantes ou seja lá o que for. Quando criamos uma biblioteca e essa será utilizada por terceiros, é importante que o código possua uma documentação para que os outros programadores entendam a nossa biblioteca e, saibam como invocar as funções corretamente, ou mesmo, para entenderem o que elas se propõem.&lt;/p&gt;
&lt;p&gt;Para a documentação de código, há um conjunto de parâmetros a serem definidos dentro do bloco de comentário a fim de instruir o programa que irá tornar nossos comentários em documentação propriamente dita.&lt;/p&gt;
&lt;p&gt;Quando documentamos partes internas do nosso programa, temos que, ao mesmo tempos em que documentamos o que estamos fazendo, também geramos documentação que será posteriormente extraída nosso código e será então, gerada a documentação propriamente dita. Dessa forma, não temos o problema de ter num diretório onde há arquivos que documentam classes e funções, e noutro diretório, as classes e funções documentadas.&lt;/p&gt;
&lt;p&gt;Assim, tudo estará junto num mesmo arquivo, feito num mesmo editor! Essa forma de trabalhar, faz com que a documentação sempre esteja atualizada e acelera o desenvolvimento de maneira geral. Até porque, no mesmo momento em que alteramos o código fonte, já podemos alterar a documentação.&lt;/p&gt;
&lt;p&gt;É recomendável nos acostumarmos a documentar nosso código. Isso não somente faz de nós melhores programadores como também, ajuda-nos na definir qual a razão que determinado trecho de código está se propondo a realizar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;A seguir, temos o exemplo feito durante aula sobre a utilização de comentários.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Aprendendo&lt;/span&gt; &lt;span class="n"&gt;como&lt;/span&gt; &lt;span class="n"&gt;utilizar&lt;/span&gt; &lt;span class="n"&gt;comentários&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;segunda&lt;/span&gt; &lt;span class="n"&gt;linha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;terceira&lt;/span&gt; &lt;span class="n"&gt;linha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aqui&lt;/span&gt; &lt;span class="err"&gt;é&lt;/span&gt; &lt;span class="n"&gt;um&lt;/span&gt; &lt;span class="n"&gt;comentário&lt;/span&gt; &lt;span class="n"&gt;que&lt;/span&gt; &lt;span class="n"&gt;não&lt;/span&gt; &lt;span class="n"&gt;será&lt;/span&gt; &lt;span class="n"&gt;interpretado&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="comentários"></category><category term="blog"></category></entry><entry><title>Primeiro programa em Python</title><link href="http://excript.com/python/primeiro-programa-em-python.html" rel="alternate"></link><published>2016-05-06T17:15:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:python/primeiro-programa-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula escreveremos o nosso primeiro programa em Python, ou seja, faremos o famoso Hello World e também, aprenderemos algumas funcionalidade básicas da linguagem&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="primeiro-programa"&gt;
&lt;h2&gt;PRIMEIRO PROGRAMA&lt;/h2&gt;
&lt;p&gt;Um programa em Python pode ser um único arquivo com a extensão *.py ou então, uma pasta que contém várias sub-pastas com diversos arquivos contendo código Python *.py e muitos outros contendo informações relevantes ao programa.&lt;/p&gt;
&lt;p&gt;Nesse nosso primeiro programa, vamos imprimir uma mensagem na saída padrão, isto é, no console, para que assim, possamos entender um pouco melhor sobre como podemos escrever dados no prompt de comando.&lt;/p&gt;
&lt;p&gt;Grande parte do nosso Curso de Python ocorrerá no Prompt de Comando, ou seja, imprimiremos mensagens na tela e em seguida, iremos ler o que o nosso usuário digitou. Essa é a &lt;strong&gt;melhor maneira para o estudo da programação&lt;/strong&gt; e também, é a melhor forma para escrevermos software!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="imprimindo-na-saida-padrao"&gt;
&lt;h2&gt;IMPRIMINDO NA SAÍDA PADRÃO&lt;/h2&gt;
&lt;p&gt;Todas as vez em que desejarmos imprimir uma mensagem na tela, basta utilizarmos a função &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;print('')&lt;/span&gt;&lt;/tt&gt;, em seguida, abrimos parêntesis, colocamos duas aspas e então, digitar o texto a ser impresso no Console. Feito isso, basta fecharmos o parêntesis e então, executar o código.&lt;/p&gt;
&lt;p&gt;Se você já programa/programou em outra linguagem, é importante lembrar que em Python, não finalizamos as instruções com uso do ponto e vírgula!&lt;/p&gt;
&lt;p&gt;Ainda que seja permitido a utilização do caractere de finalização ponto e vírgula, não é obrigatório finalizar as instruções com o mesmo. Até podemos colocá-lo se desejarmos, porém, o normal é utilizarmos somente quando precisamos colocar mais de uma instrução numa mesma linha.&lt;/p&gt;
&lt;p&gt;Não é correto dizer que não utilizamos ponto e vírgula em Python, até porque, existem situações onde é necessário a sua utilização, como por exemplo, quando precisamos, por alguma razão, escrevermos várias instruções numa única linha. Nesses casos, somos obrigados a utilizar o ponto e vírgula para dizermos ao interpretador onde inicia e onde finaliza cada instrução.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-instrucao-print"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;tt class="docutils literal"&gt;print&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;tt class="docutils literal"&gt;print&lt;/tt&gt; em Python é utilizada todas as vezes em que precisarmos escrever alguma informação na saída padrão, também chamado de Console, linha de comando e etc. A função &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; pode receber vários parâmetros, como por exemplo, o &lt;tt class="docutils literal"&gt;encoding&lt;/tt&gt; do texto que será impresso ou então, um nome de arquivo para o qual desejamos escrever dentro.&lt;/p&gt;
&lt;p&gt;Inicialmente, vamos utilizar a instrução &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; para escrever mensagens na saída padrão, isto é, no Console. No trecho de código a seguir, temos um exemplo do uso da função &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;parametro&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Escrevemos o nome da instrução, neste caso, &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt;. Em seguida, abrimos um parêntesis, abrimos aspas e então, escrevemos a mensagem que deverá ser impressa na tela. Assim, tudo que estiver entre aspas será reconhecido como texto e será impresso no Console. Feito isso, fechamos aspas, fechamos parêntesis e então, podemos executar o nosso programa.&lt;/p&gt;
&lt;p&gt;IMPORTANTE: tome cuidado para que em todas as vezes que abrires parêntesis fecha-lo ou então, para todas as vezes em que abrires aspas, fechá-las! Do contrário, será levantado uma mensagem de erro pelo interpretador assim que tentares executar o código.&lt;/p&gt;
&lt;p&gt;O programa que desenvolvemos possui a base que todo script em Python terá. Logo, ainda que o exemplo tenha sido simples, os princípios aprendidos são muito importantes para o restante do nosso estudo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;texto 1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;texto 2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="primeiro programa"></category><category term="hello world"></category><category term="blog"></category><category term="print"></category></entry><entry><title>Instalando o PyCharm no Windows</title><link href="http://excript.com/python/instalando-o-pycharm-windows.html" rel="alternate"></link><published>2016-05-06T17:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:python/instalando-o-pycharm-windows.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos o passo-a-passo para o download e a instalação do PyCharm no Windows, ou seja, vamos aprender a baixar e a instalar a IDE utilizada nesse curso.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="ambiente-para-desenvolvimento-em-python"&gt;
&lt;h2&gt;AMBIENTE PARA DESENVOLVIMENTO EM PYTHON&lt;/h2&gt;
&lt;img alt="Imagem da IDE PyCharm utilizada nos Cursos da eXcript" src="../images/curso-de-python/pycharm-ide.png" /&gt;
&lt;p&gt;Para desenvolvermos em Python, podemos utilizar qualquer editor de textos ou então, o simples Bloco de Nota do Windows. Por padrão, o interpretador do Python executa textos [códigos] compostos por caracteres ASCII e/ou Unicode e por isso, é indiferente o programa que utilizamos para escrevermos códigos. Isso porque, um arquivo de código é basicamente um arquivo de texto com a extensão *.py.&lt;/p&gt;
&lt;p&gt;Atualmente, é comum utilizarmos programas pra construir programas, isto é, utilizamos softwares que são desenvolvidos para agilizar e automatizar a nossa tarefa de programação. Estes software são conhecidos como IDE, um acrônimo de &lt;tt class="docutils literal"&gt;Integrated Development Environment&lt;/tt&gt;, que numa tradução livre significa, &lt;tt class="docutils literal"&gt;Ambiente de Desenvolvimento Integrado&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Existem centenas de &lt;strong&gt;IDE&lt;/strong&gt; no mercado, algumas são gratuitas, outras pagas. Os recursos que estas oferecem vão desde a compilação e execução automatica do código, até o gerenciamento e geração de código automatizado.&lt;/p&gt;
&lt;p&gt;Para programarmos em Python, temos diversas opções de IDE disponíveis, a maioria é gratuita ou então, possui uma versão livre. Inclusive, existe &lt;strong&gt;IDE&lt;/strong&gt; para desenvolvimento em Python escritas com a própria linguagem Python, como o é o caso do &lt;a class="reference external" href="http://ninja-ide.org/downloads/"&gt;NINJA IDE&lt;/a&gt;, uma excelente ferramenta, multiplataforma, gratuita e open source.&lt;/p&gt;
&lt;script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"&gt;&lt;/script&gt;
&lt;!-- teste --&gt;
&lt;ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-5466436161806566"
     data-ad-slot="2551628736"
     data-ad-format="auto"&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;PyCharm&lt;/h2&gt;
&lt;img alt="Logo da IDE JetBrain PyCharm" src="../images/curso-de-python/jetbrains-pycharm.png" /&gt;
&lt;p&gt;O PyCharm é uma IDE desenvolvida pela empresa &lt;a class="reference external" href="https://www.jetbrains.com/"&gt;JetBrains&lt;/a&gt;, empresa esta especializada na produção de ferramentas para o desenvolvimento de software, como por exemplo, o AndroidStudio, que atualmente é, &lt;a class="reference external" href="http://developer.android.com/"&gt;o Ambiente de Desenvolvimento oficial para a plataforma Google Android&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Os produtos &lt;a class="reference external" href="https://www.jetbrains.com/"&gt;JetBrains&lt;/a&gt;, ou melhor, as IDE´s da JetBrains, estão dentre as melhores ferramentas para desenvolvimento. Para programação em Python, temos a IDE de nome &lt;strong&gt;PyCharm&lt;/strong&gt;, e este será o programa que utilizaremos para desenvolvimento de aplicações Python em todas as aulas deste curso.&lt;/p&gt;
&lt;p&gt;Atualmente, o &lt;strong&gt;PyCharm&lt;/strong&gt; é considerado a melhor &lt;strong&gt;IDE&lt;/strong&gt; para desenvolvimento em Python e, recomendamos que voce utilize o mesmo para o estudo da linguagem Python.&lt;/p&gt;
&lt;p&gt;O PyCharm possui uma versão gratuita e uma versão paga. Inicialmente, a versão gratuita possui muito mais recursos do que iremos precisar, porém, quando estivermos desenvolvendo para Web e utilizando framework's como Django ou Flask, é producente adquirir uma licença pela agilidade e produtividade que a versão comercial do PyCharm proporciona.&lt;/p&gt;
&lt;p&gt;A IDE PyCharm oferece um módulo de acesso a Banco de Dados e também, trás uma maneira de testarmos códigos SQL, administrar o nosso banco, alterar, editar e excluir registros de maneira simples e rápida. Conseguimos administrar praticamente todos os bancos de dados do mercado sem a necessidade de utilizarmos outro programa, até porque, o PyCharm possui todo o módulo de acesso a base de dados incorporada a IDE.&lt;/p&gt;
&lt;p&gt;Neste curso utilizaremos a versão comunitária do PyCharm e recomendamos que você também a utilize. Porém, sinta-se livre para trabalhar com qualquer editor, o resultado sempre deverá ser o mesmo, haja vista que a &lt;strong&gt;IDE&lt;/strong&gt;, isto é, o Ambiente de Desenvolvimento Integrado, gerencia a produção de código sem alterar ou influenciar como o código será executado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalacao"&gt;
&lt;h2&gt;INSTALAÇÃO&lt;/h2&gt;
&lt;p&gt;Para instalar o PyCharm em seu computador, é necessário que você &lt;a class="reference external" href="https://www.java.com/pt_BR/download/"&gt;instale antes o Java&lt;/a&gt;, caso não tenhas o mesmo instalado. Na dúvida, ou seja, se não souberes se o Java está instalado, baixe-o e faça a instalação, somente para garantir!&lt;/p&gt;
&lt;p&gt;Também é importante que você já tenha instalado o Python em seu computador. Isso porque, o PyCharm configurará o ambiente para você, do contrário, será preciso configurar qual a instalação do Python você deseja utilizar.&lt;/p&gt;
&lt;p&gt;Após o download e instalação do Java e do Python, &lt;a class="reference external" href="https://www.jetbrains.com/pycharm/download/"&gt;faça o download da última versão do PyCharm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Caso queiras &lt;a class="reference external" href="https://www.jetbrains.com/"&gt;acessar o site da JetBrains, utilize este link&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;O exemplo a seguir foi desenvolvido na aula após a instalação do PyCharm.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vindo&lt;/span&gt; &lt;span class="n"&gt;ao&lt;/span&gt; &lt;span class="n"&gt;curso&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Bem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vindo&lt;/span&gt; &lt;span class="n"&gt;ao&lt;/span&gt; &lt;span class="n"&gt;curso&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bem&lt;/span&gt; &lt;span class="n"&gt;vindo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ne"&gt;SyntaxError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;invalid&lt;/span&gt; &lt;span class="n"&gt;syntax&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="pycharm"></category><category term="jetbrains"></category><category term="ide"></category><category term="blog"></category></entry><entry><title>IDLE - Modo Interativo do Python</title><link href="http://excript.com/python/idle-python.html" rel="alternate"></link><published>2016-05-02T01:50:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-02:python/idle-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o aplicativo IDLE que é, a forma interativa para utilizarmos o Python e assim, sermos capazes de testar funções, classes e quaisquer classe de qualquer pacote instalado.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="idle-visao-geral"&gt;
&lt;h2&gt;IDLE - VISÃO GERAL&lt;/h2&gt;
&lt;img alt="Imagem que exibe o IDLE em execução." src="../images/curso-de-python/idle.png" /&gt;
&lt;p&gt;O IDLE é um programa escrito em Python para ser utilizado como um ambiente de desenvolvimento integrado para execução de Script´s. A aplicação vem junto com a maioria das instalações do Python e está presente na distribuição oficial desde a versão 2.3.&lt;/p&gt;
&lt;p&gt;O editor está construido 100% em Python, logo, toda a parte gráfica foi desenvolvida utilizando a biblioteca Tkinter.&lt;/p&gt;
&lt;p&gt;De forma geral, podemos dizer que o objetivo do IDLE é proporcionar uma maneira rápida e fácil para o uso das funções e bibliotecas do Python, como também, proporcionar uma plataforma de estudo simples de ser utilizada, disponibilizando num único lugar, todos os recursos e bibliotecas do Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="code-complete"&gt;
&lt;h2&gt;CODE COMPLETE&lt;/h2&gt;
&lt;p&gt;O IDLE vem evoluindo bastante nas últimas versões. Atualmente, o mesmo possui um &lt;tt class="docutils literal"&gt;code complete&lt;/tt&gt; bastante inteligente, que exibe os parâmetros das função, ou então, todas as funções que podem ser invocadas por determinada classe ou objeto.&lt;/p&gt;
&lt;img alt="Imagem mostrando CodeComplete do IDLE" src="../images/curso-de-python/idle-code-complete.png" /&gt;
&lt;p&gt;As teclas de atalho para chamar o CodeComplete são: Ctrl + Espaço. A forma como chamamos o CodeComplete do IDLE é igual a 99% das IDE´s.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="editor-de-scripts"&gt;
&lt;h2&gt;EDITOR DE SCRIPTS&lt;/h2&gt;
&lt;p&gt;O IDLE também possui um editor de Script de várias linhas. Para utiliza-lo acesse o Menu &lt;cite&gt;File -&amp;gt; New File&lt;/cite&gt;, ou então, pressione as teclas de atalho Ctrl + N. Em seguida, será aberta uma janela semelhante ao que temos abaixo.&lt;/p&gt;
&lt;img alt="Imagem mostrando CodeComplete do IDLE" src="../images/curso-de-python/idle-editor-scripts.png" /&gt;
&lt;p&gt;Como podemos ver na imagem, nesta janela é possível criar scripts que contenham várias linhas e em seguida, executar todo o arquivo. Para executar o código, inicialmente, salve o Script e em seguida, vá no Menu &lt;cite&gt;Run -&amp;gt; Run Module&lt;/cite&gt;, ou então, pressione a tecla de atalho F5. Feito isso, o Script será executado, caso não haja erros.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcionamento-basico-do-idle"&gt;
&lt;h2&gt;FUNCIONAMENTO BÁSICO DO IDLE&lt;/h2&gt;
&lt;p&gt;Para executar uma instrução no IDLE, basta digitarmos a mesma e pressionarmos a tecla Enter. Se a instrução enviada for válida, algo será impresso na tela ou então, nada acontecerá, salvo que o Cursor se posicionará numa nova linha.&lt;/p&gt;
&lt;p&gt;Se por exemplo, executarmos a soma entre 2 números inteiros, o resultado será impresso na linha seguinte a operação, como podemos ver na imagem a seguir:&lt;/p&gt;
&lt;img alt="Imagem mostrando a utilização do IDLE como uma simples calculadora" src="../images/curso-de-python/idle-calculadora.png" /&gt;
&lt;p&gt;Como podemos ver na imagem, se mandarmos somar 2 números o resultado é impresso na linha seguinte. O mesmo resultado pode ser obtido, passando a soma como parâmetro pela função &lt;cite&gt;print()&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Após o resultado ser apresentado, o cursor é liberado para que seja possível entrar outra instrução.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="retornando-instrucoes-anteriores"&gt;
&lt;h2&gt;RETORNANDO INSTRUÇÕES ANTERIORES&lt;/h2&gt;
&lt;p&gt;A maior crítica sobre a utilização do IDLE, sem dúvidas, está no fato das teclas de atalho para voltar a última instrução enviada. Normalmente, para retornarmos a última instrução no Prompt de Comando ou então, no Shell do Linux, utilizamos as setas para cima e para baixo. Porém, no IDLE, se utilizarmos as teclas para cima e para baixo, ocorrerá que iremos posicionar o cursor na direção pressionada.&lt;/p&gt;
&lt;p&gt;Existe uma razão pela qual as teclas para cima e para baixo não foram utilizadas e também, rapidamente nos acostumamos com as teclas utilizadas por padrão pelo IDLE.&lt;/p&gt;
&lt;p&gt;Alt + P - para voltar a última instrução digitada. A letra 'P' vem de &amp;quot;previous&amp;quot;.
Alt + N - para avançar. O 'N' vem de &amp;quot;Next&amp;quot;.&lt;/p&gt;
&lt;p&gt;Assim, temos a capacidade de avançar ou então retroceder nas instruções que digitamos.&lt;/p&gt;
&lt;p&gt;Caso as teclas de atalho para avançar e retroceder as instruções lhe for incomodo, é possível alterá-las acessando o Menu do IDLE, para isso, vá em &lt;cite&gt;Option -&amp;gt; Configure IDLE -&amp;gt; Keys&lt;/cite&gt; e então, defina a tecla de atalho a ação que desejares.&lt;/p&gt;
&lt;img alt="Imagem do IDLE exibindo a janela Options para a alteração das teclas de atalho para avançar e retroceder no histórico de instruções executadas." src="../images/curso-de-python/idle-keys-next-previous-history.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="utilizando-varias-secoes"&gt;
&lt;h2&gt;UTILIZANDO VÁRIAS SEÇÕES&lt;/h2&gt;
&lt;p&gt;Quando inicializamos o IDLE é aberta uma janela que contém um editor e é inicializado uma seção do Python. Tudo que for feito numa janela, estará disponível só e somente só na seção do Python inicializada especialmente para essa janela. Se o IDLE for reiniciado, ou então, se você estiver trabalhando com várias janelas abertas, cada uma terá uma seção independente do Python, onde poderás importar bibliotecas, definir variáveis ou então, poderás fazer o que bem entender. Assim, temos que uma variável declarada na &amp;quot;Janela A&amp;quot;, não estará disponível na &amp;quot;Janela B&amp;quot;, da mesma forma que, uma variável declaradas na execução do &amp;quot;Programa X&amp;quot;, não estará disponível na execução do &amp;quot;Programa Y&amp;quot;.&lt;/p&gt;
&lt;p&gt;Muitas vezes, importamos diversas bibliotecas numa seção, ou então, alteramos algum funcionamento interno das bibliotecas do Python para estudarmos ou então, realizarmos testes.&lt;/p&gt;
&lt;p&gt;Sempre que desejares, é possível reiniciar a seção em que estamos trabalhando e assim, remover quaisquer alterações feitas ou então, remover qualquer objeto criado em memória. Para isso, vá no Menu &lt;cite&gt;Shell -&amp;gt; Restart Shell&lt;/cite&gt; ou então, pressione as teclas de atalho &lt;cite&gt;CTRL + F6&lt;/cite&gt;. Em seguida, uma linha horizontal será traçada e será escrito no centro do vídeo &lt;tt class="docutils literal"&gt;RESTART&lt;/tt&gt;, como pode ser visto na imagem abaixo:&lt;/p&gt;
&lt;img alt="Imagem do IDLE reiniciado com uso da tecla de atalho Ctrl + F6" src="../images/curso-de-python/idle-restart.png" /&gt;
&lt;p&gt;Como a imagem acima esta mostrando, a variável que foi declarada antes da reinicialização do IDLE não está mais disponível, até porque, a seção que estava sendo utilizada foi destruida e em seguida, uma nova seção do Python foi inicializada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="utilizando-o-ultimo-resultado"&gt;
&lt;h2&gt;UTILIZANDO O ÚLTIMO RESULTADO&lt;/h2&gt;
&lt;p&gt;É comum que precisarmos utilizar o último valor que foi retornado pelo IDLE, isto é, vamos supor que nós estejamos fazendo um cálculo, logo, é comum precisarmos do último resultado. Pra isso, podemos utilizar o caractere de underline ( _ ) para assim acessarmos a instância do último valor, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#realizamos uma simples soma entre 2 valores&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="c1"&gt;#utilizamos o último resultado e somamos mais 10 unidades ao mesmo&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como pode ser visto no código acima, inicialmente realizamos a soma de 2 operandos. Na sequência, utilizamos o caractere de underline para assim somarmos mais 10 unidades ao resultado da primeira expressão.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="teclas-de-atalho-do-idle"&gt;
&lt;h2&gt;TECLAS DE ATALHO DO IDLE&lt;/h2&gt;
&lt;p&gt;A seguir, temos as teclas de atalho que estudamos nessa aula e também, os atalhos que podem ser considerados os principais da utilização básica do IDLE.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Alt + P -&amp;gt; retorna a última instrução&lt;/li&gt;
&lt;li&gt;Alt + N -&amp;gt; retorna a instrução seguinte&lt;/li&gt;
&lt;li&gt;Ctrl + F6 -&amp;gt; Reinicia o IDLE&lt;/li&gt;
&lt;li&gt;Ctrl + N -&amp;gt; Abre o editor de Script´s de várias linhas&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="personalizando-o-idle"&gt;
&lt;h2&gt;PERSONALIZANDO O IDLE&lt;/h2&gt;
&lt;p&gt;Como vimos, o IDLE é construído só e somente só com a linguagem Python, e toda a parte gráfica está escrita utilizando a biblioteca nativa Tkinter. Porém, é possível personalizarmos o IDLE das mais diversas maneiras e inclusive, somos capazes de criar nossos próprios temas e até, distribuí-los.&lt;/p&gt;
&lt;p&gt;Para personalizar o IDLE, vá no Menu &lt;cite&gt;Option -&amp;gt; Configure IDLE...&lt;/cite&gt;. Em seguida, será aberta uma janela semelhante a que temos abaixo:&lt;/p&gt;
&lt;img alt="Janela inicial do IDLE Preferences" src="../images/curso-de-python/idle-preferences-1.png" /&gt;
&lt;p&gt;Como podemos ver na imagem acima, a primeira aba do menu de preferências do IDLE é &lt;cite&gt;Fonts/Tabs&lt;/cite&gt;. Nesta, podemos escolher qual a fonte a ser utilizada pelo editor na lista contida dentro do GroupBox &lt;cite&gt;Base Editor Font&lt;/cite&gt;. Abaixo da listagem de fontes disponíveis, há a opção &lt;cite&gt;Size&lt;/cite&gt;, onde é possível definir o tamanho da fonte do editor e ao lado de &lt;cite&gt;Size&lt;/cite&gt;, há um CheckBox de nome &lt;cite&gt;Bold&lt;/cite&gt; que define se o texto deve ou não estar em Negrito.&lt;/p&gt;
&lt;img alt="Janela IDLE Preferences com a aba Highlighting selecionada" src="../images/curso-de-python/idle-preferences-2.png" /&gt;
&lt;p&gt;A aba Highlighting do IDLE permite-nos definir o sistema de cor a ser utilizado. Inicialmente, observe a caixa ao lado direito da janela de nome &lt;cite&gt;Highlighting Theme&lt;/cite&gt;. Nesta, podemos selecionar inicialmente se a alteração das cores será feita no tema que está sendo exibido no caso, a opção a &lt;cite&gt;Built-in Theme&lt;/cite&gt;, ou então, podemos definir a opção &lt;cite&gt;a Custom Theme&lt;/cite&gt; que habilitará os controles abaixo.&lt;/p&gt;
&lt;p&gt;No primeiro Controle habilitado, há algumas opções de temas que estão instalados. Quando você seleciona outro tema, no mesmo momento, o editor ao lado esquerdo é alterado conforme as cores definidas no tema selecionado.&lt;/p&gt;
&lt;p&gt;Agora, no GroupBox a esquerda de nome &lt;cite&gt;Custom Highlighting&lt;/cite&gt;, temos a disposição todas as definições da linguagem Python. Logo, podemos alterar a cor de Background ou então, do Foreground de cada opção.&lt;/p&gt;
&lt;p&gt;Se você for com o mouse em cima do Editor, poderás clicar em qual definição desejas alterar e assim, bastará selecionar a cor deseja.&lt;/p&gt;
&lt;img alt="Janela IDLE Preferences com a aba Keys selecionada" src="../images/curso-de-python/idle-preferences-3.png" /&gt;
&lt;p&gt;A aba Keys já foi vista anteriormente, nesta, temos a definição de todas as teclas de atalho do IDLE e assim, podemos selecionar e em seguida, alterar a definição de tecla de atalho que desejamos.&lt;/p&gt;
&lt;img alt="Janela IDLE Preferences com a aba General selecionada" src="../images/curso-de-python/idle-preferences-4.png" /&gt;
&lt;p&gt;A última aba é de nome &lt;cite&gt;General&lt;/cite&gt;. Nesta, há opções configurações diversas. Inicialmente, temos o GroupBox &lt;cite&gt;Startup Preferences&lt;/cite&gt;. Neste, podemos definir se ao abrirmos o IDLE o mesmo será aberto no mode &lt;cite&gt;Shell Window&lt;/cite&gt;, isto é, o modo padrão, onde digitamos a instrução, pressionamos a tecla Enter e a mesma é executada.&lt;/p&gt;
&lt;p&gt;Se definirmos a opção de abertura como sendo &lt;cite&gt;Open Edit Window&lt;/cite&gt;, o IDLE será aberto com a tela de Edição de Scripts que estudamos anteriormente.&lt;/p&gt;
&lt;p&gt;A opção a seguir é &lt;cite&gt;Autosave Preferences&lt;/cite&gt;. Nesta, podemos definir se ao executarmos o Script na janela de Edição de Scripts será perguntado se desejamos salvar ou então, se o código será salvo automaticamente. É importante observar que inicialmente será perguntado onde desejamos salvar o arquivo de Script e somente em seguida, é que o salvamento será realizado automaticamente.&lt;/p&gt;
&lt;p&gt;Em seguida temos a opção &lt;cite&gt;Initial Window Size (in character)&lt;/cite&gt;. Está opção permite-nos definir a largura e a altura do editor. É importante observar que as dimensões são calculadas pela quantidade de caracteres e não em pixels. Quando estudarmos a biblioteca Tkinter iremos entender o porque dessa especificação!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="consideracoes-finais"&gt;
&lt;h2&gt;CONSIDERAÇÕES FINAIS&lt;/h2&gt;
&lt;p&gt;Nesse artigo estudamos o mínimo sobre o IDLE e aprendemos somente as teclas de atalho essenciais para que possamos utilizar o o ambiente para testes e estudos disponibilizado nas principais versões do Python, no caso, o IDLE!&lt;/p&gt;
&lt;p&gt;É possível que seja feito muito mais do que o demonstrado e podemos explorar diversos outros recursos acessando o Menu do próprio editor.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="idle"></category><category term="ide"></category><category term="editor"></category><category term="blog"></category></entry><entry><title>Recursos do Python</title><link href="http://excript.com/python/recursos-python.html" rel="alternate"></link><published>2016-05-01T21:20:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:python/recursos-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula continuaremos nosso estudo sobre as características das linguagem Python e seus recursos. Nesse momento, discutiremos as formas para disponibilizarmos nossos programas, as bibliotecas gráficas, os paradigmas da linguagem, extensibilidade e muito mais.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="caracteristicas-da-linguagem"&gt;
&lt;h2&gt;CARACTERÍSTICAS DA LINGUAGEM&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;extensível&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;O projeto do &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; previu, desde as primeiras versões, ferramentas para que outros programadores pudessem facilmente, extender a linguagem. Assim, podemos criar novas bibliotecas com as mais diversas linguagens, como C, C++, Pascal e etc. Dessa forma, podemos criar extensões com diversas linguagens e, em seguida, invocar essa funções, que foram definidas em outras linguagens, de dentro dos nossos códigos em Python.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;acesso aos principais Banco de Dados&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Nativamente, o &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; disponibiliza acesso ao banco de dados SQLite. Porém, basta somente adicionarmos as bibliotecas (drivers) de determinado banco de dados, para que então, possamos negociar dados com determinada base.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;GUI (Graphical User Interface)&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;A linguagem &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; trás, nativamente, bibliotecas para o desenvolvimento janelas gráficas. Existem, hoje, existem várias bibliotecas gráficas que podemos utilizar em nossos projetos, bastando somente instalarmos as mesmas. Inclusive, a biblioteca &lt;a class="reference external" href="http://kivy.org"&gt;kivy&lt;/a&gt;, está sendo desenvolvido do zero e permite a criação de aplicações gráficas que podem ser acessadas, no Windows, Linux, MacOs, Android, iOS, dentre outros sistemas.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;escalável&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;As aplicações escritas em &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; podem ser facilmente escaláveis conforme a necessidade do software que estamos desenvolvendo.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;multiparadigma&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é uma linguagem multiparadigma, isto é, podemos estruturar nosso código com o paradigma Orientado a Objetos, ou então, com o paradigma Procedural.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;script e compilada&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Podemos disponibilizar nossa aplicação como sendo um script ou então, podemos gerar um executável para determinada plataforma. Porém, por padrão, o Python é uma linguagem interpretada, logo, outras formas de distribuição até são suportadas, porém, geralmente, temos que instalar bibliotecas de terceiros para este fim.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nesse momento, finalizamos nosso estudo sobre as principais características e recurso da linguagem Python! Poderíamos enumerar muitos outros recursos, porém, nesse momento, citamos os principais e as mais importantes características da linguagem.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="caracteristica do python"></category><category term="recursos do python"></category><category term="blog"></category></entry><entry><title>Características do Python</title><link href="http://excript.com/python/caracteristica-python.html" rel="alternate"></link><published>2016-05-01T21:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:python/caracteristica-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os principais recursos e características da linguagem Python e analisaremos em detalhe alguns aspecto que do Python uma das linguagens com maior crescimento nos últimos anos. Discutiremos as dificuldade nos estudo da linguagem, a sintaxe, o código resultante e a complexidade na manutenção de aplicações.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="recursos-da-linguagem"&gt;
&lt;h2&gt;RECURSOS DA LINGUAGEM&lt;/h2&gt;
&lt;p&gt;São várias as características do &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; que o tornam uma linguagem tão promissora e, que atrai a cada dia, mais desenvolvedores. A seguir, foram elucidados alguma dessas características e junto, uma breve descrição.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;fácil de aprender&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é uma linguagem fácil de ser aprendida e poderosa para trabalharmos. A mesma possui uma sintaxe limpa e clara, como também, contém um conjunto de bibliotecas estáveis e bem estruturadas.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;fácil leitura e compreensão&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;A sintaxe da linguagem é minimalista, isso é, mantém somente o necessário, o que torna o código escrito, muitas vezes, a um texto em Inglês.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;fácil manutenção&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Em decorrência da simplicidade sintática e da excelente estruturação das bibliotecas, a manutenção de códigos, seja aquele que desenvolvemos ou mesmo de terceiros, muito mais fácil e compreensível.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;multiplataforma&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;O interpretador do Python é escrito com a Linguagem C e C++, assim, o mesmo pode ser portado a todas as plataformas que possuam compiladores para a linguagem. Tendo em vista que o C++ é a linguagem mais difundida e a base de praticamente toda a informática, temos compiladores nativos ou portados para quase todas as plataformas existentes.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;modo interativo&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Sendo o &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; uma linguagem interpretada, foi possível o desenvolvimento de ferramentas interativas, isto é, ferramentas majoritariamente em linha de comando, onde podemos executar instruções e analisar a saída.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Os tópicos aqui elucidados estão longe de esgotar os recursos do Python! Por essa razão, continuaremos o nosso estudo sobre as principais características e recursos da linguagem na próxima aula.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="caracteristica do python"></category><category term="recursos do python"></category><category term="blog"></category></entry><entry><title>Como Instalar o Python no Windows</title><link href="http://excript.com/python/como-instalar-o-python-windows.html" rel="alternate"></link><published>2016-05-01T18:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:python/como-instalar-o-python-windows.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos como fazer o download do Python, qual versão escolher, e como realizar a instalação do Python no Windows.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="maquina-virtual-python"&gt;
&lt;h2&gt;MÁQUINA VIRTUAL PYTHON&lt;/h2&gt;
&lt;p&gt;O Python é composto por um conjunto de bibliotecas e um arquivo executável, no caso, o interpretador da linguagem Python. Quando instalamos o Python em nosso computador, o que fazemos de fato, é instalar um programa que executa código Python e adicionar, no Path do sistema, o local em que o interpretador da linguagem Python está contido.&lt;/p&gt;
&lt;p&gt;O programa executável do Python, isto é, o interpretador, é também chamado de &lt;strong&gt;Máquina Virtual do Python&lt;/strong&gt; . A expressão &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/M%C3%A1quina_virtual"&gt;Máquina Virtual&lt;/a&gt; é decorrente do fato que o programa Python propriamente dito, executa instruções que juntas, formam programas, e essas instruções são executadas pelo interpretador de maneira análoga as instruções de arquivos executáveis que são executadas pelo Computador.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="baixando-e-instalando-o-python"&gt;
&lt;h2&gt;BAIXANDO E INSTALANDO O PYTHON&lt;/h2&gt;
&lt;p&gt;O Python é distribuido gratuitamente e toda sua documentação pode ser encontrada no site da organização Python: &lt;cite&gt;https://www.python.org/&lt;/cite&gt;. Para fazermos o download do Interpretador Python, temos que acessar o site, em seguida clicar no menu &lt;tt class="docutils literal"&gt;Downloads&lt;/tt&gt;. Feito isso, a página de download será aberta, como pode ser visto na imagem a seguir:&lt;/p&gt;
&lt;img alt="Imagem com o Download da instalação do Python" src="../images/curso-de-python/download-python.png" /&gt;
&lt;p&gt;Caso queiras ir &lt;a class="reference external" href="`https://www.python.org/downloads/`"&gt;direto à página de download do Python, utilize este link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Baixe o instalador conforme o Sistema Operacional que estejas utilizando! Também é necessário escolher entre a versão de 32bits ou 64bits, conforme a arquitetura do seu processador! Se estiveres utilizando o Windows 8 ou superior, estaras, numa arquitetura de 64 bits. Do contrário, terás que descobrir em qual arquitetura estás trabalhando.&lt;/p&gt;
&lt;p&gt;Em caso de dúvida, deixe um comentário ou então, leia o comentário do pessoal. Muito provavelmente alguém já teve um problema igual ou semelhante ao seu, e assim, uma olhada rápida nos comentários dos nossos colegas pode lhe salvar algumas horas de dor de cabeça!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="usuarios-linux-outras-distros"&gt;
&lt;h2&gt;USUÁRIOS LINUX / OUTRAS DISTROS&lt;/h2&gt;
&lt;p&gt;Nesta aula não foi contemplado a instalação do Python em outros sistemas operacionais. Usuários do MacOS e do Ubuntu já possuem o Python instalado de fábrica, e também, as maiores e principais distros Linux, já vem com o Python instalado por padrão.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-o-problema-entao"&gt;
&lt;h2&gt;QUAL O PROBLEMA ENTÃO?&lt;/h2&gt;
&lt;p&gt;A versão do Python que está instalada. Nesse curso, trabalhamos com a versão 3x do Python, mas a maioria dos sistemas operacionais vem com o Python 2.7 de fábrica.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-a-razao-de-haver-2-versoes-2-7-xxxx-e-3-xxx-xxx"&gt;
&lt;h2&gt;QUAL A RAZÃO DE HAVER 2 VERSÕES 2.7.xxxx E 3.xxx.xxx?&lt;/h2&gt;
&lt;p&gt;A versão 3 do Python sofreu mudanças estruturais significantes, a mais simples, podemos dizer, num primeiro momento, é o fato de você ser obrigado a utilizar parêntesis na função &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt;. Essa é uma única mudança, há diversas outras, principalmente na parte de Orientação a Objetos e a estrutura interna das classes.&lt;/p&gt;
&lt;p&gt;Com o objetivo de evitar o &lt;strong&gt;caos&lt;/strong&gt; e o trauma de toda e qualquer mudança abrupta, optou-se, num primeiro momento, por utilizar 2 versões do Python em paralelo. Por isso é que temos a versão 2.7.x e a versão 3.x. O Python 2.7.x suporta a maior parte das mudanças do Python 3, mas o contrário não é verdade. Ou seja, o Python 3 não suporta o Python 2.7.&lt;/p&gt;
&lt;p&gt;Mas não se preocupe com isso nesse momento! Porém, não esqueça: &lt;strong&gt;vamos trabalhar com a versão 3.x do Python neste curso!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-importante-saber"&gt;
&lt;h2&gt;O QUE É IMPORTANTE SABER?&lt;/h2&gt;
&lt;p&gt;Existem 2 versões OFICIAIS: a versão 2.7 e a versão 3x do Python. A versão 2.7 é a que será descontinuada em 2022 e a mesma, vem, gradativamente, sofrendo diversas modificações. Assim, o que acontece, é que não haverá uma mudança abrupta, e sim, ocorrerá que a versão 2.7 se &amp;quot;encontrara&amp;quot; com a versão 3.x.x.&lt;/p&gt;
&lt;p&gt;A cada nova versão do Python 2.7, há mudanças que devem ser feitas em código legado a fim de manter a compatibilidade. Logo, o que acontece é, que ambas versões caminham juntas e paralelas. As mudanças a nível de código são implementadas nas duas versões, porém, como já dito, a versão 2.7 não funciona na versão 3.x.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-a-minha-versao-do-python"&gt;
&lt;h2&gt;QUAL A MINHA VERSÃO DO PYTHON?&lt;/h2&gt;
&lt;p&gt;Vá no prompt/shell/bash e digite:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;... python
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se nada acontecer, tente digitar somente a palavra:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;... py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O texto que impresso deverá ser semelhante ao ao texto a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;... python

Python 3.5 &lt;span class="o"&gt;(&lt;/span&gt;default, Mar  - YYYY, hh:mm:ss&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;MSC v.1600 &lt;span class="m"&gt;64&lt;/span&gt; bit &lt;span class="o"&gt;(&lt;/span&gt;AMD64&lt;span class="o"&gt;)]&lt;/span&gt; on win32
Type &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license()&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OU ENTÃO:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;... python
Python 3.6 &lt;span class="p"&gt;|&lt;/span&gt;Anaconda 2.2.0 &lt;span class="o"&gt;(&lt;/span&gt;64-bit&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;default, Mar  YYYY, hh:mm:ss&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;MSC v.1600 &lt;span class="m"&gt;64&lt;/span&gt; bit &lt;span class="o"&gt;(&lt;/span&gt;AMD64&lt;span class="o"&gt;)]&lt;/span&gt; on win32
Type &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license()&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="se-eu-tiver-o-python-instalado-e-nada-acontecer"&gt;
&lt;h2&gt;SE EU TIVER O PYTHON INSTALADO E NADA ACONTECER?&lt;/h2&gt;
&lt;p&gt;Isso ocorre nas situações quando o local de instalação do Python não está nas variáveis do sistema. As variáveis do sistema apontam para diretórios onde o SO que estamos utilizando irá buscar os programas que devem ser reconhecidos na linha de comando ou por outros softwares de maneira automática.&lt;/p&gt;
&lt;p&gt;Nos sistemas Linux, raramente a instalação não é encontrada, mas nas versões do Windows, isso ocorre muito mais facilmente, até porque, é possível, nas instalações do Python, pedir que o mesmo não adicione o PATH [caminho ou diretório] da instalação atual, nas variáveis do sistema. Logo, você terá que ir nas opções do sistema, no caso, em Programas Instalados e procurar por alguma instalação do Python. Se nada for encontrado, e você não tiver feito a instalação via compilação através do fontes, então o Python não está instalado.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="download"></category><category term="instalação"></category><category term="windows"></category><category term="instalação no windows"></category><category term="blog"></category></entry><entry><title>Primeira Aula de Python</title><link href="http://excript.com/python/primeira-aula-python.html" rel="alternate"></link><published>2016-05-01T17:50:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:python/primeira-aula-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;cript: Fala galera, sejam todos bem vindos ao nosso curso de Python! É com muita satisfação que nós começamos o nosso estudo a respeito de uma das linguagens de programação mais empolgante, simples, completa, rica e que a muito tempo, está entre as minhas linguagens prediletas. É difícil explicar, porém, Python é uma linguagem encantadora, onde muito pouco representa um sistema completo.  Basicamente, o Python é uma linguagem rápida, com um sintaxe bonita, que muitas vezes nos faz pensar se estamos programando ou escrevendo uma carta pra namorada, de tão simples e lógico que é toda linguagem. Fato é, que eu conheço bastante pessoas que programam em Python, porém, eu não conheço uma pessoa sequer, que tenha começado a estudar e parou, porque não gostou ou então achou difícil a linguagem. Isso chega a ser impressionante! Praticamente, nunca ouvi pessoas dizerem que não gostam da sintaxe do Python. A diversas pessoas que preferem outras linguagens, porém, dizer que não gosta do Python, sinceramente, é muito difícil você ouvir falar. Muito raras são as linguagens que possuem uma biblioteca tão rica, como as que a gente tem no Python. E é muito difícil nós encontrarmos, uma linguagem que possui tanta documentação gratuita, e tamanha quantidade de exemplos como nós temos no Python. Praticamente, tudo o que você pode imaginar é possível desenvolver com o Python. Inclusive, tarefa que a até pouco tempo faziam-se somente com C ou C++, muitos programadores estão optando a bastante tempo por fazer em Python. Isso porque, você faz num espaço de tempo muito menor, e você consegue ter resultados muito semelhantes, a um programa que foi escrito em C ou C++. Parece que o Python possui uma mágica única, principalmente, para pessoas que já programaram bastante tempo com C, ou então com Java. Isso não quer dizer que o Python é a melhor linguagem, e sim que o Python é simples, porém, a sua simplicidade, não implica em más praticas de programação, ou então, em um código bagunçado e ilegível. Muito pelo contrário, o Python nos conduz a produção de um código elegante, e de tão simples e claro, muitas vezes, parece que nós temos um texto em Inglês. Então, esteja certo, de que aprender Python, é praticamente um caminho sem volta. E não estranhe se daqui a pouco você não quiser mais programar com outras linguagens, ou então, se você decidir trocar de emprego, só para poder ficar trabalhando com o Python. Você não será o primeiro a fazer isso, e sim, será mais um, vivendo o sonho de realmente trabalhar com uma linguagem que valoriza a produtividade, como também, nos auxilia na detecção de problemas e prevenção de erros. Assim, a partir desse momento, nós iremos aprender não somente a fazer programas, mas também, o porque o Python é uma das linguagens mais promissoras, e também o porque tanto se fala de Python hoje em dia. Fato é, que rapidamente nós conseguimos perceber o poder que o Python proporciona, como também, a alta produtividade que nós conseguimos obter com essa linguagem. Isso se deve porque a sintaxe do Python, é bastante parecida com a escrita humana, ou seja, o Python se parece com a forma que nós seres humanos nos comunicamos via papel, logo, quando nós temos um programa em Python, nós conseguimos chegar mais próximo da descrição de um texto, do que de fato, uma série de instruções amontoadas. Então, nesse primeiro módulo do nosso curso, nós faremos exemplos nos concentrando na entrada e retorno de dados. Ou seja, nós trabalharemos basicamente, com o prompt de comando. Estudar programação desta forma, ou seja, no prompt de comando, entrando dados e retornando, é sem dúvida a melhor pratica para aprender uma nova linguagem de programação, ou então, começar na programação. Nós até poderíamos criar telas e estudar utilizando os componentes gráficos, porém, se nós misturarmos a parte gráfica com a parte lógica, o nosso curso ficaria bastante complicado e também, nós acabaríamos dando enfase a um módulo que nem todo mundo deseja aprender. Isso porque, o Python consegue trabalhar de forma excepcional, com janela que contém uma série de controles, como também, o Python trabalha de forma excelente para a Web, recebendo, enviando e processando HTML. Assim, se nós utilizássemos a parte gráfica desde o início, talvez nós estaríamos abordando um tema que você nem deseja conhecer. Então, nesse primeiro módulo, nós vamos estudar a linguagem e seus recursos. Nós vamos dar preferencia a trabalhar dessa forma, para que nós consigamos entende bem a lógica, o fundamento da linguagem. Assim, nós conseguiremos abordar de maneira muito mais ampla a parte conceitual do Python, e depois, quando nós formos aprender a utilizar os frameworks para desenvolvimento de páginas ou então, desenvolvimento de jogos, nós já estaremos dominando os recursos do Python, e será muito mais fácil e rápido de explicar como que se trabalha com esses frameworks. Então é isso ai pessoal, na próxima aula no vamos aprender a instalar o Python, e logo, daremos início ao nosso estudo. Vejo você na nossa próxima aula, muito obrigado e até mais, tchau!&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Seja bem-vindo a primeira aula do &lt;strong&gt;Curso de Python&lt;/strong&gt;!!&lt;/p&gt;
&lt;p&gt;É com muita satisfação que disponibilizamos publicamente e gratuitamente o &lt;a class="reference external" href="http://excript.com/curso-de-python.html"&gt;Curso de Python&lt;/a&gt; e que pode ser estudado por qualquer pessoa que tenha conhecimentos mínimos sobre o funcionamento do sistema operacional. Podemos dizer que, qualquer pessoa que saiba utilizar o &lt;a class="reference external" href="https://www.facebook.com/excript/"&gt;Facebook&lt;/a&gt; e saiba como copiar e colar texto, já possui os pré-requisitos para iniciar os estudos de programação através deste curso.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-linguagem-de-programacao-python"&gt;
&lt;h2&gt;A LINGUAGEM DE PROGRAMAÇÃO PYTHON&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é uma linguagem ímpar, projetada para ser simples e desenhada para ser eficaz. Seu uso vem crescendo exponencialmente e atualmente, diversas universidades ao redor do mundo estão ensinando Python como a primeira linguagem de programação. Isso porque, a linguagem possui uma fácil leitura e por conseguinte, acaba tendo uma fácil compreensão.&lt;/p&gt;
&lt;p&gt;A linguagem foi inicialmente desenvolvida por &lt;a class="reference external" href="https://www.python.org/~guido/"&gt;Guido van Rossum&lt;/a&gt; em meados de 1991. Um dos principais conceitos sobre a linguagem é, que a mesma, é interpretada. Isto é, o código &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é interpretado por um programa escrito na linguagem &lt;a class="reference external" href="http://excript.com/curso-c.html"&gt;C&lt;/a&gt; e &lt;a class="reference external" href="http://excript.com/curso-cpp.html"&gt;C++&lt;/a&gt;. Este programa que entende e executa os códigos &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, é chamado de interpretador Python, ou então, a Máquina Virtual &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Todas as vezes em que executarmos um programa escrito em &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, este só será executado se a Máquina Virtual do Python estiver instalado no computador em que está sendo executado.&lt;/p&gt;
&lt;p&gt;Devido a facilidade em codificar e tendo como resultado um código limpo e legível, o Python acaba se tornando uma linguagem fácil de dar manutenção. Se você já programa, com certeza já precisasse dar manutenção em códigos de terceiro, e muito provavelmente, essa não foi a melhor atividade que já fizeste em vida. Agora, quando precisares dar suporte a códigos Python, rapidamente percebemos que não é tão complexo como se fosse, por exemplo, um código Java ou C++.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteristicas-do-python"&gt;
&lt;h2&gt;CARACTERÍSTICAS DO PYTHON&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é uma linguagem que proporciona alta produtividade, isto é, conseguimos escrever grandes aplicações em pouco tempo e, com poucas linhas de código. Essa característica decorre da maneira como a linguagem está projetada e, dos princípios empregados pela comunidade na construção das bibliotecas.&lt;/p&gt;
&lt;p&gt;Um programa em Python, muitas vezes, parece a um texto escrito em Inglês. E também, trechos de código Python, podem ser lido por leigos e estes, até conseguirão entender, a maior parte do que o programador está mandando o computador fazer.&lt;/p&gt;
&lt;p&gt;Em &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; conseguimos trabalhar com os conceitos de Programação Orientada a Objetos de maneira simples. Conseguimos facilmente representar um tipo de dado abstrato, inclusive, podemos criar um novo tipo de dados através da junção de outras estruturas, utilizando, por exemplo, a herança ou herança múltipla.&lt;/p&gt;
&lt;p&gt;Diferentemente de outras linguagens, em &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, não há restrições quanto ao acesso a membros de classes. A linguagem parte do princípio que o programador sabe o que está fazendo, ao contrário das linguagens C++ e Java, que partem do princípio que as estruturas devem ser protegidas de uma possível má utilização.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="faq-frequently-asked-questions"&gt;
&lt;h2&gt;FAQ (Frequently Asked Questions)&lt;/h2&gt;
&lt;div class="section" id="quem-fez-o-python"&gt;
&lt;h3&gt;QUEM FEZ O PYTHON?&lt;/h3&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; foi inicialmente desenvolvido pelo matemático &lt;a class="reference external" href="https://www.python.org/~guido/"&gt;Guido van Rossum&lt;/a&gt;. Atualmente, o Python é desenvolvido por um grupo de desenvolvedores ao redor do mundo. É importante observar que o desenvolvimento da linguagem de programação Python não se resume a implementação da sintaxe, construção da máquina virtual e etc. O Python possui centenas de módulos que são distribuídos por padrão, bem como dezenas de ferramentas, como o depurador, o &lt;a class="reference external" href="https://docs.python.org/3.5/library/idle.html"&gt;IDLE&lt;/a&gt;, a documentação da linguagem e etc.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://neopythonic.blogspot.com.br/"&gt;Blog do Guido van Rossum (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Guido_van_Rossum"&gt;Wikipedia Guido van Rossum (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://plus.google.com/u/0/115212051037621986145"&gt;Perfil G+ Guido van Rossum (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-ano-o-python-foi-desenvolvido"&gt;
&lt;h3&gt;QUAL ANO O PYTHON FOI DESENVOLVIDO?&lt;/h3&gt;
&lt;p&gt;A Linguagem de Programação &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, vem sendo desenvolvida desde 1991. Novas versões sempre são lançadas e estas trazem correções, alterações na sintaxe, implementações, utilitários e etc.&lt;/p&gt;
&lt;script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"&gt;&lt;/script&gt;
&lt;!-- teste --&gt;
&lt;ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-5466436161806566"
     data-ad-slot="2551628736"
     data-ad-format="auto"&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;!-- Quais as características que definem o Python_?
O Python_ realmente é uma boa linguagem?
Quais os recursos do Python?
O que faz da linguagem Python_ ser especial? --&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="curso de python"></category><category term="eXcript"></category><category term="eXcript Brasil"></category><category term="blog"></category></entry><entry><title>Curso de Python</title><link href="http://excript.com/curso-de-python.html" rel="alternate"></link><published>2016-05-01T17:00:00-03:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:curso-de-python.html</id><summary type="html">&lt;div class="section" id="sobre-o-curso"&gt;
&lt;h2&gt;SOBRE O CURSO&lt;/h2&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;Curso de Python&lt;/tt&gt; da eXcript é a forma mais fácil para iniciar os estudos na linguagem de programação &lt;strong&gt;Python&lt;/strong&gt;. As aulas partem do princípio que o aluno nunca programou e por isso, é ensinado o básico da programação, como por exemplo, a lógica, bem como a linguagem &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, até a execução de lógicas complexas para a manipulação do fluxo de controle das aplicações.&lt;/p&gt;
&lt;p&gt;Vamos aprender ainda nas primeiras aulas a como instalar o Python, como instalar um programa para programarmos em Python [ IDE (editor de código) ], como executar código Python e tudo que você precisa conhecer.&lt;/p&gt;
&lt;p&gt;Então, este curso foi desenvolvido para quem não conhece &lt;strong&gt;absolutamente nada&lt;/strong&gt; ou então, para quem possui apenas uma base sobre outra linguagem ou mesmo, de &lt;strong&gt;Lógica de Programação&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pre-requisitos"&gt;
&lt;h2&gt;PRÉ-REQUISITOS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Não é necessário ter conhecimentos prévios de programação&lt;/strong&gt;! Se você tiver o conhecimento elementar de como utilizar um Sistema Operacional, já é o suficiente para acompanhar todas as Aulas de Programação de Computadores com a Linguagem &lt;tt class="docutils literal"&gt;Python&lt;/tt&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sistema-operacional"&gt;
&lt;h2&gt;SISTEMA OPERACIONAL&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; pode ser executado nos principais sistemas operacionais do mercado. Por isso, sinta-se a vontade para escolher a plataforma onde irás instala-lo e executa-lo. Se por exemplo, tiveres 2 computadores, um com Windows e outro com Mac e venhas a estudar algumas aulas no Windows e outras no Mac, o resultado que irás obter, será o mesmo! Inclusive, sinta-se a vontade para copiar o código feito no Windows para o Mac e vice-e-versa, em tese, não pode haver quaisquer problemas, até porque, o Python é multi-plataforma!&lt;/p&gt;
&lt;p&gt;Neste curso utilizamos o sistema operacional Windows. Você poderá utilizar qualquer sistema operacional do mercado, como por exemplo, MacOS, Linux (qualquer distro), Microsoft Windows (qualquer versão).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="e-a-logica-de-programacao"&gt;
&lt;h2&gt;E A LÓGICA DE PROGRAMAÇÃO?&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Lógica de Programação&lt;/strong&gt; será ensinada junto com a linguagem &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;. Talvez você fique na dúvida se é melhor estudar a lógica de programação com linguagens que estejam em Português, como por exemplo, Portugol. &lt;strong&gt;Nós garantimos que não há necessidade de ter qualquer conhecimento de programação, ou de lógica, para acompanhar este curso&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;A forma como irás estudar é indiferente, porém, não existe uma única razão para você fazer outro curso de programação para que somente então, inicie o estudo do Python!&lt;/p&gt;
&lt;p&gt;Centenas de universidades, sejam elas brasileiras ou então internacionais, utilizam o Python como a primeira linguagem. Inclusive, o instrutor desde curso, [eu Cláudio], iniciei meus estudos com uma linguagem de programação chamada Pascal, isto é, aprendi a lógica ao mesmo tempo em que aprendia a linguagem Pascal! Por isso, posso garantir-lhe:  &lt;strong&gt;não existe necessidade de fazer outro curso antes deste!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Economize tempo e vá direto ao assunto, aprenda &lt;strong&gt;Python&lt;/strong&gt; e &lt;strong&gt;Lógica de Programação&lt;/strong&gt; ao mesmo tempo!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lista-das-aulas"&gt;
&lt;h2&gt;LISTA DAS AULAS&lt;/h2&gt;
&lt;script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"&gt;&lt;/script&gt;
&lt;!-- teste --&gt;
&lt;ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-5466436161806566"
     data-ad-slot="2551628736"
     data-ad-format="auto"&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;
</summary><category term="python"></category><category term="curso"></category><category term="aula"></category><category term="curso de python"></category><category term="aula de python"></category><category term="eXcript"></category><category term="eXcript Brasil"></category><category term="blog"></category></entry><entry><title>Argumento de Função Nomeado vs Posicional em Python</title><link href="http://excript.com/python/argumentos-nomeados-posicionais-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/argumentos-nomeados-posicionais-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprofundaremos nosso estudo e entendimento dos argumentos das funções. Estudaremos o conceito de Parâmetros Nomeados e suas características, e também aprenderemos a definição e o emprego dos Argumentos Posicionais na definição de funções bem como, no momento em que iremos utiliza-las.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Atribuição Condicional em Python</title><link href="http://excript.com/python/atribuicao-condicional-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/atribuicao-condicional-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar a atribuição condicional, uma maneira menos verbosa para definirmos 1 dentre 2 valores possíveis dependendo da avaliação de uma expressão.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;par&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ímpar&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;par&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ímpar&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado é &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Comparação de Strings em Python</title><link href="http://excript.com/python/comparacao-de-string-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/comparacao-de-string-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula, aprenderemos, como funciona a comparação de string no Python, e também, veremos o como que é definido, internamente, quando é solicitado a relação entre 2 caracteres.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Classe list - Conceitos Avançados do Python</title><link href="http://excript.com/python/conceitos-avancados-lista-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/conceitos-avancados-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula continuaremos o estudo das Listas em Python e veremos definições e tecnicas avançadas para a manipulação e construção de estruturas complexas com uso de conceito primitivo das listas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Dicionários na Prática com Python</title><link href="http://excript.com/python/dicionario-pratica-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/dicionario-pratica-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos alguns exemplos práticos com o uso do dicionários e aprofundaremos nosso enteminto discutindo situações que ocorrem no exercício do desenvolvimento de software.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Estruturas de Dados Lista em Python</title><link href="http://excript.com/python/estruturas-de-dados-listas-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/estruturas-de-dados-listas-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula vamos estudar o conceito de lista analisado sob o conceito de Estrutura de Dados. Analisaremos a definição primitiva de lista, como também, a definição primitiva de itens, ou seja, os elementos contidos numa lista.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Exemplo com Operador in em Python</title><link href="http://excript.com/python/exemplo-operador-in-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/exemplo-operador-in-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula, faremos mais um exemplo utilizando o operador ``in`` para que possamos melhor entender o funcionamento desse operador.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Fatiando Listas em Python</title><link href="http://excript.com/python/fatiando-lista-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/fatiando-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos como fatiar listas, isto é, como extrair segmentos de dentro de grandes listas e também, estudaremos como extraír elementos dispostos num determinado intervalo.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Fatiando Strings com Python</title><link href="http://excript.com/python/fatiando-string-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/fatiando-string-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o fatiamento de string, isto é, como podemos extrair uma sublista a partir de outra.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>O for loop e a função range() do Python</title><link href="http://excript.com/python/for-in-range-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/for-in-range-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula aprofundaremos nosso estudo sobre a relação intima entre a função ``range()`` e o laço de repetição ``for``.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>A instrução for em Python</title><link href="http://excript.com/python/for-loop-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/for-loop-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos a estrutura de repetição "for", utilizada para percorrer listas e sequências facilmente do primeiro ao último elemento.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;eXcript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>A função range() do Python</title><link href="http://excript.com/python/funcao-range-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/funcao-range-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a função "range()" uma ferramenta muito utilizada junto a instrução "for", bem como, em todas as situações em que estamos trabalhando com sequências numéricas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Funções da Classe list do Python</title><link href="http://excript.com/python/funcoes-classe-list-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/funcoes-classe-list-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar as funções append(), del() que são, umas principais funções implementadas para manipulação da estrutura list. Faremos alguns exemplos demonstrado o funcionamento das funções bem como, estudaremos algumas situações interessantes.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Funções dos Dicionários no Python</title><link href="http://excript.com/python/funcoes-dicionarios.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/funcoes-dicionarios.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula iniciaremos o estudo dos dicionários a estrutura que talvez a mais importante da linguagem e a mais utilizada durante o desenvolvimento. Também aprenderemos as principais funções da estrutura de dados "dic" e faremos vários exemplos para conseguirmos entender o funcionamento e carecterísticas das funções.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Funções das Strings no Python</title><link href="http://excript.com/python/funcoes-string-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/funcoes-string-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as funções definidas na classe String do Python e aprenderemos como podemos utilizar essa funões, para realizar uma série de alterações e assim, obter uma nova String que contenha a alteração solicitada.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Incluindo, Alterando e Excluindo Elementos no Python</title><link href="http://excript.com/python/incluindo-alterando-excluindo-elementos-lista-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/incluindo-alterando-excluindo-elementos-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as principais funções realizadas em lista, como por exemplo, inclusão, alteração e exclusão. Também estudaremos a exclusão de elemento em intervalos e funções que retornam e removem elementos automaticamente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Instrução break do Python</title><link href="http://excript.com/python/instrucao-break-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/instrucao-break-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos a função "break" do Python que é, uma instrução auxiliadora das Estruturas de Repetição e que nos proporciona, um maior controle durante a iteração.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Antes de entrar no laço&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A condição estabelecida retornou true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Depois de ter entrado no laço&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="break"></category><category term="for loop"></category><category term="while loop"></category></entry><entry><title>Instrução continue em Python</title><link href="http://excript.com/python/instrucao-continue-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/instrucao-continue-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a instrução "continue", uma ferramenta a ser utilizada dentro das estruturas de repetição e que nos proporciona um maior controle sobre a iteração.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;inicio&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;else&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="continue"></category><category term="instrução continue"></category></entry><entry><title>Introdução aos Dicionários do Python</title><link href="http://excript.com/python/introducao-aos-dicionarios-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/introducao-aos-dicionarios-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos os dicionários, uma estrutura simples de ser usada que nos proporciona uma forma de programar rápida e simples, produzindo um código legível e fácil de ser entendido.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Introdução às Strings em Python</title><link href="http://excript.com/python/introducao-as-string-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/introducao-as-string-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula, veremos, uma introdução sobre as String, e também, faremos alguns exemplos em Python, para iniciarmos nosso estudo sobre a manipulação de cadeia de caracteres.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Introdução às Funções em Python</title><link href="http://excript.com/python/introducao-funcoes-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/introducao-funcoes-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula iniciaremos o estudo das funções, a principal estrutura para separmos e modularizarmos nossas aplicações. E também, são as funções que originam do Paradigma de Orogramação Funcional.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Iteração em Python</title><link href="http://excript.com/python/iteracao-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/iteracao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Vamos estudar nessa aula a Iteração, Estrutura de Repetição, looping, Laço de Repetição, Laços Condicionais&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="iteração"></category><category term="estrutura de repetição"></category><category term="looping"></category><category term="laço de repetição"></category><category term="laços condicionais"></category></entry><entry><title>Iteração de Listas em Python</title><link href="http://excript.com/python/iterando-listas-em-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/iterando-listas-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar a iteração de listas, também chamado varredura de listas, ou então, a ação de percorrer os elementos contidos numa estrutura. Estudaremos a iteração com a instrução "for", como também, com a instrução "while".&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="c1"&gt;#Iterando listas em Python&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# O código abaixo não funciona&lt;/span&gt;
&lt;span class="c1"&gt;# lista_nums = [100,200,300,400]&lt;/span&gt;
&lt;span class="c1"&gt;# for item in lista_nums:&lt;/span&gt;
&lt;span class="c1"&gt;#     item += 1000&lt;/span&gt;
&lt;span class="c1"&gt;# print(lista_nums)&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# lista_nums = [100,200,300,400,500,600,700,800]&lt;/span&gt;
&lt;span class="c1"&gt;# for item in range(len(lista_nums)):&lt;/span&gt;
&lt;span class="c1"&gt;#     lista_nums[item] += 1000&lt;/span&gt;
&lt;span class="c1"&gt;# print(lista_nums)&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#função de nome enumerate&lt;/span&gt;
&lt;span class="n"&gt;lista_nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lista_nums&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lista_nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lista_nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="list"></category><category term="lista"></category><category term="iteração"></category><category term="iteração de listas"></category></entry><entry><title>Iterando Strings em Python</title><link href="http://excript.com/python/iterando-string-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/iterando-string-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula, estudaremos, a iteraçao de String no Python e faremos alguns exemplos interessantes para que possamos visualizar outras formas para a manipulação de caracteres.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Laços de Repetição do Python</title><link href="http://excript.com/python/lacos-de-repeticao-em-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/lacos-de-repeticao-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Laços de Repetição, ou estruturas condicionais, são as formas que o Python proporciona para executarmos um bloco de instrução por uma quantidade de vezes.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>A classe list do Python</title><link href="http://excript.com/python/list-class-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/list-class-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos a Estrutura de Dados list que a linguagem Python nos proporciona para a manipulação de listas de maneira geral.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Lista, Pilha, Array, Set em Python</title><link href="http://excript.com/python/lista-pilha-array-set-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/lista-pilha-array-set-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos tipos de listas, como por exemplo, uma Pilha, um Array, um Set, uma Fila. Essa aula é uma continuação do estudo sobre Listas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Operadores and, or e in do Python</title><link href="http://excript.com/python/operadores-and-or-in-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/operadores-and-or-in-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos 3 operadores do Python aplicados ao manuseio e manipulação de listas. Vamos estudar situações em que verificaremos com uso de expressões e dos operadores lógicos se determinado elemento ou então, se um conjunto de elemento está contido dentro de determinada lista.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Operadores in e not in do Python</title><link href="http://excript.com/python/operadores-in-not-in-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/operadores-in-not-in-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos 2 operadores do Python que são dedicado ao trabalho e manusei de listas&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Operadores Lógicos em Python</title><link href="http://excript.com/python/operadores-logicos-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/operadores-logicos-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores lógicos na linguagem Python. Aprenderemos também a definição de valor lógica, a definição de conjunção, disjunção e de sub-expressões lógicas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-aos-operadores-logicos"&gt;
&lt;h2&gt;INTRODUÇÃO AOS OPERADORES LÓGICOS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;operadores lógicos&lt;/strong&gt; unem expressões lógicas formando assim, uma nova expressão que é composta por 2 ou mais sub-expressões. O resultado lógico de expressões compostas será a relação entre as sub-expressões. Como estudamos, toda expressão lógica avaliada resultará num &lt;strong&gt;valor lógico&lt;/strong&gt; e a relação entre vários valores lógicos é um outro valor lógico.&lt;/p&gt;
&lt;p&gt;Quando estudamos os &lt;a class="reference external" href="http://excript.com/python/operador-relacional-python.html"&gt;Operadores Relacionais&lt;/a&gt; aprendemos a obter o valor lógico entre 2 operandos, no caso, entre o operando que está a esquerda do operador e o operando que está a direita do Operador Relacional. Como resposta, obtemos valores do tipo Booleano, isto é, verdadeiro [&lt;strong&gt;True&lt;/strong&gt;] ou falso [&lt;strong&gt;False&lt;/strong&gt;].&lt;/p&gt;
&lt;p&gt;Os &lt;strong&gt;operadores lógicos&lt;/strong&gt; por sua vez, permite-nos unir 2 expressões ligando-as com os conectivos lógicos matemáticos que são, o conectivo &lt;strong&gt;E&lt;/strong&gt; e o conectivo &lt;strong&gt;OU&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="valor-logico"&gt;
&lt;h2&gt;VALOR LÓGICO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;valor lógico&lt;/strong&gt; é um tipo de dado binário, isto é, assume um valor dentre duas opções: verdadeiro ou falso.&lt;/p&gt;
&lt;p&gt;Os valores lógicos são de fato a base de toda a computação, até porque, temos que, o &lt;tt class="docutils literal"&gt;bit&lt;/tt&gt; está ligado ou o &lt;tt class="docutils literal"&gt;bit&lt;/tt&gt; está desligado. O valor lógico em sua forma mais primitiva assume o número 1 quando verdadeiro e assume o valor 0 quando falso.&lt;/p&gt;
&lt;p&gt;Toda expressão avaliada na computação de maneira geral, resulta num &lt;strong&gt;valor lógico&lt;/strong&gt;, isto é, ou a expressão é verdadeira, ou a expressão é falsa. Como aprenderemos de agora em diante, todas as estruturas da linguagem Python baseiam-se nos 2 valores lógicos possíveis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-tipo-de-dado-booleano-bool"&gt;
&lt;h2&gt;O TIPO DE DADO BOOLEANO (&lt;tt class="docutils literal"&gt;bool&lt;/tt&gt;)&lt;/h2&gt;
&lt;p&gt;O tipo de dado Booleano, que em Python é representado pela classe &lt;cite&gt;bool&lt;/cite&gt; assume um valor dentre 2 valores constante: &lt;strong&gt;True&lt;/strong&gt; ou &lt;strong&gt;False&lt;/strong&gt;. A palavra &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/Booliano"&gt;Booleano&lt;/a&gt; vem do sobrenome do filósofo e matemático &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/George_Boole"&gt;George Boole&lt;/a&gt; o criado da &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/%C3%81lgebra_booliana"&gt;Álgebra Booleana&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Se formos no IDLE e verificarmos com a instrução &lt;tt class="docutils literal"&gt;type()&lt;/tt&gt; o tipo dos valores lógicos ou então, o tipo de uma expressão lógica, teremos como resposta o valor &lt;tt class="docutils literal"&gt;&amp;lt;class 'bool'&amp;gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;bool&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;bool&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;bool&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver acima o Python reconhece as 2 constantes como pertencentes ao tipo de dado &lt;cite&gt;bool&lt;/cite&gt;, no caso, as constantes &lt;strong&gt;True&lt;/strong&gt; e &lt;strong&gt;False&lt;/strong&gt;. É importante notar que ambas constantes iniciam com letra maiúscula, do contrário, o Python tratará como sendo uma referência desconhecida.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conectivos-logicos"&gt;
&lt;h2&gt;CONECTIVOS LÓGICOS&lt;/h2&gt;
&lt;p&gt;As linguagens de programação, utilizam os &lt;strong&gt;conectivos lógicos&lt;/strong&gt; da lógica formal, ou melhor da lógica Aristotélica, na construção de expressões lógicas. Existem 2 conectivos lógicos e, mesmo que não os conheçamos com o nome de &lt;strong&gt;conectivos lógicos&lt;/strong&gt;, utilizamo-os constantemente ao conversarmos ou então, para explicarmos qualquer disciplina a outra pessoa.&lt;/p&gt;
&lt;p&gt;Os dois conectivos lógicos são:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Conectivo de &lt;strong&gt;conjunção&lt;/strong&gt;: &lt;strong&gt;E&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Conectivo de &lt;strong&gt;disjunção&lt;/strong&gt;: &lt;strong&gt;OU&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Por exemplo, a simples frase &lt;tt class="docutils literal"&gt;A e B são caracteres iguais&lt;/tt&gt; implica numa expressão lógica e acabamos de representar a mesma textualmente. Porém, a expressão pode ser facilmente escrita matematicamente, ou então, com o uso de uma linguagem de programação.&lt;/p&gt;
&lt;p&gt;Por essa razão, devemos olhar para as Linguagens de Programação como sendo, antes de tudo,  formas ou estilos de &lt;strong&gt;Notação&lt;/strong&gt; lógica. Como sabemos, existe a notação matemática que possui suas próprias regras e sua própria sintaxe. Existem algumas linguagens de programação que por exemplo, suportam a sintaxe matemática na definição de expressões e na composição de sentenças lógicas.&lt;/p&gt;
&lt;p&gt;Por fim, os &lt;strong&gt;conectivos lógicos&lt;/strong&gt; devem ser entendidos como ferramenta de notação utilizada para unir duas ou mais expressões, e como resultado da união, forma-se uma nova expressão.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="avaliacao-de-expressoes"&gt;
&lt;h2&gt;AVALIAÇÃO DE EXPRESSÕES&lt;/h2&gt;
&lt;p&gt;A avaliação de expressão em linguagens de programação é, o trabalho que o compilador ou interpretador faz, quando este, através de 2 expressões, avalia se a &lt;strong&gt;proposição&lt;/strong&gt;, isto é, a expressão avaliada é ou não verdadeira.&lt;/p&gt;
&lt;p&gt;É importante observar que as expressões, são sempre avaliadas se são verdadeiras e é bom esse entendimento, até porque, podia ser o contrário, e as vezes será, quando assim desejarmos e utilizarmos uma notação especifica para isso.&lt;/p&gt;
&lt;p&gt;Então, por padrão, &lt;strong&gt;todas as expressão são avaliadas&lt;/strong&gt; com a pergunta se são ou não verdadeiras.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tabela-de-valores-logicos"&gt;
&lt;h2&gt;TABELA DE VALORES LÓGICOS&lt;/h2&gt;
&lt;p&gt;A tabela de valor lógica é uma tabela que mostra o resultado da avaliação de 2 expressões lógicas. É importante observar que &lt;strong&gt;essa tabela NÃO é uma convenção&lt;/strong&gt;, mas sim, o resultado da dedução lógica e que você pode facilmente deduzi-la.&lt;/p&gt;
&lt;p&gt;True &lt;strong&gt;E&lt;/strong&gt; True é True
True &lt;strong&gt;E&lt;/strong&gt; False é False
False &lt;strong&gt;E&lt;/strong&gt; True é False&lt;/p&gt;
&lt;p&gt;True &lt;strong&gt;OU&lt;/strong&gt; False é True
False &lt;strong&gt;OU&lt;/strong&gt; True é True
True &lt;strong&gt;OU&lt;/strong&gt; True é True
False &lt;strong&gt;OU&lt;/strong&gt; False é False&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-conectivo-de-conjuncao-e"&gt;
&lt;h2&gt;O CONECTIVO DE CONJUNÇÃO &lt;tt class="docutils literal"&gt;E&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;conectivo lógico de conjunção E&lt;/strong&gt;, une a expressão a sua esquerda a expressão a sua direita. Expressões com o uso do &lt;strong&gt;conectivo de conjunção&lt;/strong&gt; originam frases em Português, mais ou menos assim: &lt;tt class="docutils literal"&gt;A é verdadeiro e B é verdadeiro&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Nas situações em que A for verdadeiro e B também, o resultado, segundo a tabela lógica, será também verdadeiro.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, temos uma &lt;tt class="docutils literal"&gt;expressão lógica composta&lt;/tt&gt; constituida por 2 expressões lógicas simples e, ligadas pelo &lt;tt class="docutils literal"&gt;conectivo de conjunção&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Primeira expressão simples: &lt;tt class="docutils literal"&gt;(var1 == 0)&lt;/tt&gt;
Segunda expressão simples expressão: &lt;tt class="docutils literal"&gt;(var1 == 0)&lt;/tt&gt;
Conectivo lógico de conjunção: &lt;strong&gt;and&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para analisarmos uma &lt;tt class="docutils literal"&gt;expressão lógica composta&lt;/tt&gt;, precisamos antes, analisar suas &lt;tt class="docutils literal"&gt;expressões lógicas simples&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;No trecho de código acima, a primeira sub-expressão, analisas se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é maior do que 0. A variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; está declarada na linha anterior a expressão e inicializada com o valor 1, por isso, a primeira sub-expressão é verdadeira.&lt;/p&gt;
&lt;p&gt;A segunda expressão, analisa se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é menor do que 100. O valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é igual a 1 e, por isso, menor do que 100. Por fim, obtivemos 2 valores lógicos e agora podemos deduzir o resultado lógica de toda expressão e o fazemos no trecho de código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, temos a mesma expressão do exemplo anterior, porém, substituimos as duas &lt;strong&gt;expressões lógicas simples&lt;/strong&gt; por seus respectivos &lt;strong&gt;valores lógicos&lt;/strong&gt;, isto é, o valor decorrente da &lt;strong&gt;análise lógica&lt;/strong&gt; de cada sub-expressão.&lt;/p&gt;
&lt;p&gt;A expressão &lt;tt class="docutils literal"&gt;(True) and (True)&lt;/tt&gt;, se comparada com a &lt;strong&gt;Tabela Lógica de Valores&lt;/strong&gt;, tem-se que o valor decorrente dessa segunda análise, será True, até porque, &lt;tt class="docutils literal"&gt;True and True == True&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conectivo-de-disjuncao-ou"&gt;
&lt;h2&gt;CONECTIVO DE DISJUNÇÃO &lt;tt class="docutils literal"&gt;OU&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;conectivo lógico de disjunção OU&lt;/strong&gt; liga a expressão a sua esquerda a expressão a sua direita. Expressões com o uso do &lt;strong&gt;conectivo de disjunção&lt;/strong&gt; dão origem a frases em Português  mais ou menos assim: &lt;tt class="docutils literal"&gt;A é verdadeiro OU B é verdadeiro&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;operador lógico OU&lt;/strong&gt; sempre precisará que uma das 2 &lt;strong&gt;sub-expressões&lt;/strong&gt; conectadas sejam verdadeiras para que, a expressão num todo seja verdadeira.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ou&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A expressão lógica composta que temos no código acima, será desmembrada como estudado anteriormente, e agora, para que a avaliação seja verdadeira, uma das 2 expressões simples precisam ser verdadeiras.&lt;/p&gt;
&lt;p&gt;A primeira expressão &lt;tt class="docutils literal"&gt;(x &amp;gt; 10)&lt;/tt&gt;, a variável``x`` está declarada na linha anterior e inicializada com o valor igual a 1, logo, essa expressão é falsa, até porque, o valor de &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; não é maior do que 10.&lt;/p&gt;
&lt;p&gt;A segunda expressão &lt;tt class="docutils literal"&gt;(x &amp;lt; 100)&lt;/tt&gt; está perguntando se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é menor do que o número 100. Essa expressão é verdadeira, até porque, o número 1 é menor do que o número 100.&lt;/p&gt;
&lt;p&gt;No código a seguir, temos a expressão originada a partir do código anterior.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora, temos que o primeiro &lt;strong&gt;valor lógico&lt;/strong&gt; é falso, enquanto o segundo é verdadeiro. Esse valores estão ligados pelo &lt;strong&gt;conectivo de disjunção&lt;/strong&gt; que será verdadeiro caso uma das sub-expressões o seja. Como o segundo valor lógico é verdadeiro, o valor decorrente dessa &lt;strong&gt;análise lógica&lt;/strong&gt; será verdadeiro.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="expressoes-simples-e-compostas"&gt;
&lt;h2&gt;EXPRESSÕES SIMPLES E COMPOSTAS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;operadores relacionais&lt;/strong&gt; obtém a relação entre os operandos e, por isso, podemos chamar esse tipo de expressão como sendo, &lt;strong&gt;expressões simples&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As &lt;strong&gt;expressões compostas&lt;/strong&gt;, por sua vez, são a união de 2 ou mais expressões simples e, ligadas por algum &lt;strong&gt;conectivo lógico&lt;/strong&gt;. A seguir, temos um exemplo utilizando o &lt;strong&gt;conectivo lógico de conjunção&lt;/strong&gt; que une 2 expressões e dá origem a uma nova &lt;strong&gt;expressão lógica&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
EXEMPLO 1
isso E isso

EXEMPLO 2
x E y
&lt;/pre&gt;
&lt;p&gt;Em ambos exemplos, estamos unindo 2 membros, mas não estamos perguntando nada. Porém, a frase correta e que é utilizada pela grande maioria das linguagens de programação, senão todas, é a seguinte: &lt;tt class="docutils literal"&gt;A é verdadeiro e B é verdadeiro, logo ...&lt;/tt&gt;. Chamamos isso de &lt;tt class="docutils literal"&gt;expressão lógica&lt;/tt&gt; ou melhor, &lt;tt class="docutils literal"&gt;expressão lógica composta&lt;/tt&gt;, até porque, a expressão se origina de duas outras expressões, isto é, a que está ao lado esquerdo do operador relacional e a expressão que está ao seu lado direito.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="operadores"></category><category term="operadores lógicos"></category><category term="blog"></category></entry><entry><title>Ordenamento de Listas em Python</title><link href="http://excript.com/python/ordenamento-lista-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/ordenamento-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o ordenamento de lista, a ordem padrão, como inverter a ordem e outras funcionalidades disponibilizadas pela biblioteca padrão do Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="listas"></category><category term="ordenamento"></category></entry><entry><title>Parâmetros de Função em Python</title><link href="http://excript.com/python/parametro-de-funcao-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/parametro-de-funcao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar os parâmetros das funções e a sintaxe que a linguagem Python disponibiliza para manusermos esses atributos. Aprenderemos o conceito e a diferença entre função e argumento e aprenderemos como utiliza-los corretamente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Parâmeros default em Python</title><link href="http://excript.com/python/parametro-default-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/parametro-default-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula continuaremos o estudo dos parâmetros e iremos aprofundar nosso entendimento com a definição e a capacidade de definirmos parâmetros default em nossas funções.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Quantidade de Itens em Python</title><link href="http://excript.com/python/quantidade-de-itens-lista-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/quantidade-de-itens-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprenderemos como saber a quantidade de elementos contidos numa lista, ou então, a quantidade de vezes que determinado elemento está contido ou mesmo, se o elemento está ou não contido.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Tuplas em Python</title><link href="http://excript.com/python/tuplas-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/tuplas-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as Tuplas, isto é, uma Estrutura de Dados semelhante as Listas porém imutável.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category></entry><entry><title>Estrutura de repetição while em Python</title><link href="http://excript.com/python/while-else-python.html" rel="alternate"></link><published>2016-01-01T00:00:00-02:00</published><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-01-01:python/while-else-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a instrução "while" que é, a estrutura de repetição mais simples do Python, onde definimos uma expressão e um mesmo bloco será executado enquanto a expressão definida for verdadeira&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;br&gt;
    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O texto desta aula ainda não está disponível.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;while&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;else&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="while"></category><category term="while loop"></category></entry></feed>