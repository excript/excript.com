<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>eXcript</title><link href="http://excript.com/" rel="alternate"></link><link href="http://feeds.excript.com/feeds/while.rss.xml" rel="self"></link><id>http://excript.com/</id><updated>2016-06-27T18:15:00-03:00</updated><entry><title>Estrutura de repetição while em Python</title><link href="http://excript.com/python/while-else-python.html" rel="alternate"></link><published>2016-06-27T18:15:00-03:00</published><updated>2016-06-27T18:15:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-27:python/while-else-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a instrução "while" que é, a estrutura de repetição mais simples do Python, onde definimos uma expressão e um mesmo bloco será executado enquanto a expressão definida for verdadeira&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="estrutura-while"&gt;
&lt;h2&gt;ESTRUTURA &lt;code&gt;while&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Laço de Repetição&lt;/strong&gt; &lt;code&gt;while&lt;/code&gt; repete um bloco de instrução enquanto a condição definida em seu cabeçalho seja verdadeira.&lt;/p&gt;
&lt;p&gt;A estrutura &lt;code&gt;while&lt;/code&gt; talvez seja a mais simples para entendermos nesse momento. Devemos entender a mesma como sendo uma variante da Tomada de Decisão, isto é, da instrução &lt;code&gt;if&lt;/code&gt;.  Porém, ao contrário de repetir o bloco uma única vez, caso a expressão definida seja verdadeira, o bloco será executado indefinidamente, até que a expressão &lt;strong&gt;se torne&lt;/strong&gt; falsa.&lt;/p&gt;
&lt;p&gt;É super importante entender que a expressão &lt;strong&gt;deverá&lt;/strong&gt;, obrigatoriamente, deixar de ser verdadeira para que a repetição seja interrompida. Do contrário, a aplicação irá &lt;strong&gt;congelar&lt;/strong&gt;, isto é, a aplicação irá travar.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, temos uma variável de nome &lt;code&gt;conta&lt;/code&gt; inicializada com o valor 0. Em seguida, utilizamos a instrução &lt;code&gt;while&lt;/code&gt; para definir uma &lt;tt class="docutils literal"&gt;Estrutura de Repetição&lt;/tt&gt; e, a cada ciclo, o bloco na seguida, que contém 2 instruções, será executado. Neste bloco, somamos uma unidade à variável &lt;code&gt;conta&lt;/code&gt; e imprimimos o valor da mesma, a cada ciclo, na saida padrão com a função &lt;code&gt;print()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="estrutura-else"&gt;
&lt;h2&gt;ESTRUTURA &lt;code&gt;else&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A linguagem Python define a instrução &lt;code&gt;else&lt;/code&gt; como uma subestrutura da instrução &lt;code&gt;while&lt;/code&gt;. Essa instrução define um bloco de código que será executado uma única vez, quando a expressão definida no cabeçalho da instrução &lt;code&gt;while&lt;/code&gt;, deixar de ser verdadeira.&lt;/p&gt;
&lt;p&gt;Vale repetir, que o bloco da instrução &lt;code&gt;else&lt;/code&gt; será executado uma única vez, devido ao fato de que a estrutura interrompe a execução dos ciclos quando a expressão deixar de ser verdadeira.&lt;/p&gt;
&lt;p&gt;Àqueles que entenderam a &lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;Tomada de Decisão&lt;/a&gt;, isto é, a instrução &lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;if&lt;/a&gt;, deverão ter facilidade em manipular Laços de Repetição &lt;code&gt;while&lt;/code&gt;, como também, conseguirão facilmente implementar a instrução &lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;while&lt;/a&gt; . Isso porque, como já dito, a instrução &lt;code&gt;while&lt;/code&gt; funciona da mesma forma que a instrução &lt;code&gt;if&lt;/code&gt;, e o que diferencia as mesmas é só e somente só a quantidade de vezes que o &lt;tt class="docutils literal"&gt;Bloco de Instrução&lt;/tt&gt; será executado.&lt;/p&gt;
&lt;p&gt;A seguir, temos o exemplo feito anteriormente, porém, agora, estamos implementando o &lt;tt class="docutils literal"&gt;Bloco de Instrução&lt;/tt&gt; para quando a expressão definida no cabeçalho da instrução &lt;code&gt;while&lt;/code&gt; deixar de ser verdadeira.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Valor da variável conta é: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, o &lt;tt class="docutils literal"&gt;Bloco de Instrução&lt;/tt&gt; para quando a expressão for verdadeira será executado até que o valor da variável &lt;code&gt;conta&lt;/code&gt; seja igual a 11. Nesse momento, quando a expressão passar a ser falsa falsa, o &lt;tt class="docutils literal"&gt;Bloco da Instrução&lt;/tt&gt; &lt;code&gt;else&lt;/code&gt; será executado e o &lt;tt class="docutils literal"&gt;Laço de Repetição&lt;/tt&gt; terá chego ao fim.&lt;/p&gt;
&lt;p&gt;É importante observar que a instrução &lt;code&gt;else&lt;/code&gt; funciona da mesma maneira àquela estudada na &lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;Tomada de Decisão&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="interrupcao-com-break"&gt;
&lt;h2&gt;INTERRUPÇÃO COM &lt;code&gt;break&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;code&gt;break&lt;/code&gt; finaliza abruptamente a execução das estruturas de repetição e assim, quando essa instrução for executada, o cursor de execução irá interromper a execução das instruções definidas pela &lt;tt class="docutils literal"&gt;Estrutura de Repetição&lt;/tt&gt; e irá saltar para a linha seguinte após o &lt;tt class="docutils literal"&gt;Laço de Repetição&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Em outras palavras, temos que quando a instrução &lt;code&gt;break&lt;/code&gt; for utilizada, o cursor de execução não irá passar por dentro do bloco definido pela instrução &lt;code&gt;else&lt;/code&gt;, até porque, a instrução &lt;code&gt;break&lt;/code&gt; encerra, &lt;strong&gt;imediatamente&lt;/strong&gt; a execução da &lt;tt class="docutils literal"&gt;Estrutura de Repetição&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;while&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;else&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="python"></category><category term="while"></category><category term="while loop"></category><category term="else"></category><category term="blog"></category></entry><entry><title>Introdução às Estruturas de Repetição em PHP</title><link href="http://excript.com/php/estruturas-de-repeticao-php.html" rel="alternate"></link><published>2016-06-01T00:30:00-03:00</published><updated>2016-06-01T00:30:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-01:php/estruturas-de-repeticao-php.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula iniciaremos o estudo das Estruturas de Repetição. Estudaremos as instrução que a linguagem PHP oferece para iterarmos estruturas e percorrermos os elementos de um Array.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Estrutura de repetição é uma ferramenta que as linguagens de programação proporcionam para que possamos executar um determinado bloco de instrução mais do que uma vez. Ou seja, o objetivo é proporcionar uma meio de execução de um trecho de código enquanto uma determinada condição for verdadeira.&lt;/p&gt;
&lt;p&gt;As expressões construídas com estas instrução podem ser utilizadas para decidirmos se vamos ou não executar um determinado bloco de instrução, ou então, para definirmos que um bloco será executado e por quantas vezes o será.&lt;/p&gt;
&lt;p&gt;O importante é termos em mente que a definição de condições é o que norteia a lógica de programação, até porque, se entendermos como uma expressão é construída, bastara aprendermos as estruturas da linguagem, e definir em cada uma a respectiva expressão lógica.&lt;/p&gt;
&lt;p&gt;Todos os operadores e todas as construções que estudamos anteriormente podem ser utilizadas na construção das expressões das estruturas de repetição, isto é, os operadores relacionais e os operadores lógicos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lacos-de-repeticao"&gt;
&lt;h2&gt;LAÇOS DE REPETIÇÃO&lt;/h2&gt;
&lt;p&gt;Para entendermos o que é um laço de repetição, vamos voltar para a primeira aula de tomada de decisão.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$x = 0;&lt;/span&gt;
&lt;span class="x"&gt;if($x &amp;lt;= 10){&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;quot;o valor de x eh &amp;quot; . $x&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acima declaramos uma variável e estabelecemos uma condição. Agora, vamos copiar o código, porém, ao invés de utilizarmos a instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, vamos alterar para &lt;tt class="docutils literal"&gt;while&lt;/tt&gt;. Do inglês, &lt;tt class="docutils literal"&gt;while&lt;/tt&gt; significa &lt;tt class="docutils literal"&gt;enquanto&lt;/tt&gt;, e na programação, a instrução &lt;tt class="docutils literal"&gt;while&lt;/tt&gt;, executará o seu bloco de instrução até que a condição definida seja satisfeita.&lt;/p&gt;
&lt;p&gt;Também vamos somar uma unidade a variável &lt;tt class="docutils literal"&gt;$x&lt;/tt&gt; dentro do bloco de instrução. Agora, vamos comparar ambos os código e estudar as semelhanças.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$x = 0;&lt;/span&gt;
&lt;span class="x"&gt;while($x &amp;lt; 10){&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;quot;o valor de x eh &amp;quot; . $x&lt;/span&gt;
&lt;span class="x"&gt;    $x = $x + 1;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quando utilizamos a instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, estamos verificando uma condição e caso a mesma for verdadeira, o bloco de instrução será executado (uma única vez). Da mesma forma temos com a instrução &lt;tt class="docutils literal"&gt;while&lt;/tt&gt;, enquanto a condição definida no cabeçalho for verificada, o bloco será executado. Ou seja, o bloco será executado &lt;tt class="docutils literal"&gt;enquanto&lt;/tt&gt; a condição estabelecida for atendida.&lt;/p&gt;
&lt;p&gt;Nós incrementando uma unidade à variável &lt;tt class="docutils literal"&gt;$x&lt;/tt&gt; a cada ciclo e também, verificamos o valor da variável no cabeçalho da estrutura, desta forma, conseguimos perceber que em um determinado momento o valor da condição será atendido, até porque, incrementando o valor da variável que utilizamos na expressão que decide se o bloco deve ou não ser executado.&lt;/p&gt;
&lt;p&gt;Por fim, se entendermos a instrução condicional &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, conseguimos entender também, a instrução &lt;tt class="docutils literal"&gt;while&lt;/tt&gt;, haja vista que ambas funcionam da mesma forma e o que diferencia as estruturas, é a quantidade de vezes que o bloco será repetido.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;//ESTRUTURAS DE REPETIÇÃO&lt;/span&gt;

&lt;span class="x"&gt;$x = 10;&lt;/span&gt;
&lt;span class="x"&gt;while($x&amp;lt;=20){&lt;/span&gt;
&lt;span class="x"&gt;    $x = $x + 1;&lt;/span&gt;
&lt;span class="x"&gt;    echo $x . &amp;quot;\n&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;//    echo &amp;quot;O valor da variável x é menor do que zero.&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="curso"></category><category term="php"></category><category term="laços de repetição"></category><category term="estrutura de repetição"></category><category term="looping"></category><category term="while"></category><category term="for"></category><category term="if"></category><category term="operadores relacionais"></category><category term="operadores lógicos"></category><category term="blog"></category></entry></feed>