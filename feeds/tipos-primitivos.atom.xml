<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>eXcript</title><link>http://excript.com/</link><description></description><lastBuildDate>Thu, 15 Jan 2015 22:03:00 -0200</lastBuildDate><item><title>Tipos Primitivos do C++</title><link>http://excript.com/cpp/tipos-primitivos-cpp.html</link><description>
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os tipos primitivos da linguagem C++, ou seja, os tipos de informação mais simples e que serão utilizados na construção de tipos abstratos de dados dos mais variados tipos.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Você sabe a resposta para essa perguntas? Nessa aula iremos conhecer a resposta a essas perguntas.
Pode-se dizer que agora aprenderemos um dos assuntos mais importante de qualquer linguagem, até porque, sem esses tipos de informações, não seria possível fazer praticamente nada.&lt;/p&gt;
&lt;p&gt;Nós temos que os Tipos Primitivos são os tipos de informações primárias, ou seja, o tipo primitivo é um conjunto formador de todas as outras estruturas. Por exemplo, um número é um valor de tipo primitivo, até porque, os números não são compostos por mais de um tipo de informação, e sim, são compostos somente de elementos numéricos.&lt;/p&gt;
&lt;p&gt;á um telefone ou CPF, também são estruturas numéricas, porém, essas estruturas possuem caracteres que não são números. Por exemplo: o traço, os três pontos num mesmo número, os parêntesis para isolar o DDD e assim por diante.&lt;/p&gt;
&lt;p&gt;Então, diz-se que um valor é do tipo primitivo quando este não é formado pela união de outros tipos. A seguir, nós temos uma lista que contém todos os tipos primitivos da linguagem C++.&lt;/p&gt;
&lt;div class="section" id="tipo-logico-bool"&gt;
&lt;h2&gt;TIPO LÓGICO &lt;cite&gt;bool&lt;/cite&gt;&lt;/h2&gt;
&lt;p&gt;Utilizado para guardar valores como true e false, por isso chamamos de tipo lógico&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caractere-char"&gt;
&lt;h2&gt;CARACTERE &lt;cite&gt;char&lt;/cite&gt;&lt;/h2&gt;
&lt;p&gt;Um variável do tipo char pode conter um único carácter, porém, podemos ter uma estrutura, como um Array onde contém uma lista de caracteres, ou seja, uma string&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="inteiro-int"&gt;
&lt;h2&gt;INTEIRO &lt;cite&gt;int&lt;/cite&gt;&lt;/h2&gt;
&lt;p&gt;O tipo int é aquele que possui valores negativos ou positivos, porém, sem casas decimais, isto é, somente números inteiros&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ponto-flutuante-float"&gt;
&lt;h2&gt;PONTO FLUTUANTE &lt;cite&gt;float&lt;/cite&gt;&lt;/h2&gt;
&lt;p&gt;O tipo float é aquele que pode armazenar informações como o preço. Utilizamos o float para as situações onde o número que iremos armazenar é relativamente pequeno&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ponto-flutuante-double"&gt;
&lt;h2&gt;PONTO FLUTUANTE &lt;cite&gt;double&lt;/cite&gt;&lt;/h2&gt;
&lt;p&gt;O tipo double funciona de maneira análoga ao tipo float, porém, em um tipo double conseguimos armazenar números decimais com uma precisão muito maior do que o tipo primitivo float&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sem-valor-void"&gt;
&lt;h2&gt;SEM VALOR &lt;cite&gt;void&lt;/cite&gt;&lt;/h2&gt;
&lt;p&gt;Por fim, temos o void, que significa a ausência de valores. Assim, quando precisarmos deixar explicito, por exemplo, que uma função não retorna valores, podemos utilizar o tipo void.&lt;/p&gt;
&lt;p&gt;Os tipos primitivos são tão importantes pois estes formam os tipos compostos, ou seja, compostos de vários tipos primitivos. Uma classe, ou uma estrutura struct são exemplos onde teremos, algumas vezes, centenas de variáveis primitivas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cláudio Rogério Carvalho Filho</dc:creator><pubDate>Thu, 15 Jan 2015 22:03:00 -0200</pubDate><guid isPermaLink="false">tag:excript.com,2015-01-15:cpp/tipos-primitivos-cpp.html</guid><category>curso</category><category>cpp</category><category>tipo</category><category>tipos primitivos</category><category>variavel</category></item></channel></rss>